GAS LISTING /tmp/ccAXF10R.s 			page 1


   1              		.file	"chevents.c"
   2              	# GNU C (Ubuntu 4.8.2-19ubuntu1) version 4.8.2 (x86_64-linux-gnu)
   3              	#	compiled by GNU C version 4.8.2, GMP version 5.1.3, MPFR version 3.1.2-p3, MPC version 1.0.1
   4              	# GGC heuristics: --param ggc-min-expand=97 --param ggc-min-heapsize=126309
   5              	# options passed:  -I . -I ../../../os/ports/GCC/SIMIA32
   6              	# -I ../../../os/kernel/include -I ../../../test -I ../../../os/hal/include
   7              	# -I ../../../os/hal/platforms/Posix -I ../../../boards/simulator
   8              	# -I ../../../os/various -imultilib 32 -imultiarch i386-linux-gnu
   9              	# -MD ../../../os/kernel/src/chevents.d -MF .dep/chevents.o.d -MP
  10              	# -MQ ../../../os/kernel/src/chevents.o -D SIMULATOR
  11              	# -D SHELL_USE_IPRINTF=FALSE ../../../os/kernel/src/chevents.c -m32
  12              	# -mtune=generic -march=i686
  13              	# -auxbase-strip ../../../os/kernel/src/chevents.o -ggdb -O2 -Wall -Wextra
  14              	# -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm -fstack-protector
  15              	# -Wformat -Wformat-security
  16              	# options enabled:  -faggressive-loop-optimizations
  17              	# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
  18              	# -fcaller-saves -fcombine-stack-adjustments -fcommon -fcompare-elim
  19              	# -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer-pop
  20              	# -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  21              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  22              	# -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  23              	# -fguess-branch-probability -fhoist-adjacent-loads -fident -fif-conversion
  24              	# -fif-conversion2 -findirect-inlining -finline -finline-atomics
  25              	# -finline-functions-called-once -finline-small-functions -fipa-cp
  26              	# -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  27              	# -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  28              	# -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
  29              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  30              	# -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
  31              	# -foptimize-strlen -fpartial-inlining -fpcc-struct-return -fpeephole
  32              	# -fpeephole2 -fprefetch-loop-arrays -free -fregmove -freorder-blocks
  33              	# -freorder-functions -frerun-cse-after-loop
  34              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  35              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  36              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  37              	# -fsched-stalled-insns-dep -fschedule-insns2 -fshow-column -fshrink-wrap
  38              	# -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
  39              	# -fstack-protector -fstrict-aliasing -fstrict-overflow
  40              	# -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  41              	# -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  42              	# -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
  43              	# -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  44              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  45              	# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	# -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  47              	# -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize
  48              	# -ftree-slsr -ftree-sra -ftree-switch-conversion -ftree-tail-merge
  49              	# -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
  50              	# -funwind-tables -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  51              	# -fzero-initialized-in-bss -m32 -m80387 -m96bit-long-double
  52              	# -maccumulate-outgoing-args -malign-stringops -mfancy-math-387
  53              	# -mfp-ret-in-387 -mglibc -mieee-fp -mlong-double-80 -mno-red-zone
  54              	# -mno-sse4 -mpush-args -msahf -mtls-direct-seg-refs
  55              	
  56              		.text
  57              	.Ltext0:
GAS LISTING /tmp/ccAXF10R.s 			page 2


  58              		.p2align 4,,15
  59              		.globl	chEvtRegisterMask
  60              		.type	chEvtRegisterMask, @function
  61              	chEvtRegisterMask:
  62              	.LFB7:
  63              		.file 1 "../../../os/kernel/src/chevents.c"
  64              		.loc 1 85 0
  65              		.cfi_startproc
  66              	.LVL0:
  67              		.loc 1 85 0
  68 0000 8B542404 		movl	4(%esp), %edx	# esp, esp
  69 0004 8B442408 		movl	8(%esp), %eax	# elp, elp
  70              		.loc 1 89 0
  71              	#APP
  72              	# 89 "../../../os/kernel/src/chevents.c" 1
   1              	/*
   2              	    ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3              	                 2011,2012,2013 Giovanni Di Sirio.
   4              	
   5              	    This file is part of ChibiOS/RT.
   6              	
   7              	    ChibiOS/RT is free software; you can redistribute it and/or modify
   8              	    it under the terms of the GNU General Public License as published by
   9              	    the Free Software Foundation; either version 3 of the License, or
  10              	    (at your option) any later version.
  11              	
  12              	    ChibiOS/RT is distributed in the hope that it will be useful,
  13              	    but WITHOUT ANY WARRANTY; without even the implied warranty of
  14              	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15              	    GNU General Public License for more details.
  16              	
  17              	    You should have received a copy of the GNU General Public License
  18              	    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19              	
  20              	                                      ---
  21              	
  22              	    A special exception to the GPL can be applied should you wish to distribute
  23              	    a combined work that includes ChibiOS/RT, without being obliged to provide
  24              	    the source code for any proprietary components. See the file exception.txt
  25              	    for full details of how and when the exception can be applied.
  26              	*/
  27              	/*
  28              	   Concepts and parts of this file have been contributed by Scott (skute).
  29              	 */
  30              	
  31              	/**
  32              	 * @file    chevents.c
  33              	 * @brief   Events code.
  34              	 *
  35              	 * @addtogroup events
  36              	 * @details Event Flags, Event Sources and Event Listeners.
  37              	 *          <h2>Operation mode</h2>
  38              	 *          Each thread has a mask of pending event flags inside its @p Thread
  39              	 *          structure.
  40              	 *          Operations defined for event flags:
  41              	 *          - <b>Wait</b>, the invoking thread goes to sleep until a certain
  42              	 *            AND/OR combination of event flags becomes pending.
GAS LISTING /tmp/ccAXF10R.s 			page 3


  43              	 *          - <b>Clear</b>, a mask of event flags is cleared from the pending
  44              	 *            events mask, the cleared event flags mask is returned (only the
  45              	 *            flags that were actually pending and then cleared).
  46              	 *          - <b>Signal</b>, an event mask is directly ORed to the mask of the
  47              	 *            signaled thread.
  48              	 *          - <b>Broadcast</b>, each thread registered on an Event Source is
  49              	 *            signaled with the event flags specified in its Event Listener.
  50              	 *          - <b>Dispatch</b>, an events mask is scanned and for each bit set
  51              	 *            to one an associated handler function is invoked. Bit masks are
  52              	 *            scanned from bit zero upward.
  53              	 *          .
  54              	 *          An Event Source is a special object that can be "broadcasted" by
  55              	 *          a thread or an interrupt service routine. Broadcasting an Event
  56              	 *          Source has the effect that all the threads registered on the
  57              	 *          Event Source will be signaled with an events mask.<br>
  58              	 *          An unlimited number of Event Sources can exists in a system and
  59              	 *          each thread can be listening on an unlimited number of
  60              	 *          them.
  61              	 * @pre     In order to use the Events APIs the @p CH_USE_EVENTS option must be
  62              	 *          enabled in @p chconf.h.
  63              	 * @post    Enabling events requires 1-4 (depending on the architecture)
  64              	 *          extra bytes in the @p Thread structure.
  65              	 * @{
  66              	 */
  67              	
  68              	#include "ch.h"
  69              	
  70              	#if CH_USE_EVENTS || defined(__DOXYGEN__)
  71              	/**
  72              	 * @brief   Registers an Event Listener on an Event Source.
  73              	 * @details Once a thread has registered as listener on an event source it
  74              	 *          will be notified of all events broadcasted there.
  75              	 * @note    Multiple Event Listeners can specify the same bits to be ORed to
  76              	 *          different threads.
  77              	 *
  78              	 * @param[in] esp       pointer to the  @p EventSource structure
  79              	 * @param[out] elp      pointer to the @p EventListener structure
  80              	 * @param[in] mask      the mask of event flags to be ORed to the thread when
  81              	 *                      the event source is broadcasted
  82              	 *
  83              	 * @api
  84              	 */
  85              	void chEvtRegisterMask(EventSource *esp, EventListener *elp, eventmask_t mask) {
  86              	
  87              	  chDbgCheck((esp != NULL) && (elp != NULL), "chEvtRegisterMask");
  88              	
  89 0008 90       	  chSysLock();
  90              	  elp->el_next     = esp->es_next;
  73              		nop
  74              	# 0 "" 2
  75              		.loc 1 90 0
  76              	#NO_APP
  77 0009 8B0A     		movl	(%edx), %ecx	# esp_1(D)->es_next, esp_1(D)->es_next
  78 000b 8908     		movl	%ecx, (%eax)	# esp_1(D)->es_next, elp_2(D)->el_next
  79              		.loc 1 91 0
  80 000d 8902     		movl	%eax, (%edx)	# elp, esp_1(D)->es_next
  81              		.loc 1 92 0
GAS LISTING /tmp/ccAXF10R.s 			page 4


  82 000f 8B151800 		movl	rlist+24, %edx	# rlist.r_current, rlist.r_current
  82      0000
  83              		.loc 1 94 0
  84 0015 C7400C00 		movl	$0, 12(%eax)	#, elp_2(D)->el_flags
  84      000000
  85              		.loc 1 92 0
  86 001c 895004   		movl	%edx, 4(%eax)	# rlist.r_current, elp_2(D)->el_listener
  87              		.loc 1 93 0
  88 001f 8B54240C 		movl	12(%esp), %edx	# mask, mask
  89 0023 895008   		movl	%edx, 8(%eax)	# mask, elp_2(D)->el_mask
  90              		.loc 1 95 0
  91              	#APP
  92              	# 95 "../../../os/kernel/src/chevents.c" 1
  91              	  esp->es_next     = elp;
  92              	  elp->el_listener = currp;
  93              	  elp->el_mask     = mask;
  94              	  elp->el_flags    = 0;
  95 0026 90       	  chSysUnlock();
  96              	}
  93              		nop
  94              	# 0 "" 2
  95              	#NO_APP
  96 0027 C3       		ret
  97              		.cfi_endproc
  98              	.LFE7:
  99              		.size	chEvtRegisterMask, .-chEvtRegisterMask
 100 0028 908DB426 		.p2align 4,,15
 100      00000000 
 101              		.globl	chEvtUnregister
 102              		.type	chEvtUnregister, @function
 103              	chEvtUnregister:
 104              	.LFB8:
 105              		.loc 1 111 0
 106              		.cfi_startproc
 107              	.LVL1:
 108 0030 53       		pushl	%ebx	#
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.loc 1 111 0
 112 0031 8B4C2408 		movl	8(%esp), %ecx	# esp, esp
 113              	.LVL2:
 114 0035 8B5C240C 		movl	12(%esp), %ebx	# elp, elp
 115              		.loc 1 117 0
 116              	#APP
 117              	# 117 "../../../os/kernel/src/chevents.c" 1
  97              	
  98              	/**
  99              	 * @brief   Unregisters an Event Listener from its Event Source.
 100              	 * @note    If the event listener is not registered on the specified event
 101              	 *          source then the function does nothing.
 102              	 * @note    For optimal performance it is better to perform the unregister
 103              	 *          operations in inverse order of the register operations (elements
 104              	 *          are found on top of the list).
 105              	 *
 106              	 * @param[in] esp       pointer to the  @p EventSource structure
 107              	 * @param[in] elp       pointer to the @p EventListener structure
 108              	 *
GAS LISTING /tmp/ccAXF10R.s 			page 5


 109              	 * @api
 110              	 */
 111              	void chEvtUnregister(EventSource *esp, EventListener *elp) {
 112              	  EventListener *p;
 113              	
 114              	  chDbgCheck((esp != NULL) && (elp != NULL), "chEvtUnregister");
 115              	
 116              	  p = (EventListener *)esp;
 117 0039 90       	  chSysLock();
 118              	  while (p->el_next != (EventListener *)esp) {
 118              		nop
 119              	# 0 "" 2
 120              		.loc 1 116 0
 121              	#NO_APP
 122 003a 89CA     		movl	%ecx, %edx	# esp, esp
 123              		.loc 1 118 0
 124 003c EB08     		jmp	.L3	#
 125              	.LVL3:
 126 003e 6690     		.p2align 4,,7
 127              		.p2align 3
 128              	.L6:
 129              		.loc 1 119 0
 130 0040 39C3     		cmpl	%eax, %ebx	# esp, elp
 131 0042 7414     		je	.L9	#,
 132 0044 89C2     		movl	%eax, %edx	# esp, esp
 133              	.LVL4:
 134              	.L3:
 135              		.loc 1 118 0 discriminator 1
 136 0046 8B02     		movl	(%edx), %eax	# MEM[(struct EventListener *)esp_1].el_next, esp
 137 0048 39C8     		cmpl	%ecx, %eax	# esp, esp
 138 004a 75F4     		jne	.L6	#,
 139              	.L5:
 140              		.loc 1 125 0
 141              	#APP
 142              	# 125 "../../../os/kernel/src/chevents.c" 1
 119              	    if (p->el_next == elp) {
 120              	      p->el_next = elp->el_next;
 121              	      break;
 122              	    }
 123              	    p = p->el_next;
 124              	  }
 125 004c 90       	  chSysUnlock();
 126              	}
 143              		nop
 144              	# 0 "" 2
 145              		.loc 1 126 0
 146              	#NO_APP
 147 004d 5B       		popl	%ebx	#
 148              		.cfi_remember_state
 149              		.cfi_restore 3
 150              		.cfi_def_cfa_offset 4
 151              	.LVL5:
 152 004e 6690     		.p2align 4,,2
 153 0050 C3       		ret
 154              	.LVL6:
 155              		.p2align 4,,7
 156 0051 8DB42600 		.p2align 3
GAS LISTING /tmp/ccAXF10R.s 			page 6


 156      000000
 157              	.L9:
 158              		.cfi_restore_state
 159              		.loc 1 120 0
 160 0058 8B03     		movl	(%ebx), %eax	# elp_4(D)->el_next, D.2233
 161 005a 8902     		movl	%eax, (%edx)	# D.2233, MEM[(struct EventListener *)esp_9].el_next
 162              		.loc 1 121 0
 163 005c EBEE     		jmp	.L5	#
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	chEvtUnregister, .-chEvtUnregister
 167 005e 6690     		.p2align 4,,15
 168              		.globl	chEvtGetAndClearEvents
 169              		.type	chEvtGetAndClearEvents, @function
 170              	chEvtGetAndClearEvents:
 171              	.LFB9:
 172              		.loc 1 136 0
 173              		.cfi_startproc
 174              	.LVL7:
 175 0060 53       		pushl	%ebx	#
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.loc 1 136 0
 179 0061 8B4C2408 		movl	8(%esp), %ecx	# mask, mask
 180              		.loc 1 139 0
 181              	#APP
 182              	# 139 "../../../os/kernel/src/chevents.c" 1
 127              	
 128              	/**
 129              	 * @brief   Clears the pending events specified in the mask.
 130              	 *
 131              	 * @param[in] mask      the events to be cleared
 132              	 * @return              The pending events that were cleared.
 133              	 *
 134              	 * @api
 135              	 */
 136              	eventmask_t chEvtGetAndClearEvents(eventmask_t mask) {
 137              	  eventmask_t m;
 138              	
 139 0065 90       	  chSysLock();
 140              	
 183              		nop
 184              	# 0 "" 2
 185              		.loc 1 141 0
 186              	#NO_APP
 187 0066 8B1D1800 		movl	rlist+24, %ebx	# rlist.r_current, D.2236
 187      0000
 188              		.loc 1 142 0
 189 006c 89CA     		movl	%ecx, %edx	# mask, tmp68
 190 006e F7D2     		notl	%edx	# tmp68
 191              		.loc 1 141 0
 192 0070 8B4338   		movl	56(%ebx), %eax	# _2->p_epending, D.2237
 193              	.LVL8:
 194              		.loc 1 142 0
 195 0073 21C2     		andl	%eax, %edx	# D.2237, tmp68
 196 0075 895338   		movl	%edx, 56(%ebx)	# tmp68, _2->p_epending
 197              		.loc 1 144 0
GAS LISTING /tmp/ccAXF10R.s 			page 7


 198              	#APP
 199              	# 144 "../../../os/kernel/src/chevents.c" 1
 141              	  m = currp->p_epending & mask;
 142              	  currp->p_epending &= ~mask;
 143              	
 144 0078 90       	  chSysUnlock();
 145              	  return m;
 200              		nop
 201              	# 0 "" 2
 202              		.loc 1 141 0
 203              	#NO_APP
 204 0079 21C8     		andl	%ecx, %eax	# mask, m
 205              	.LVL9:
 206              		.loc 1 146 0
 207 007b 5B       		popl	%ebx	#
 208              		.cfi_restore 3
 209              		.cfi_def_cfa_offset 4
 210 007c C3       		ret
 211              		.cfi_endproc
 212              	.LFE9:
 213              		.size	chEvtGetAndClearEvents, .-chEvtGetAndClearEvents
 214 007d 8D7600   		.p2align 4,,15
 215              		.globl	chEvtAddEvents
 216              		.type	chEvtAddEvents, @function
 217              	chEvtAddEvents:
 218              	.LFB10:
 219              		.loc 1 157 0
 220              		.cfi_startproc
 221              	.LVL10:
 222              		.loc 1 157 0
 223 0080 8B442404 		movl	4(%esp), %eax	# mask, D.2241
 224              		.loc 1 159 0
 225              	#APP
 226              	# 159 "../../../os/kernel/src/chevents.c" 1
 146              	}
 147              	
 148              	/**
 149              	 * @brief   Adds (OR) a set of event flags on the current thread, this is
 150              	 *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 151              	 *
 152              	 * @param[in] mask      the event flags to be added
 153              	 * @return              The current pending events mask.
 154              	 *
 155              	 * @api
 156              	 */
 157              	eventmask_t chEvtAddEvents(eventmask_t mask) {
 158              	
 159 0084 90       	  chSysLock();
 160              	
 227              		nop
 228              	# 0 "" 2
 229              		.loc 1 161 0
 230              	#NO_APP
 231 0085 8B151800 		movl	rlist+24, %edx	# rlist.r_current, D.2240
 231      0000
 232 008b 0B4238   		orl	56(%edx), %eax	# _2->p_epending, D.2241
 233 008e 894238   		movl	%eax, 56(%edx)	# D.2241, _2->p_epending
GAS LISTING /tmp/ccAXF10R.s 			page 8


 234              	.LVL11:
 235              		.loc 1 163 0
 236              	#APP
 237              	# 163 "../../../os/kernel/src/chevents.c" 1
 161              	  mask = (currp->p_epending |= mask);
 162              	
 163 0091 90       	  chSysUnlock();
 164              	  return mask;
 238              		nop
 239              	# 0 "" 2
 240              		.loc 1 165 0
 241              	#NO_APP
 242 0092 C3       		ret
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	chEvtAddEvents, .-chEvtAddEvents
 246 0093 8DB60000 		.p2align 4,,15
 246      00008DBC 
 246      27000000 
 246      00
 247              		.globl	chEvtGetAndClearFlags
 248              		.type	chEvtGetAndClearFlags, @function
 249              	chEvtGetAndClearFlags:
 250              	.LFB12:
 251              		.loc 1 209 0
 252              		.cfi_startproc
 253              	.LVL12:
 254              		.loc 1 209 0
 255 00a0 8B542404 		movl	4(%esp), %edx	# elp, elp
 256              		.loc 1 212 0
 257              	#APP
 258              	# 212 "../../../os/kernel/src/chevents.c" 1
 165              	}
 166              	
 167              	/**
 168              	 * @brief   Signals all the Event Listeners registered on the specified Event
 169              	 *          Source.
 170              	 * @details This function variants ORs the specified event flags to all the
 171              	 *          threads registered on the @p EventSource in addition to the event
 172              	 *          flags specified by the threads themselves in the
 173              	 *          @p EventListener objects.
 174              	 * @post    This function does not reschedule so a call to a rescheduling
 175              	 *          function must be performed before unlocking the kernel. Note that
 176              	 *          interrupt handlers always reschedule on exit so an explicit
 177              	 *          reschedule must not be performed in ISRs.
 178              	 *
 179              	 * @param[in] esp       pointer to the @p EventSource structure
 180              	 * @param[in] flags     the flags set to be added to the listener flags mask
 181              	 *
 182              	 * @iclass
 183              	 */
 184              	void chEvtBroadcastFlagsI(EventSource *esp, flagsmask_t flags) {
 185              	  EventListener *elp;
 186              	
 187              	  chDbgCheckClassI();
 188              	  chDbgCheck(esp != NULL, "chEvtBroadcastMaskI");
 189              	
GAS LISTING /tmp/ccAXF10R.s 			page 9


 190              	  elp = esp->es_next;
 191              	  while (elp != (EventListener *)esp) {
 192              	    elp->el_flags |= flags;
 193              	    chEvtSignalI(elp->el_listener, elp->el_mask);
 194              	    elp = elp->el_next;
 195              	  }
 196              	}
 197              	
 198              	/**
 199              	 * @brief   Returns the flags associated to an @p EventListener.
 200              	 * @details The flags are returned and the @p EventListener flags mask is
 201              	 *          cleared.
 202              	 *
 203              	 * @param[in] elp       pointer to the @p EventListener structure
 204              	 * @return              The flags added to the listener by the associated
 205              	 *                      event source.
 206              	 *
 207              	 * @api
 208              	 */
 209              	flagsmask_t chEvtGetAndClearFlags(EventListener *elp) {
 210              	  flagsmask_t flags;
 211              	
 212 00a4 90       	  chSysLock();
 213              	
 259              		nop
 260              	# 0 "" 2
 261              		.loc 1 214 0
 262              	#NO_APP
 263 00a5 8B420C   		movl	12(%edx), %eax	# elp_2(D)->el_flags, flags
 264              	.LVL13:
 265              		.loc 1 215 0
 266 00a8 C7420C00 		movl	$0, 12(%edx)	#, elp_2(D)->el_flags
 266      000000
 267              		.loc 1 217 0
 268              	#APP
 269              	# 217 "../../../os/kernel/src/chevents.c" 1
 214              	  flags = elp->el_flags;
 215              	  elp->el_flags = 0;
 216              	
 217 00af 90       	  chSysUnlock();
 218              	  return flags;
 270              		nop
 271              	# 0 "" 2
 272              		.loc 1 219 0
 273              	#NO_APP
 274 00b0 C3       		ret
 275              		.cfi_endproc
 276              	.LFE12:
 277              		.size	chEvtGetAndClearFlags, .-chEvtGetAndClearFlags
 278 00b1 EB0D9090 		.p2align 4,,15
 278      90909090 
 278      90909090 
 278      909090
 279              		.globl	chEvtSignalI
 280              		.type	chEvtSignalI, @function
 281              	chEvtSignalI:
 282              	.LFB14:
GAS LISTING /tmp/ccAXF10R.s 			page 10


 283              		.loc 1 251 0
 284              		.cfi_startproc
 285              	.LVL14:
 286 00c0 83EC1C   		subl	$28, %esp	#,
 287              		.cfi_def_cfa_offset 32
 288              		.loc 1 251 0
 289 00c3 8B442420 		movl	32(%esp), %eax	# tp, tp
 290 00c7 8B542424 		movl	36(%esp), %edx	# mask, D.2248
 291              		.loc 1 258 0
 292 00cb 0FB6481C 		movzbl	28(%eax), %ecx	# tp_2(D)->p_state, D.2249
 293              		.loc 1 256 0
 294 00cf 0B5038   		orl	56(%eax), %edx	# tp_2(D)->p_epending, D.2248
 295              		.loc 1 258 0
 296 00d2 80F908   		cmpb	$8, %cl	#, D.2249
 297              		.loc 1 256 0
 298 00d5 895038   		movl	%edx, 56(%eax)	# D.2248, tp_2(D)->p_epending
 299              		.loc 1 258 0
 300 00d8 742E     		je	.L20	#,
 301              		.loc 1 259 0
 302 00da 80F909   		cmpb	$9, %cl	#, D.2249
 303 00dd 7409     		je	.L21	#,
 304              	.L14:
 305              		.loc 1 263 0
 306 00df 83C41C   		addl	$28, %esp	#,
 307              		.cfi_remember_state
 308              		.cfi_def_cfa_offset 4
 309 00e2 C3       		ret
 310              		.p2align 4,,7
 311 00e3 908D7426 		.p2align 3
 311      00
 312              	.L21:
 313              		.cfi_restore_state
 314              		.loc 1 261 0
 315 00e8 8B4824   		movl	36(%eax), %ecx	# tp_2(D)->p_u.ewmask, D.2248
 316 00eb 21CA     		andl	%ecx, %edx	# D.2248, D.2248
 317              		.loc 1 260 0
 318 00ed 39D1     		cmpl	%edx, %ecx	# D.2248, D.2248
 319 00ef 75EE     		jne	.L14	#,
 320              	.LVL15:
 321              	.LBB4:
 322              	.LBB5:
 323              		.loc 1 262 0
 324 00f1 890424   		movl	%eax, (%esp)	# tp,
 325 00f4 E8FCFFFF 		call	chSchReadyI	#
 325      FF
 326              	.LVL16:
 327 00f9 C7402400 		movl	$0, 36(%eax)	#, _14->p_u.rdymsg
 327      000000
 328              	.L22:
 329              	.LBE5:
 330              	.LBE4:
 331              		.loc 1 263 0
 332 0100 83C41C   		addl	$28, %esp	#,
 333              		.cfi_remember_state
 334              		.cfi_def_cfa_offset 4
 335 0103 C3       		ret
 336              	.LVL17:
GAS LISTING /tmp/ccAXF10R.s 			page 11


 337              		.p2align 4,,7
 338 0104 8D742600 		.p2align 3
 339              	.L20:
 340              		.cfi_restore_state
 341              		.loc 1 258 0 discriminator 1
 342 0108 855024   		testl	%edx, 36(%eax)	# D.2248, tp_2(D)->p_u.ewmask
 343 010b 74D2     		je	.L14	#,
 344              	.LVL18:
 345              	.LBB7:
 346              	.LBB6:
 347              		.loc 1 262 0
 348 010d 890424   		movl	%eax, (%esp)	# tp,
 349 0110 E8FCFFFF 		call	chSchReadyI	#
 349      FF
 350              	.LVL19:
 351 0115 C7402400 		movl	$0, 36(%eax)	#, _14->p_u.rdymsg
 351      000000
 352 011c EBE2     		jmp	.L22	#
 353              	.LBE6:
 354              	.LBE7:
 355              		.cfi_endproc
 356              	.LFE14:
 357              		.size	chEvtSignalI, .-chEvtSignalI
 358 011e 6690     		.p2align 4,,15
 359              		.globl	chEvtBroadcastFlagsI
 360              		.type	chEvtBroadcastFlagsI, @function
 361              	chEvtBroadcastFlagsI:
 362              	.LFB11:
 363              		.loc 1 184 0
 364              		.cfi_startproc
 365              	.LVL20:
 366 0120 57       		pushl	%edi	#
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369 0121 56       		pushl	%esi	#
 370              		.cfi_def_cfa_offset 12
 371              		.cfi_offset 6, -12
 372 0122 53       		pushl	%ebx	#
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 3, -16
 375 0123 83EC10   		subl	$16, %esp	#,
 376              		.cfi_def_cfa_offset 32
 377              		.loc 1 184 0
 378 0126 8B742420 		movl	32(%esp), %esi	# esp, esp
 379 012a 8B7C2424 		movl	36(%esp), %edi	# flags, flags
 380              		.loc 1 190 0
 381 012e 8B1E     		movl	(%esi), %ebx	# esp_4(D)->es_next, elp
 382              	.LVL21:
 383              		.loc 1 191 0
 384 0130 39DE     		cmpl	%ebx, %esi	# elp, esp
 385 0132 741F     		je	.L23	#,
 386              		.p2align 4,,7
 387 0134 8D742600 		.p2align 3
 388              	.L27:
 389              		.loc 1 193 0
 390 0138 8B4308   		movl	8(%ebx), %eax	# elp_16->el_mask, elp_16->el_mask
 391              		.loc 1 192 0
GAS LISTING /tmp/ccAXF10R.s 			page 12


 392 013b 097B0C   		orl	%edi, 12(%ebx)	# flags, elp_16->el_flags
 393              		.loc 1 193 0
 394 013e 89442404 		movl	%eax, 4(%esp)	# elp_16->el_mask,
 395 0142 8B4304   		movl	4(%ebx), %eax	# elp_16->el_listener, elp_16->el_listener
 396 0145 890424   		movl	%eax, (%esp)	# elp_16->el_listener,
 397 0148 E8FCFFFF 		call	chEvtSignalI	#
 397      FF
 398              	.LVL22:
 399              		.loc 1 194 0
 400 014d 8B1B     		movl	(%ebx), %ebx	# elp_16->el_next, elp
 401              	.LVL23:
 402              		.loc 1 191 0
 403 014f 39DE     		cmpl	%ebx, %esi	# elp, esp
 404 0151 75E5     		jne	.L27	#,
 405              	.L23:
 406              		.loc 1 196 0
 407 0153 83C410   		addl	$16, %esp	#,
 408              		.cfi_def_cfa_offset 16
 409 0156 5B       		popl	%ebx	#
 410              		.cfi_restore 3
 411              		.cfi_def_cfa_offset 12
 412              	.LVL24:
 413 0157 5E       		popl	%esi	#
 414              		.cfi_restore 6
 415              		.cfi_def_cfa_offset 8
 416 0158 5F       		popl	%edi	#
 417              		.cfi_restore 7
 418              		.cfi_def_cfa_offset 4
 419 0159 C3       		ret
 420              		.cfi_endproc
 421              	.LFE11:
 422              		.size	chEvtBroadcastFlagsI, .-chEvtBroadcastFlagsI
 423 015a 8DB60000 		.p2align 4,,15
 423      0000
 424              		.globl	chEvtSignal
 425              		.type	chEvtSignal, @function
 426              	chEvtSignal:
 427              	.LFB13:
 428              		.loc 1 229 0
 429              		.cfi_startproc
 430              	.LVL25:
 431 0160 83EC1C   		subl	$28, %esp	#,
 432              		.cfi_def_cfa_offset 32
 433              		.loc 1 233 0
 434              	#APP
 435              	# 233 "../../../os/kernel/src/chevents.c" 1
 219              	}
 220              	
 221              	/**
 222              	 * @brief   Adds a set of event flags directly to specified @p Thread.
 223              	 *
 224              	 * @param[in] tp        the thread to be signaled
 225              	 * @param[in] mask      the event flags set to be ORed
 226              	 *
 227              	 * @api
 228              	 */
 229              	void chEvtSignal(Thread *tp, eventmask_t mask) {
GAS LISTING /tmp/ccAXF10R.s 			page 13


 230              	
 231              	  chDbgCheck(tp != NULL, "chEvtSignal");
 232              	
 233 0163 90       	  chSysLock();
 234              	  chEvtSignalI(tp, mask);
 436              		nop
 437              	# 0 "" 2
 438              		.loc 1 234 0
 439              	#NO_APP
 440 0164 8B442424 		movl	36(%esp), %eax	# mask, mask
 441 0168 89442404 		movl	%eax, 4(%esp)	# mask,
 442 016c 8B442420 		movl	32(%esp), %eax	# tp, tp
 443 0170 890424   		movl	%eax, (%esp)	# tp,
 444 0173 E8FCFFFF 		call	chEvtSignalI	#
 444      FF
 445              	.LVL26:
 446              		.loc 1 235 0
 447 0178 E8FCFFFF 		call	chSchRescheduleS	#
 447      FF
 448              	.LVL27:
 449              		.loc 1 236 0
 450              	#APP
 451              	# 236 "../../../os/kernel/src/chevents.c" 1
 235              	  chSchRescheduleS();
 236 017d 90       	  chSysUnlock();
 237              	}
 452              		nop
 453              	# 0 "" 2
 454              		.loc 1 237 0
 455              	#NO_APP
 456 017e 83C41C   		addl	$28, %esp	#,
 457              		.cfi_def_cfa_offset 4
 458 0181 C3       		ret
 459              		.cfi_endproc
 460              	.LFE13:
 461              		.size	chEvtSignal, .-chEvtSignal
 462 0182 8DB42600 		.p2align 4,,15
 462      0000008D 
 462      BC270000 
 462      0000
 463              		.globl	chEvtBroadcastFlags
 464              		.type	chEvtBroadcastFlags, @function
 465              	chEvtBroadcastFlags:
 466              	.LFB15:
 467              		.loc 1 278 0
 468              		.cfi_startproc
 469              	.LVL28:
 470 0190 83EC1C   		subl	$28, %esp	#,
 471              		.cfi_def_cfa_offset 32
 472              		.loc 1 280 0
 473              	#APP
 474              	# 280 "../../../os/kernel/src/chevents.c" 1
 238              	
 239              	/**
 240              	 * @brief   Adds a set of event flags directly to specified @p Thread.
 241              	 * @post    This function does not reschedule so a call to a rescheduling
 242              	 *          function must be performed before unlocking the kernel. Note that
GAS LISTING /tmp/ccAXF10R.s 			page 14


 243              	 *          interrupt handlers always reschedule on exit so an explicit
 244              	 *          reschedule must not be performed in ISRs.
 245              	 *
 246              	 * @param[in] tp        the thread to be signaled
 247              	 * @param[in] mask      the event flags set to be ORed
 248              	 *
 249              	 * @iclass
 250              	 */
 251              	void chEvtSignalI(Thread *tp, eventmask_t mask) {
 252              	
 253              	  chDbgCheckClassI();
 254              	  chDbgCheck(tp != NULL, "chEvtSignalI");
 255              	
 256              	  tp->p_epending |= mask;
 257              	  /* Test on the AND/OR conditions wait states.*/
 258              	  if (((tp->p_state == THD_STATE_WTOREVT) &&
 259              	       ((tp->p_epending & tp->p_u.ewmask) != 0)) ||
 260              	      ((tp->p_state == THD_STATE_WTANDEVT) &&
 261              	       ((tp->p_epending & tp->p_u.ewmask) == tp->p_u.ewmask)))
 262              	    chSchReadyI(tp)->p_u.rdymsg = RDY_OK;
 263              	}
 264              	
 265              	/**
 266              	 * @brief   Signals all the Event Listeners registered on the specified Event
 267              	 *          Source.
 268              	 * @details This function variants ORs the specified event flags to all the
 269              	 *          threads registered on the @p EventSource in addition to the event
 270              	 *          flags specified by the threads themselves in the
 271              	 *          @p EventListener objects.
 272              	 *
 273              	 * @param[in] esp       pointer to the @p EventSource structure
 274              	 * @param[in] flags     the flags set to be added to the listener flags mask
 275              	 *
 276              	 * @api
 277              	 */
 278              	void chEvtBroadcastFlags(EventSource *esp, flagsmask_t flags) {
 279              	
 280 0193 90       	  chSysLock();
 281              	  chEvtBroadcastFlagsI(esp, flags);
 475              		nop
 476              	# 0 "" 2
 477              		.loc 1 281 0
 478              	#NO_APP
 479 0194 8B442424 		movl	36(%esp), %eax	# flags, flags
 480 0198 89442404 		movl	%eax, 4(%esp)	# flags,
 481 019c 8B442420 		movl	32(%esp), %eax	# esp, esp
 482 01a0 890424   		movl	%eax, (%esp)	# esp,
 483 01a3 E8FCFFFF 		call	chEvtBroadcastFlagsI	#
 483      FF
 484              	.LVL29:
 485              		.loc 1 282 0
 486 01a8 E8FCFFFF 		call	chSchRescheduleS	#
 486      FF
 487              	.LVL30:
 488              		.loc 1 283 0
 489              	#APP
 490              	# 283 "../../../os/kernel/src/chevents.c" 1
GAS LISTING /tmp/ccAXF10R.s 			page 15


 282              	  chSchRescheduleS();
 283 01ad 90       	  chSysUnlock();
 284              	}
 491              		nop
 492              	# 0 "" 2
 493              		.loc 1 284 0
 494              	#NO_APP
 495 01ae 83C41C   		addl	$28, %esp	#,
 496              		.cfi_def_cfa_offset 4
 497 01b1 C3       		ret
 498              		.cfi_endproc
 499              	.LFE15:
 500              		.size	chEvtBroadcastFlags, .-chEvtBroadcastFlags
 501 01b2 8DB42600 		.p2align 4,,15
 501      0000008D 
 501      BC270000 
 501      0000
 502              		.globl	chEvtGetAndClearFlagsI
 503              		.type	chEvtGetAndClearFlagsI, @function
 504              	chEvtGetAndClearFlagsI:
 505              	.LFB16:
 506              		.loc 1 297 0
 507              		.cfi_startproc
 508              	.LVL31:
 509              		.loc 1 297 0
 510 01c0 8B542404 		movl	4(%esp), %edx	# elp, elp
 511              		.loc 1 300 0
 512 01c4 8B420C   		movl	12(%edx), %eax	# elp_2(D)->el_flags, flags
 513              	.LVL32:
 514              		.loc 1 301 0
 515 01c7 C7420C00 		movl	$0, 12(%edx)	#, elp_2(D)->el_flags
 515      000000
 516              		.loc 1 304 0
 517 01ce C3       		ret
 518              		.cfi_endproc
 519              	.LFE16:
 520              		.size	chEvtGetAndClearFlagsI, .-chEvtGetAndClearFlagsI
 521 01cf 90       		.p2align 4,,15
 522              		.globl	chEvtDispatch
 523              		.type	chEvtDispatch, @function
 524              	chEvtDispatch:
 525              	.LFB17:
 526              		.loc 1 315 0
 527              		.cfi_startproc
 528              	.LVL33:
 529 01d0 55       		pushl	%ebp	#
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 5, -8
 532              		.loc 1 322 0
 533 01d1 BD010000 		movl	$1, %ebp	#, tmp72
 533      00
 534              		.loc 1 315 0
 535 01d6 57       		pushl	%edi	#
 536              		.cfi_def_cfa_offset 12
 537              		.cfi_offset 7, -12
 538 01d7 56       		pushl	%esi	#
 539              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccAXF10R.s 			page 16


 540              		.cfi_offset 6, -16
 541 01d8 53       		pushl	%ebx	#
 542              		.cfi_def_cfa_offset 20
 543              		.cfi_offset 3, -20
 544              		.loc 1 320 0
 545 01d9 31DB     		xorl	%ebx, %ebx	# eid
 546              		.loc 1 315 0
 547 01db 83EC1C   		subl	$28, %esp	#,
 548              		.cfi_def_cfa_offset 48
 549              		.loc 1 315 0
 550 01de 8B742434 		movl	52(%esp), %esi	# mask, mask
 551              	.LVL34:
 552 01e2 8B7C2430 		movl	48(%esp), %edi	# handlers, handlers
 553              		.loc 1 321 0
 554 01e6 85F6     		testl	%esi, %esi	# mask
 555 01e8 750D     		jne	.L45	#,
 556 01ea EB26     		jmp	.L34	#
 557              	.LVL35:
 558 01ec 8D742600 		.p2align 4,,7
 559              		.p2align 3
 560              	.L36:
 561              		.loc 1 329 0
 562 01f0 83C301   		addl	$1, %ebx	#, eid
 563              	.LVL36:
 564              		.loc 1 321 0
 565 01f3 85F6     		testl	%esi, %esi	# mask
 566 01f5 741B     		je	.L34	#,
 567              	.LVL37:
 568              	.L45:
 569              		.loc 1 322 0
 570 01f7 89E8     		movl	%ebp, %eax	# tmp72, D.2269
 571 01f9 89D9     		movl	%ebx, %ecx	# eid, tmp74
 572 01fb D3E0     		sall	%cl, %eax	# tmp74, D.2269
 573 01fd 85F0     		testl	%esi, %eax	# mask, D.2269
 574 01ff 74EF     		je	.L36	#,
 575              		.loc 1 326 0
 576 0201 F7D0     		notl	%eax	# D.2269
 577 0203 21C6     		andl	%eax, %esi	# D.2269, mask
 578              	.LVL38:
 579              		.loc 1 327 0
 580 0205 891C24   		movl	%ebx, (%esp)	# eid,
 581 0208 FF149F   		call	*(%edi,%ebx,4)	# MEM[base: handlers_11(D), index: _26, step: 4, offset: 0B]
 582              	.LVL39:
 583              		.loc 1 329 0
 584 020b 83C301   		addl	$1, %ebx	#, eid
 585              	.LVL40:
 586              		.loc 1 321 0
 587 020e 85F6     		testl	%esi, %esi	# mask
 588 0210 75E5     		jne	.L45	#,
 589              	.LVL41:
 590              	.L34:
 591              		.loc 1 331 0
 592 0212 83C41C   		addl	$28, %esp	#,
 593              		.cfi_def_cfa_offset 20
 594 0215 5B       		popl	%ebx	#
 595              		.cfi_restore 3
 596              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccAXF10R.s 			page 17


 597 0216 5E       		popl	%esi	#
 598              		.cfi_restore 6
 599              		.cfi_def_cfa_offset 12
 600              	.LVL42:
 601 0217 5F       		popl	%edi	#
 602              		.cfi_restore 7
 603              		.cfi_def_cfa_offset 8
 604 0218 5D       		popl	%ebp	#
 605              		.cfi_restore 5
 606              		.cfi_def_cfa_offset 4
 607 0219 C3       		ret
 608              		.cfi_endproc
 609              	.LFE17:
 610              		.size	chEvtDispatch, .-chEvtDispatch
 611 021a 8DB60000 		.p2align 4,,15
 611      0000
 612              		.globl	chEvtWaitOne
 613              		.type	chEvtWaitOne, @function
 614              	chEvtWaitOne:
 615              	.LFB18:
 616              		.loc 1 350 0
 617              		.cfi_startproc
 618              	.LVL43:
 619 0220 56       		pushl	%esi	#
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 6, -8
 622 0221 53       		pushl	%ebx	#
 623              		.cfi_def_cfa_offset 12
 624              		.cfi_offset 3, -12
 625 0222 83EC14   		subl	$20, %esp	#,
 626              		.cfi_def_cfa_offset 32
 627              		.loc 1 351 0
 628 0225 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 628      0000
 629              	.LVL44:
 630              		.loc 1 350 0
 631 022b 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 632              		.loc 1 354 0
 633              	#APP
 634              	# 354 "../../../os/kernel/src/chevents.c" 1
 285              	
 286              	/**
 287              	 * @brief   Returns the flags associated to an @p EventListener.
 288              	 * @details The flags are returned and the @p EventListener flags mask is
 289              	 *          cleared.
 290              	 *
 291              	 * @param[in] elp       pointer to the @p EventListener structure
 292              	 * @return              The flags added to the listener by the associated
 293              	 *                      event source.
 294              	 *
 295              	 * @iclass
 296              	 */
 297              	flagsmask_t chEvtGetAndClearFlagsI(EventListener *elp) {
 298              	  flagsmask_t flags;
 299              	
 300              	  flags = elp->el_flags;
 301              	  elp->el_flags = 0;
GAS LISTING /tmp/ccAXF10R.s 			page 18


 302              	
 303              	  return flags;
 304              	}
 305              	
 306              	/**
 307              	 * @brief   Invokes the event handlers associated to an event flags mask.
 308              	 *
 309              	 * @param[in] mask      mask of the event flags to be dispatched
 310              	 * @param[in] handlers  an array of @p evhandler_t. The array must have size
 311              	 *                      equal to the number of bits in eventmask_t.
 312              	 *
 313              	 * @api
 314              	 */
 315              	void chEvtDispatch(const evhandler_t *handlers, eventmask_t mask) {
 316              	  eventid_t eid;
 317              	
 318              	  chDbgCheck(handlers != NULL, "chEvtDispatch");
 319              	
 320              	  eid = 0;
 321              	  while (mask) {
 322              	    if (mask & EVENT_MASK(eid)) {
 323              	      chDbgAssert(handlers[eid] != NULL,
 324              	                  "chEvtDispatch(), #1",
 325              	                  "null handler");
 326              	      mask &= ~EVENT_MASK(eid);
 327              	      handlers[eid](eid);
 328              	    }
 329              	    eid++;
 330              	  }
 331              	}
 332              	
 333              	#if CH_OPTIMIZE_SPEED || !CH_USE_EVENTS_TIMEOUT || defined(__DOXYGEN__)
 334              	/**
 335              	 * @brief   Waits for exactly one of the specified events.
 336              	 * @details The function waits for one event among those specified in
 337              	 *          @p mask to become pending then the event is cleared and returned.
 338              	 * @note    One and only one event is served in the function, the one with the
 339              	 *          lowest event id. The function is meant to be invoked into a loop in
 340              	 *          order to serve all the pending events.<br>
 341              	 *          This means that Event Listeners with a lower event identifier have
 342              	 *          an higher priority.
 343              	 *
 344              	 * @param[in] mask      mask of the event flags that the function should wait
 345              	 *                      for, @p ALL_EVENTS enables all the events
 346              	 * @return              The mask of the lowest id served and cleared event.
 347              	 *
 348              	 * @api
 349              	 */
 350              	eventmask_t chEvtWaitOne(eventmask_t mask) {
 351              	  Thread *ctp = currp;
 352              	  eventmask_t m;
 353              	
 354 022f 90       	  chSysLock();
 355              	
 635              		nop
 636              	# 0 "" 2
 637              	.LVL45:
GAS LISTING /tmp/ccAXF10R.s 			page 19


 638              	#NO_APP
 639 0230 8B5638   		movl	56(%esi), %edx	# ctp_4->p_epending, D.2275
 640              		.loc 1 356 0
 641 0233 89D9     		movl	%ebx, %ecx	# mask, m
 642 0235 21D1     		andl	%edx, %ecx	# D.2275, m
 643              	.LVL46:
 644 0237 7516     		jne	.L48	#,
 645              		.loc 1 357 0
 646 0239 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_4->p_u.ewmask
 647              		.loc 1 358 0
 648 023c C7042408 		movl	$8, (%esp)	#,
 648      000000
 649 0243 E8FCFFFF 		call	chSchGoSleepS	#
 649      FF
 650              	.LVL47:
 651              		.loc 1 359 0
 652 0248 8B5638   		movl	56(%esi), %edx	# ctp_4->p_epending, D.2274
 653 024b 21D3     		andl	%edx, %ebx	# D.2274, m
 654 024d 89D9     		movl	%ebx, %ecx	# m, m
 655              	.LVL48:
 656              	.L48:
 657              		.loc 1 361 0
 658 024f 89C8     		movl	%ecx, %eax	# m, m
 659 0251 F7D8     		negl	%eax	# m
 660 0253 21C8     		andl	%ecx, %eax	# m, m
 661              	.LVL49:
 662              		.loc 1 362 0
 663 0255 89C1     		movl	%eax, %ecx	# m, tmp72
 664 0257 F7D1     		notl	%ecx	# tmp72
 665 0259 21D1     		andl	%edx, %ecx	# D.2275, tmp72
 666 025b 894E38   		movl	%ecx, 56(%esi)	# tmp72, ctp_4->p_epending
 667              		.loc 1 364 0
 668              	#APP
 669              	# 364 "../../../os/kernel/src/chevents.c" 1
 356              	  if ((m = (ctp->p_epending & mask)) == 0) {
 357              	    ctp->p_u.ewmask = mask;
 358              	    chSchGoSleepS(THD_STATE_WTOREVT);
 359              	    m = ctp->p_epending & mask;
 360              	  }
 361              	  m &= -m;
 362              	  ctp->p_epending &= ~m;
 363              	
 364 025e 90       	  chSysUnlock();
 365              	  return m;
 670              		nop
 671              	# 0 "" 2
 672              		.loc 1 366 0
 673              	#NO_APP
 674 025f 83C414   		addl	$20, %esp	#,
 675              		.cfi_def_cfa_offset 12
 676 0262 5B       		popl	%ebx	#
 677              		.cfi_restore 3
 678              		.cfi_def_cfa_offset 8
 679 0263 5E       		popl	%esi	#
 680              		.cfi_restore 6
 681              		.cfi_def_cfa_offset 4
 682              	.LVL50:
GAS LISTING /tmp/ccAXF10R.s 			page 20


 683 0264 C3       		ret
 684              		.cfi_endproc
 685              	.LFE18:
 686              		.size	chEvtWaitOne, .-chEvtWaitOne
 687 0265 8D742600 		.p2align 4,,15
 687      8DBC2700 
 687      000000
 688              		.globl	chEvtWaitAny
 689              		.type	chEvtWaitAny, @function
 690              	chEvtWaitAny:
 691              	.LFB19:
 692              		.loc 1 379 0
 693              		.cfi_startproc
 694              	.LVL51:
 695 0270 56       		pushl	%esi	#
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 6, -8
 698 0271 53       		pushl	%ebx	#
 699              		.cfi_def_cfa_offset 12
 700              		.cfi_offset 3, -12
 701 0272 83EC14   		subl	$20, %esp	#,
 702              		.cfi_def_cfa_offset 32
 703              		.loc 1 380 0
 704 0275 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 704      0000
 705              	.LVL52:
 706              		.loc 1 379 0
 707 027b 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 708              		.loc 1 383 0
 709              	#APP
 710              	# 383 "../../../os/kernel/src/chevents.c" 1
 366              	}
 367              	
 368              	/**
 369              	 * @brief   Waits for any of the specified events.
 370              	 * @details The function waits for any event among those specified in
 371              	 *          @p mask to become pending then the events are cleared and returned.
 372              	 *
 373              	 * @param[in] mask      mask of the event flags that the function should wait
 374              	 *                      for, @p ALL_EVENTS enables all the events
 375              	 * @return              The mask of the served and cleared events.
 376              	 *
 377              	 * @api
 378              	 */
 379              	eventmask_t chEvtWaitAny(eventmask_t mask) {
 380              	  Thread *ctp = currp;
 381              	  eventmask_t m;
 382              	
 383 027f 90       	  chSysLock();
 384              	
 711              		nop
 712              	# 0 "" 2
 713              	.LVL53:
 714              	#NO_APP
 715 0280 8B5638   		movl	56(%esi), %edx	# ctp_4->p_epending, D.2279
 716              		.loc 1 385 0
 717 0283 89D8     		movl	%ebx, %eax	# mask, m
GAS LISTING /tmp/ccAXF10R.s 			page 21


 718 0285 21D0     		andl	%edx, %eax	# D.2279, m
 719              	.LVL54:
 720 0287 7516     		jne	.L52	#,
 721              		.loc 1 386 0
 722 0289 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_4->p_u.ewmask
 723              		.loc 1 387 0
 724 028c C7042408 		movl	$8, (%esp)	#,
 724      000000
 725 0293 E8FCFFFF 		call	chSchGoSleepS	#
 725      FF
 726              	.LVL55:
 727              		.loc 1 388 0
 728 0298 8B5638   		movl	56(%esi), %edx	# ctp_4->p_epending, D.2278
 729 029b 89D8     		movl	%ebx, %eax	# mask, m
 730 029d 21D0     		andl	%edx, %eax	# D.2278, m
 731              	.LVL56:
 732              	.L52:
 733              		.loc 1 390 0
 734 029f 89C1     		movl	%eax, %ecx	# m, tmp70
 735 02a1 F7D1     		notl	%ecx	# tmp70
 736 02a3 21D1     		andl	%edx, %ecx	# D.2279, tmp70
 737 02a5 894E38   		movl	%ecx, 56(%esi)	# tmp70, ctp_4->p_epending
 738              		.loc 1 392 0
 739              	#APP
 740              	# 392 "../../../os/kernel/src/chevents.c" 1
 385              	  if ((m = (ctp->p_epending & mask)) == 0) {
 386              	    ctp->p_u.ewmask = mask;
 387              	    chSchGoSleepS(THD_STATE_WTOREVT);
 388              	    m = ctp->p_epending & mask;
 389              	  }
 390              	  ctp->p_epending &= ~m;
 391              	
 392 02a8 90       	  chSysUnlock();
 393              	  return m;
 741              		nop
 742              	# 0 "" 2
 743              		.loc 1 394 0
 744              	#NO_APP
 745 02a9 83C414   		addl	$20, %esp	#,
 746              		.cfi_def_cfa_offset 12
 747 02ac 5B       		popl	%ebx	#
 748              		.cfi_restore 3
 749              		.cfi_def_cfa_offset 8
 750 02ad 5E       		popl	%esi	#
 751              		.cfi_restore 6
 752              		.cfi_def_cfa_offset 4
 753              	.LVL57:
 754 02ae C3       		ret
 755              		.cfi_endproc
 756              	.LFE19:
 757              		.size	chEvtWaitAny, .-chEvtWaitAny
 758 02af 90       		.p2align 4,,15
 759              		.globl	chEvtWaitAll
 760              		.type	chEvtWaitAll, @function
 761              	chEvtWaitAll:
 762              	.LFB20:
 763              		.loc 1 407 0
GAS LISTING /tmp/ccAXF10R.s 			page 22


 764              		.cfi_startproc
 765              	.LVL58:
 766 02b0 56       		pushl	%esi	#
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 6, -8
 769 02b1 53       		pushl	%ebx	#
 770              		.cfi_def_cfa_offset 12
 771              		.cfi_offset 3, -12
 772 02b2 83EC14   		subl	$20, %esp	#,
 773              		.cfi_def_cfa_offset 32
 774              		.loc 1 408 0
 775 02b5 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 775      0000
 776              	.LVL59:
 777              		.loc 1 407 0
 778 02bb 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 779              		.loc 1 410 0
 780              	#APP
 781              	# 410 "../../../os/kernel/src/chevents.c" 1
 394              	}
 395              	
 396              	/**
 397              	 * @brief   Waits for all the specified events.
 398              	 * @details The function waits for all the events specified in @p mask to
 399              	 *          become pending then the events are cleared and returned.
 400              	 *
 401              	 * @param[in] mask      mask of the event flags that the function should wait
 402              	 *                      for, @p ALL_EVENTS requires all the events
 403              	 * @return              The mask of the served and cleared events.
 404              	 *
 405              	 * @api
 406              	 */
 407              	eventmask_t chEvtWaitAll(eventmask_t mask) {
 408              	  Thread *ctp = currp;
 409              	
 410 02bf 90       	  chSysLock();
 411              	
 782              		nop
 783              	# 0 "" 2
 784              		.loc 1 412 0
 785              	#NO_APP
 786 02c0 8B4638   		movl	56(%esi), %eax	# ctp_3->p_epending, D.2282
 787 02c3 89D9     		movl	%ebx, %ecx	# mask, D.2282
 788 02c5 21C1     		andl	%eax, %ecx	# D.2282, D.2282
 789 02c7 89C2     		movl	%eax, %edx	# D.2282, D.2283
 790 02c9 39D9     		cmpl	%ebx, %ecx	# mask, D.2282
 791 02cb 7412     		je	.L56	#,
 792              		.loc 1 413 0
 793 02cd 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_3->p_u.ewmask
 794              		.loc 1 414 0
 795 02d0 C7042409 		movl	$9, (%esp)	#,
 795      000000
 796 02d7 E8FCFFFF 		call	chSchGoSleepS	#
 796      FF
 797              	.LVL60:
 798 02dc 8B5638   		movl	56(%esi), %edx	# ctp_3->p_epending, D.2283
 799              	.L56:
GAS LISTING /tmp/ccAXF10R.s 			page 23


 800              		.loc 1 416 0
 801 02df 89D8     		movl	%ebx, %eax	# mask, tmp70
 802 02e1 F7D0     		notl	%eax	# tmp70
 803 02e3 21D0     		andl	%edx, %eax	# D.2283, tmp70
 804 02e5 894638   		movl	%eax, 56(%esi)	# tmp70, ctp_3->p_epending
 805              		.loc 1 418 0
 806              	#APP
 807              	# 418 "../../../os/kernel/src/chevents.c" 1
 412              	  if ((ctp->p_epending & mask) != mask) {
 413              	    ctp->p_u.ewmask = mask;
 414              	    chSchGoSleepS(THD_STATE_WTANDEVT);
 415              	  }
 416              	  ctp->p_epending &= ~mask;
 417              	
 418 02e8 90       	  chSysUnlock();
 419              	  return mask;
 808              		nop
 809              	# 0 "" 2
 810              		.loc 1 420 0
 811              	#NO_APP
 812 02e9 83C414   		addl	$20, %esp	#,
 813              		.cfi_def_cfa_offset 12
 814 02ec 89D8     		movl	%ebx, %eax	# mask,
 815 02ee 5B       		popl	%ebx	#
 816              		.cfi_restore 3
 817              		.cfi_def_cfa_offset 8
 818 02ef 5E       		popl	%esi	#
 819              		.cfi_restore 6
 820              		.cfi_def_cfa_offset 4
 821              	.LVL61:
 822 02f0 C3       		ret
 823              		.cfi_endproc
 824              	.LFE20:
 825              		.size	chEvtWaitAll, .-chEvtWaitAll
 826 02f1 EB0D9090 		.p2align 4,,15
 826      90909090 
 826      90909090 
 826      909090
 827              		.globl	chEvtWaitOneTimeout
 828              		.type	chEvtWaitOneTimeout, @function
 829              	chEvtWaitOneTimeout:
 830              	.LFB21:
 831              		.loc 1 446 0
 832              		.cfi_startproc
 833              	.LVL62:
 834 0300 56       		pushl	%esi	#
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 6, -8
 837 0301 53       		pushl	%ebx	#
 838              		.cfi_def_cfa_offset 12
 839              		.cfi_offset 3, -12
 840 0302 83EC14   		subl	$20, %esp	#,
 841              		.cfi_def_cfa_offset 32
 842              		.loc 1 447 0
 843 0305 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 843      0000
 844              	.LVL63:
GAS LISTING /tmp/ccAXF10R.s 			page 24


 845              		.loc 1 446 0
 846 030b 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 847              		.loc 1 450 0
 848              	#APP
 849              	# 450 "../../../os/kernel/src/chevents.c" 1
 420              	}
 421              	#endif /* CH_OPTIMIZE_SPEED || !CH_USE_EVENTS_TIMEOUT */
 422              	
 423              	#if CH_USE_EVENTS_TIMEOUT || defined(__DOXYGEN__)
 424              	/**
 425              	 * @brief   Waits for exactly one of the specified events.
 426              	 * @details The function waits for one event among those specified in
 427              	 *          @p mask to become pending then the event is cleared and returned.
 428              	 * @note    One and only one event is served in the function, the one with the
 429              	 *          lowest event id. The function is meant to be invoked into a loop in
 430              	 *          order to serve all the pending events.<br>
 431              	 *          This means that Event Listeners with a lower event identifier have
 432              	 *          an higher priority.
 433              	 *
 434              	 * @param[in] mask      mask of the event flags that the function should wait
 435              	 *                      for, @p ALL_EVENTS enables all the events
 436              	 * @param[in] time      the number of ticks before the operation timeouts,
 437              	 *                      the following special values are allowed:
 438              	 *                      - @a TIME_IMMEDIATE immediate timeout.
 439              	 *                      - @a TIME_INFINITE no timeout.
 440              	 *                      .
 441              	 * @return              The mask of the lowest id served and cleared event.
 442              	 * @retval 0            if the operation has timed out.
 443              	 *
 444              	 * @api
 445              	 */
 446              	eventmask_t chEvtWaitOneTimeout(eventmask_t mask, systime_t time) {
 447              	  Thread *ctp = currp;
 448              	  eventmask_t m;
 449              	
 450 030f 90       	  chSysLock();
 451              	
 850              		nop
 851              	# 0 "" 2
 852              		.loc 1 452 0
 853              	#NO_APP
 854 0310 8B4638   		movl	56(%esi), %eax	# ctp_6->p_epending, D.2287
 855              	.LVL64:
 856 0313 89D9     		movl	%ebx, %ecx	# mask, m
 857 0315 21C1     		andl	%eax, %ecx	# D.2287, m
 858              	.LVL65:
 859 0317 7539     		jne	.L60	#,
 860              		.loc 1 453 0
 861 0319 8B442424 		movl	36(%esp), %eax	# time,
 862 031d 85C0     		testl	%eax, %eax	#
 863 031f 750F     		jne	.L61	#,
 864              	.LVL66:
 865              	.L66:
 866              		.loc 1 459 0
 867              	#APP
 868              	# 459 "../../../os/kernel/src/chevents.c" 1
 452              	  if ((m = (ctp->p_epending & mask)) == 0) {
GAS LISTING /tmp/ccAXF10R.s 			page 25


 453              	    if (TIME_IMMEDIATE == time) {
 454              	      chSysUnlock();
 455              	      return (eventmask_t)0;
 456              	    }
 457              	    ctp->p_u.ewmask = mask;
 458              	    if (chSchGoSleepTimeoutS(THD_STATE_WTOREVT, time) < RDY_OK) {
 459 0321 90       	      chSysUnlock();
 460              	      return (eventmask_t)0;
 869              		nop
 870              	# 0 "" 2
 871              		.loc 1 469 0
 872              	#NO_APP
 873 0322 83C414   		addl	$20, %esp	#,
 874              		.cfi_remember_state
 875              		.cfi_def_cfa_offset 12
 876              		.loc 1 460 0
 877 0325 31C0     		xorl	%eax, %eax	# D.2286
 878              		.loc 1 469 0
 879 0327 5B       		popl	%ebx	#
 880              		.cfi_restore 3
 881              		.cfi_def_cfa_offset 8
 882 0328 5E       		popl	%esi	#
 883              		.cfi_restore 6
 884              		.cfi_def_cfa_offset 4
 885              	.LVL67:
 886 0329 C3       		ret
 887              	.LVL68:
 888 032a 8DB60000 		.p2align 4,,7
 888      0000
 889              		.p2align 3
 890              	.L61:
 891              		.cfi_restore_state
 892              		.loc 1 458 0
 893 0330 8B442424 		movl	36(%esp), %eax	# time, tmp78
 894              		.loc 1 457 0
 895 0334 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_6->p_u.ewmask
 896              		.loc 1 458 0
 897 0337 C7042408 		movl	$8, (%esp)	#,
 897      000000
 898 033e 89442404 		movl	%eax, 4(%esp)	# tmp78,
 899 0342 E8FCFFFF 		call	chSchGoSleepTimeoutS	#
 899      FF
 900              	.LVL69:
 901 0347 85C0     		testl	%eax, %eax	# D.2288
 902 0349 78D6     		js	.L66	#,
 903              		.loc 1 462 0
 904 034b 8B4638   		movl	56(%esi), %eax	# ctp_6->p_epending, D.2287
 905 034e 21C3     		andl	%eax, %ebx	# D.2287, m
 906 0350 89D9     		movl	%ebx, %ecx	# m, m
 907              	.LVL70:
 908              	.L60:
 909              		.loc 1 464 0
 910 0352 89CA     		movl	%ecx, %edx	# m, m
 911 0354 F7DA     		negl	%edx	# m
 912 0356 21CA     		andl	%ecx, %edx	# m, m
 913              	.LVL71:
 914              		.loc 1 465 0
GAS LISTING /tmp/ccAXF10R.s 			page 26


 915 0358 89D1     		movl	%edx, %ecx	# m, tmp75
 916 035a F7D1     		notl	%ecx	# tmp75
 917 035c 21C1     		andl	%eax, %ecx	# D.2286, tmp75
 918 035e 894E38   		movl	%ecx, 56(%esi)	# tmp75, ctp_6->p_epending
 919              		.loc 1 467 0
 920              	#APP
 921              	# 467 "../../../os/kernel/src/chevents.c" 1
 461              	    }
 462              	    m = ctp->p_epending & mask;
 463              	  }
 464              	  m &= -m;
 465              	  ctp->p_epending &= ~m;
 466              	
 467 0361 90       	  chSysUnlock();
 468              	  return m;
 922              		nop
 923              	# 0 "" 2
 924              		.loc 1 469 0
 925              	#NO_APP
 926 0362 83C414   		addl	$20, %esp	#,
 927              		.cfi_def_cfa_offset 12
 928              		.loc 1 468 0
 929 0365 89D0     		movl	%edx, %eax	# m, D.2286
 930              		.loc 1 469 0
 931 0367 5B       		popl	%ebx	#
 932              		.cfi_restore 3
 933              		.cfi_def_cfa_offset 8
 934 0368 5E       		popl	%esi	#
 935              		.cfi_restore 6
 936              		.cfi_def_cfa_offset 4
 937              	.LVL72:
 938 0369 C3       		ret
 939              		.cfi_endproc
 940              	.LFE21:
 941              		.size	chEvtWaitOneTimeout, .-chEvtWaitOneTimeout
 942 036a 8DB60000 		.p2align 4,,15
 942      0000
 943              		.globl	chEvtWaitAnyTimeout
 944              		.type	chEvtWaitAnyTimeout, @function
 945              	chEvtWaitAnyTimeout:
 946              	.LFB22:
 947              		.loc 1 489 0
 948              		.cfi_startproc
 949              	.LVL73:
 950 0370 56       		pushl	%esi	#
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 6, -8
 953 0371 53       		pushl	%ebx	#
 954              		.cfi_def_cfa_offset 12
 955              		.cfi_offset 3, -12
 956 0372 83EC14   		subl	$20, %esp	#,
 957              		.cfi_def_cfa_offset 32
 958              		.loc 1 490 0
 959 0375 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 959      0000
 960              	.LVL74:
 961              		.loc 1 489 0
GAS LISTING /tmp/ccAXF10R.s 			page 27


 962 037b 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 963              		.loc 1 493 0
 964              	#APP
 965              	# 493 "../../../os/kernel/src/chevents.c" 1
 469              	}
 470              	
 471              	/**
 472              	 * @brief   Waits for any of the specified events.
 473              	 * @details The function waits for any event among those specified in
 474              	 *          @p mask to become pending then the events are cleared and
 475              	 *          returned.
 476              	 *
 477              	 * @param[in] mask      mask of the event flags that the function should wait
 478              	 *                      for, @p ALL_EVENTS enables all the events
 479              	 * @param[in] time      the number of ticks before the operation timeouts,
 480              	 *                      the following special values are allowed:
 481              	 *                      - @a TIME_IMMEDIATE immediate timeout.
 482              	 *                      - @a TIME_INFINITE no timeout.
 483              	 *                      .
 484              	 * @return              The mask of the served and cleared events.
 485              	 * @retval 0            if the operation has timed out.
 486              	 *
 487              	 * @api
 488              	 */
 489              	eventmask_t chEvtWaitAnyTimeout(eventmask_t mask, systime_t time) {
 490              	  Thread *ctp = currp;
 491              	  eventmask_t m;
 492              	
 493 037f 90       	  chSysLock();
 494              	
 966              		nop
 967              	# 0 "" 2
 968              		.loc 1 495 0
 969              	#NO_APP
 970 0380 8B5638   		movl	56(%esi), %edx	# ctp_6->p_epending, D.2292
 971              	.LVL75:
 972 0383 89D8     		movl	%ebx, %eax	# mask, m
 973 0385 21D0     		andl	%edx, %eax	# D.2292, m
 974              	.LVL76:
 975 0387 7539     		jne	.L68	#,
 976              		.loc 1 496 0
 977 0389 8B442424 		movl	36(%esp), %eax	# time,
 978              	.LVL77:
 979 038d 85C0     		testl	%eax, %eax	#
 980 038f 750F     		jne	.L69	#,
 981              	.LVL78:
 982              	.L74:
 983              		.loc 1 502 0
 984              	#APP
 985              	# 502 "../../../os/kernel/src/chevents.c" 1
 495              	  if ((m = (ctp->p_epending & mask)) == 0) {
 496              	    if (TIME_IMMEDIATE == time) {
 497              	      chSysUnlock();
 498              	      return (eventmask_t)0;
 499              	    }
 500              	    ctp->p_u.ewmask = mask;
 501              	    if (chSchGoSleepTimeoutS(THD_STATE_WTOREVT, time) < RDY_OK) {
GAS LISTING /tmp/ccAXF10R.s 			page 28


 502 0391 90       	      chSysUnlock();
 503              	      return (eventmask_t)0;
 986              		nop
 987              	# 0 "" 2
 988              		.loc 1 511 0
 989              	#NO_APP
 990 0392 83C414   		addl	$20, %esp	#,
 991              		.cfi_remember_state
 992              		.cfi_def_cfa_offset 12
 993              		.loc 1 503 0
 994 0395 31C0     		xorl	%eax, %eax	# D.2291
 995              		.loc 1 511 0
 996 0397 5B       		popl	%ebx	#
 997              		.cfi_restore 3
 998              		.cfi_def_cfa_offset 8
 999 0398 5E       		popl	%esi	#
 1000              		.cfi_restore 6
 1001              		.cfi_def_cfa_offset 4
 1002              	.LVL79:
 1003 0399 C3       		ret
 1004              	.LVL80:
 1005 039a 8DB60000 		.p2align 4,,7
 1005      0000
 1006              		.p2align 3
 1007              	.L69:
 1008              		.cfi_restore_state
 1009              		.loc 1 501 0
 1010 03a0 8B442424 		movl	36(%esp), %eax	# time, tmp76
 1011              		.loc 1 500 0
 1012 03a4 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_6->p_u.ewmask
 1013              		.loc 1 501 0
 1014 03a7 C7042408 		movl	$8, (%esp)	#,
 1014      000000
 1015 03ae 89442404 		movl	%eax, 4(%esp)	# tmp76,
 1016 03b2 E8FCFFFF 		call	chSchGoSleepTimeoutS	#
 1016      FF
 1017              	.LVL81:
 1018 03b7 85C0     		testl	%eax, %eax	# D.2293
 1019 03b9 78D6     		js	.L74	#,
 1020              		.loc 1 505 0
 1021 03bb 8B5638   		movl	56(%esi), %edx	# ctp_6->p_epending, D.2292
 1022 03be 89D8     		movl	%ebx, %eax	# mask, m
 1023 03c0 21D0     		andl	%edx, %eax	# D.2292, m
 1024              	.LVL82:
 1025              	.L68:
 1026              		.loc 1 507 0
 1027 03c2 89C1     		movl	%eax, %ecx	# m, tmp73
 1028 03c4 F7D1     		notl	%ecx	# tmp73
 1029 03c6 21D1     		andl	%edx, %ecx	# D.2291, tmp73
 1030 03c8 894E38   		movl	%ecx, 56(%esi)	# tmp73, ctp_6->p_epending
 1031              		.loc 1 509 0
 1032              	#APP
 1033              	# 509 "../../../os/kernel/src/chevents.c" 1
 504              	    }
 505              	    m = ctp->p_epending & mask;
 506              	  }
 507              	  ctp->p_epending &= ~m;
GAS LISTING /tmp/ccAXF10R.s 			page 29


 508              	
 509 03cb 90       	  chSysUnlock();
 510              	  return m;
 1034              		nop
 1035              	# 0 "" 2
 1036              		.loc 1 511 0
 1037              	#NO_APP
 1038 03cc 83C414   		addl	$20, %esp	#,
 1039              		.cfi_def_cfa_offset 12
 1040 03cf 5B       		popl	%ebx	#
 1041              		.cfi_restore 3
 1042              		.cfi_def_cfa_offset 8
 1043 03d0 5E       		popl	%esi	#
 1044              		.cfi_restore 6
 1045              		.cfi_def_cfa_offset 4
 1046              	.LVL83:
 1047 03d1 C3       		ret
 1048              		.cfi_endproc
 1049              	.LFE22:
 1050              		.size	chEvtWaitAnyTimeout, .-chEvtWaitAnyTimeout
 1051 03d2 8DB42600 		.p2align 4,,15
 1051      0000008D 
 1051      BC270000 
 1051      0000
 1052              		.globl	chEvtWaitAllTimeout
 1053              		.type	chEvtWaitAllTimeout, @function
 1054              	chEvtWaitAllTimeout:
 1055              	.LFB23:
 1056              		.loc 1 530 0
 1057              		.cfi_startproc
 1058              	.LVL84:
 1059 03e0 56       		pushl	%esi	#
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 6, -8
 1062 03e1 53       		pushl	%ebx	#
 1063              		.cfi_def_cfa_offset 12
 1064              		.cfi_offset 3, -12
 1065 03e2 83EC14   		subl	$20, %esp	#,
 1066              		.cfi_def_cfa_offset 32
 1067              		.loc 1 531 0
 1068 03e5 8B351800 		movl	rlist+24, %esi	# rlist.r_current, ctp
 1068      0000
 1069              	.LVL85:
 1070              		.loc 1 530 0
 1071 03eb 8B5C2420 		movl	32(%esp), %ebx	# mask, mask
 1072 03ef 8B542424 		movl	36(%esp), %edx	# time, time
 1073              		.loc 1 533 0
 1074              	#APP
 1075              	# 533 "../../../os/kernel/src/chevents.c" 1
 511              	}
 512              	
 513              	/**
 514              	 * @brief   Waits for all the specified events.
 515              	 * @details The function waits for all the events specified in @p mask to
 516              	 *          become pending then the events are cleared and returned.
 517              	 *
 518              	 * @param[in] mask      mask of the event flags that the function should wait
GAS LISTING /tmp/ccAXF10R.s 			page 30


 519              	 *                      for, @p ALL_EVENTS requires all the events
 520              	 * @param[in] time      the number of ticks before the operation timeouts,
 521              	 *                      the following special values are allowed:
 522              	 *                      - @a TIME_IMMEDIATE immediate timeout.
 523              	 *                      - @a TIME_INFINITE no timeout.
 524              	 *                      .
 525              	 * @return              The mask of the served and cleared events.
 526              	 * @retval 0            if the operation has timed out.
 527              	 *
 528              	 * @api
 529              	 */
 530              	eventmask_t chEvtWaitAllTimeout(eventmask_t mask, systime_t time) {
 531              	  Thread *ctp = currp;
 532              	
 533 03f3 90       	  chSysLock();
 534              	
 1076              		nop
 1077              	# 0 "" 2
 1078              		.loc 1 535 0
 1079              	#NO_APP
 1080 03f4 8B4638   		movl	56(%esi), %eax	# ctp_5->p_epending, D.2297
 1081 03f7 89D9     		movl	%ebx, %ecx	# mask, D.2297
 1082 03f9 21C1     		andl	%eax, %ecx	# D.2297, D.2297
 1083 03fb 39D9     		cmpl	%ebx, %ecx	# mask, D.2297
 1084 03fd 742B     		je	.L76	#,
 1085              		.loc 1 536 0
 1086 03ff 85D2     		testl	%edx, %edx	# time
 1087 0401 750D     		jne	.L77	#,
 1088              	.L79:
 1089              		.loc 1 542 0
 1090              	#APP
 1091              	# 542 "../../../os/kernel/src/chevents.c" 1
 535              	  if ((ctp->p_epending & mask) != mask) {
 536              	    if (TIME_IMMEDIATE == time) {
 537              	      chSysUnlock();
 538              	      return (eventmask_t)0;
 539              	    }
 540              	    ctp->p_u.ewmask = mask;
 541              	    if (chSchGoSleepTimeoutS(THD_STATE_WTANDEVT, time) < RDY_OK) {
 542 0403 90       	      chSysUnlock();
 543              	      return (eventmask_t)0;
 1092              		nop
 1093              	# 0 "" 2
 1094              		.loc 1 550 0
 1095              	#NO_APP
 1096 0404 83C414   		addl	$20, %esp	#,
 1097              		.cfi_remember_state
 1098              		.cfi_def_cfa_offset 12
 1099              		.loc 1 543 0
 1100 0407 31C0     		xorl	%eax, %eax	# D.2296
 1101              		.loc 1 550 0
 1102 0409 5B       		popl	%ebx	#
 1103              		.cfi_restore 3
 1104              		.cfi_def_cfa_offset 8
 1105 040a 5E       		popl	%esi	#
 1106              		.cfi_restore 6
 1107              		.cfi_def_cfa_offset 4
GAS LISTING /tmp/ccAXF10R.s 			page 31


 1108              	.LVL86:
 1109 040b C3       		ret
 1110              	.LVL87:
 1111 040c 8D742600 		.p2align 4,,7
 1112              		.p2align 3
 1113              	.L77:
 1114              		.cfi_restore_state
 1115              		.loc 1 540 0
 1116 0410 895E24   		movl	%ebx, 36(%esi)	# mask, ctp_5->p_u.ewmask
 1117              		.loc 1 541 0
 1118 0413 89542404 		movl	%edx, 4(%esp)	# time,
 1119 0417 C7042409 		movl	$9, (%esp)	#,
 1119      000000
 1120 041e E8FCFFFF 		call	chSchGoSleepTimeoutS	#
 1120      FF
 1121              	.LVL88:
 1122 0423 85C0     		testl	%eax, %eax	# D.2298
 1123 0425 78DC     		js	.L79	#,
 1124 0427 8B4638   		movl	56(%esi), %eax	# ctp_5->p_epending, D.2296
 1125              	.L76:
 1126              		.loc 1 546 0
 1127 042a 89DA     		movl	%ebx, %edx	# mask, tmp73
 1128 042c F7D2     		notl	%edx	# tmp73
 1129 042e 21C2     		andl	%eax, %edx	# D.2296, tmp73
 1130 0430 895638   		movl	%edx, 56(%esi)	# tmp73, ctp_5->p_epending
 1131              		.loc 1 548 0
 1132              	#APP
 1133              	# 548 "../../../os/kernel/src/chevents.c" 1
 544              	    }
 545              	  }
 546              	  ctp->p_epending &= ~mask;
 547              	
 548 0433 90       	  chSysUnlock();
 549              	  return mask;
 1134              		nop
 1135              	# 0 "" 2
 1136              		.loc 1 550 0
 1137              	#NO_APP
 1138 0434 83C414   		addl	$20, %esp	#,
 1139              		.cfi_def_cfa_offset 12
 1140              		.loc 1 549 0
 1141 0437 89D8     		movl	%ebx, %eax	# mask, D.2296
 1142              		.loc 1 550 0
 1143 0439 5B       		popl	%ebx	#
 1144              		.cfi_restore 3
 1145              		.cfi_def_cfa_offset 8
 1146 043a 5E       		popl	%esi	#
 1147              		.cfi_restore 6
 1148              		.cfi_def_cfa_offset 4
 1149              	.LVL89:
 1150 043b C3       		ret
 1151              		.cfi_endproc
 1152              	.LFE23:
 1153              		.size	chEvtWaitAllTimeout, .-chEvtWaitAllTimeout
 1154              	.Letext0:
 1155              		.file 2 "/usr/include/stdint.h"
 1156              		.file 3 "../../../os/ports/GCC/SIMIA32/chtypes.h"
GAS LISTING /tmp/ccAXF10R.s 			page 32


 1157              		.file 4 "../../../os/kernel/include/chlists.h"
 1158              		.file 5 "../../../os/kernel/include/chthreads.h"
 1159              		.file 6 "../../../os/ports/GCC/SIMIA32/chcore.h"
 1160              		.file 7 "../../../os/kernel/include/chschd.h"
 1161              		.file 8 "../../../os/kernel/include/chmtx.h"
 1162              		.file 9 "../../../os/kernel/include/chevents.h"
 1163              		.section	.debug_info,"",@progbits
 1164              	.Ldebug_info0:
 1165 0000 0B0A0000 		.long	0xa0b
 1166 0004 0400     		.value	0x4
 1167 0006 00000000 		.long	.Ldebug_abbrev0
 1168 000a 04       		.byte	0x4
 1169 000b 01       		.uleb128 0x1
 1170 000c FC020000 		.long	.LASF95
 1171 0010 01       		.byte	0x1
 1172 0011 C2010000 		.long	.LASF96
 1173 0015 BC000000 		.long	.LASF97
 1174 0019 00000000 		.long	.Ltext0
 1175 001d 3C040000 		.long	.Letext0-.Ltext0
 1176 0021 00000000 		.long	.Ldebug_line0
 1177 0025 02       		.uleb128 0x2
 1178 0026 04       		.byte	0x4
 1179 0027 05       		.byte	0x5
 1180 0028 696E7400 		.string	"int"
 1181 002c 03       		.uleb128 0x3
 1182 002d 04       		.byte	0x4
 1183 002e 07       		.byte	0x7
 1184 002f 93010000 		.long	.LASF0
 1185 0033 03       		.uleb128 0x3
 1186 0034 04       		.byte	0x4
 1187 0035 05       		.byte	0x5
 1188 0036 EE000000 		.long	.LASF1
 1189 003a 03       		.uleb128 0x3
 1190 003b 01       		.byte	0x1
 1191 003c 06       		.byte	0x6
 1192 003d 8C000000 		.long	.LASF2
 1193 0041 03       		.uleb128 0x3
 1194 0042 02       		.byte	0x2
 1195 0043 05       		.byte	0x5
 1196 0044 78030000 		.long	.LASF3
 1197 0048 04       		.uleb128 0x4
 1198 0049 D9020000 		.long	.LASF5
 1199 004d 02       		.byte	0x2
 1200 004e 26       		.byte	0x26
 1201 004f 25000000 		.long	0x25
 1202 0053 03       		.uleb128 0x3
 1203 0054 08       		.byte	0x8
 1204 0055 05       		.byte	0x5
 1205 0056 7E000000 		.long	.LASF4
 1206 005a 04       		.uleb128 0x4
 1207 005b 50040000 		.long	.LASF6
 1208 005f 02       		.byte	0x2
 1209 0060 30       		.byte	0x30
 1210 0061 65000000 		.long	0x65
 1211 0065 03       		.uleb128 0x3
 1212 0066 01       		.byte	0x1
 1213 0067 08       		.byte	0x8
GAS LISTING /tmp/ccAXF10R.s 			page 33


 1214 0068 E1020000 		.long	.LASF7
 1215 006c 03       		.uleb128 0x3
 1216 006d 02       		.byte	0x2
 1217 006e 07       		.byte	0x7
 1218 006f EC010000 		.long	.LASF8
 1219 0073 04       		.uleb128 0x4
 1220 0074 E8030000 		.long	.LASF9
 1221 0078 02       		.byte	0x2
 1222 0079 33       		.byte	0x33
 1223 007a 2C000000 		.long	0x2c
 1224 007e 03       		.uleb128 0x3
 1225 007f 08       		.byte	0x8
 1226 0080 07       		.byte	0x7
 1227 0081 34000000 		.long	.LASF10
 1228 0085 03       		.uleb128 0x3
 1229 0086 01       		.byte	0x1
 1230 0087 02       		.byte	0x2
 1231 0088 D3020000 		.long	.LASF11
 1232 008c 04       		.uleb128 0x4
 1233 008d 2F020000 		.long	.LASF12
 1234 0091 03       		.byte	0x3
 1235 0092 24       		.byte	0x24
 1236 0093 5A000000 		.long	0x5a
 1237 0097 04       		.uleb128 0x4
 1238 0098 F7000000 		.long	.LASF13
 1239 009c 03       		.byte	0x3
 1240 009d 25       		.byte	0x25
 1241 009e 5A000000 		.long	0x5a
 1242 00a2 04       		.uleb128 0x4
 1243 00a3 BC020000 		.long	.LASF14
 1244 00a7 03       		.byte	0x3
 1245 00a8 26       		.byte	0x26
 1246 00a9 5A000000 		.long	0x5a
 1247 00ad 04       		.uleb128 0x4
 1248 00ae E4000000 		.long	.LASF15
 1249 00b2 03       		.byte	0x3
 1250 00b3 27       		.byte	0x27
 1251 00b4 5A000000 		.long	0x5a
 1252 00b8 04       		.uleb128 0x4
 1253 00b9 CB020000 		.long	.LASF16
 1254 00bd 03       		.byte	0x3
 1255 00be 28       		.byte	0x28
 1256 00bf 73000000 		.long	0x73
 1257 00c3 04       		.uleb128 0x4
 1258 00c4 11020000 		.long	.LASF17
 1259 00c8 03       		.byte	0x3
 1260 00c9 29       		.byte	0x29
 1261 00ca 48000000 		.long	0x48
 1262 00ce 04       		.uleb128 0x4
 1263 00cf 71010000 		.long	.LASF18
 1264 00d3 03       		.byte	0x3
 1265 00d4 2A       		.byte	0x2a
 1266 00d5 48000000 		.long	0x48
 1267 00d9 04       		.uleb128 0x4
 1268 00da 43020000 		.long	.LASF19
 1269 00de 03       		.byte	0x3
 1270 00df 2B       		.byte	0x2b
GAS LISTING /tmp/ccAXF10R.s 			page 34


 1271 00e0 73000000 		.long	0x73
 1272 00e4 04       		.uleb128 0x4
 1273 00e5 2D040000 		.long	.LASF20
 1274 00e9 03       		.byte	0x3
 1275 00ea 2C       		.byte	0x2c
 1276 00eb 73000000 		.long	0x73
 1277 00ef 04       		.uleb128 0x4
 1278 00f0 0A040000 		.long	.LASF21
 1279 00f4 03       		.byte	0x3
 1280 00f5 2D       		.byte	0x2d
 1281 00f6 73000000 		.long	0x73
 1282 00fa 04       		.uleb128 0x4
 1283 00fb C8030000 		.long	.LASF22
 1284 00ff 04       		.byte	0x4
 1285 0100 2A       		.byte	0x2a
 1286 0101 05010000 		.long	0x105
 1287 0105 05       		.uleb128 0x5
 1288 0106 C8030000 		.long	.LASF22
 1289 010a 48       		.byte	0x48
 1290 010b 05       		.byte	0x5
 1291 010c 5E       		.byte	0x5e
 1292 010d 02020000 		.long	0x202
 1293 0111 06       		.uleb128 0x6
 1294 0112 B9030000 		.long	.LASF23
 1295 0116 05       		.byte	0x5
 1296 0117 5F       		.byte	0x5f
 1297 0118 23020000 		.long	0x223
 1298 011c 00       		.byte	0
 1299 011d 06       		.uleb128 0x6
 1300 011e C4020000 		.long	.LASF24
 1301 0122 05       		.byte	0x5
 1302 0123 61       		.byte	0x61
 1303 0124 23020000 		.long	0x223
 1304 0128 04       		.byte	0x4
 1305 0129 06       		.uleb128 0x6
 1306 012a 77000000 		.long	.LASF25
 1307 012e 05       		.byte	0x5
 1308 012f 63       		.byte	0x63
 1309 0130 B8000000 		.long	0xb8
 1310 0134 08       		.byte	0x8
 1311 0135 06       		.uleb128 0x6
 1312 0136 A7040000 		.long	.LASF26
 1313 013a 05       		.byte	0x5
 1314 013b 64       		.byte	0x64
 1315 013c B1020000 		.long	0x2b1
 1316 0140 0C       		.byte	0xc
 1317 0141 06       		.uleb128 0x6
 1318 0142 37010000 		.long	.LASF27
 1319 0146 05       		.byte	0x5
 1320 0147 66       		.byte	0x66
 1321 0148 23020000 		.long	0x223
 1322 014c 10       		.byte	0x10
 1323 014d 06       		.uleb128 0x6
 1324 014e 6C020000 		.long	.LASF28
 1325 0152 05       		.byte	0x5
 1326 0153 67       		.byte	0x67
 1327 0154 23020000 		.long	0x223
GAS LISTING /tmp/ccAXF10R.s 			page 35


 1328 0158 14       		.byte	0x14
 1329 0159 06       		.uleb128 0x6
 1330 015a 73040000 		.long	.LASF29
 1331 015e 05       		.byte	0x5
 1332 015f 6E       		.byte	0x6e
 1333 0160 3B040000 		.long	0x43b
 1334 0164 18       		.byte	0x18
 1335 0165 06       		.uleb128 0x6
 1336 0166 82030000 		.long	.LASF30
 1337 016a 05       		.byte	0x5
 1338 016b 79       		.byte	0x79
 1339 016c 97000000 		.long	0x97
 1340 0170 1C       		.byte	0x1c
 1341 0171 06       		.uleb128 0x6
 1342 0172 C0030000 		.long	.LASF31
 1343 0176 05       		.byte	0x5
 1344 0177 7D       		.byte	0x7d
 1345 0178 8C000000 		.long	0x8c
 1346 017c 1D       		.byte	0x1d
 1347 017d 06       		.uleb128 0x6
 1348 017e 39040000 		.long	.LASF32
 1349 0182 05       		.byte	0x5
 1350 0183 82       		.byte	0x82
 1351 0184 A2000000 		.long	0xa2
 1352 0188 1E       		.byte	0x1e
 1353 0189 06       		.uleb128 0x6
 1354 018a 8A030000 		.long	.LASF33
 1355 018e 05       		.byte	0x5
 1356 018f 88       		.byte	0x88
 1357 0190 AD000000 		.long	0xad
 1358 0194 1F       		.byte	0x1f
 1359 0195 06       		.uleb128 0x6
 1360 0196 1F040000 		.long	.LASF34
 1361 019a 05       		.byte	0x5
 1362 019b 8F       		.byte	0x8f
 1363 019c D5020000 		.long	0x2d5
 1364 01a0 20       		.byte	0x20
 1365 01a1 07       		.uleb128 0x7
 1366 01a2 705F7500 		.string	"p_u"
 1367 01a6 05       		.byte	0x5
 1368 01a7 B4       		.byte	0xb4
 1369 01a8 06040000 		.long	0x406
 1370 01ac 24       		.byte	0x24
 1371 01ad 06       		.uleb128 0x6
 1372 01ae AD040000 		.long	.LASF35
 1373 01b2 05       		.byte	0x5
 1374 01b3 B9       		.byte	0xb9
 1375 01b4 49020000 		.long	0x249
 1376 01b8 28       		.byte	0x28
 1377 01b9 06       		.uleb128 0x6
 1378 01ba A0010000 		.long	.LASF36
 1379 01be 05       		.byte	0x5
 1380 01bf BF       		.byte	0xbf
 1381 01c0 29020000 		.long	0x229
 1382 01c4 2C       		.byte	0x2c
 1383 01c5 06       		.uleb128 0x6
 1384 01c6 00000000 		.long	.LASF37
GAS LISTING /tmp/ccAXF10R.s 			page 36


 1385 01ca 05       		.byte	0x5
 1386 01cb C3       		.byte	0xc3
 1387 01cc C3000000 		.long	0xc3
 1388 01d0 34       		.byte	0x34
 1389 01d1 06       		.uleb128 0x6
 1390 01d2 DD030000 		.long	.LASF38
 1391 01d6 05       		.byte	0x5
 1392 01d7 C9       		.byte	0xc9
 1393 01d8 D9000000 		.long	0xd9
 1394 01dc 38       		.byte	0x38
 1395 01dd 06       		.uleb128 0x6
 1396 01de 6E030000 		.long	.LASF39
 1397 01e2 05       		.byte	0x5
 1398 01e3 D0       		.byte	0xd0
 1399 01e4 4D040000 		.long	0x44d
 1400 01e8 3C       		.byte	0x3c
 1401 01e9 06       		.uleb128 0x6
 1402 01ea 14040000 		.long	.LASF40
 1403 01ee 05       		.byte	0x5
 1404 01ef D4       		.byte	0xd4
 1405 01f0 B8000000 		.long	0xb8
 1406 01f4 40       		.byte	0x40
 1407 01f5 06       		.uleb128 0x6
 1408 01f6 AC000000 		.long	.LASF41
 1409 01fa 05       		.byte	0x5
 1410 01fb DA       		.byte	0xda
 1411 01fc 66020000 		.long	0x266
 1412 0200 44       		.byte	0x44
 1413 0201 00       		.byte	0
 1414 0202 08       		.uleb128 0x8
 1415 0203 08       		.byte	0x8
 1416 0204 04       		.byte	0x4
 1417 0205 61       		.byte	0x61
 1418 0206 23020000 		.long	0x223
 1419 020a 06       		.uleb128 0x6
 1420 020b B9030000 		.long	.LASF23
 1421 020f 04       		.byte	0x4
 1422 0210 62       		.byte	0x62
 1423 0211 23020000 		.long	0x223
 1424 0215 00       		.byte	0
 1425 0216 06       		.uleb128 0x6
 1426 0217 C4020000 		.long	.LASF24
 1427 021b 04       		.byte	0x4
 1428 021c 64       		.byte	0x64
 1429 021d 23020000 		.long	0x223
 1430 0221 04       		.byte	0x4
 1431 0222 00       		.byte	0
 1432 0223 09       		.uleb128 0x9
 1433 0224 04       		.byte	0x4
 1434 0225 FA000000 		.long	0xfa
 1435 0229 04       		.uleb128 0x4
 1436 022a 7A020000 		.long	.LASF42
 1437 022e 04       		.byte	0x4
 1438 022f 66       		.byte	0x66
 1439 0230 02020000 		.long	0x202
 1440 0234 08       		.uleb128 0x8
 1441 0235 04       		.byte	0x4
GAS LISTING /tmp/ccAXF10R.s 			page 37


 1442 0236 04       		.byte	0x4
 1443 0237 6B       		.byte	0x6b
 1444 0238 49020000 		.long	0x249
 1445 023c 06       		.uleb128 0x6
 1446 023d B9030000 		.long	.LASF23
 1447 0241 04       		.byte	0x4
 1448 0242 6D       		.byte	0x6d
 1449 0243 23020000 		.long	0x223
 1450 0247 00       		.byte	0
 1451 0248 00       		.byte	0
 1452 0249 04       		.uleb128 0x4
 1453 024a 37020000 		.long	.LASF43
 1454 024e 04       		.byte	0x4
 1455 024f 70       		.byte	0x70
 1456 0250 34020000 		.long	0x234
 1457 0254 03       		.uleb128 0x3
 1458 0255 04       		.byte	0x4
 1459 0256 07       		.byte	0x7
 1460 0257 55020000 		.long	.LASF44
 1461 025b 04       		.uleb128 0x4
 1462 025c 98040000 		.long	.LASF45
 1463 0260 06       		.byte	0x6
 1464 0261 4B       		.byte	0x4b
 1465 0262 66020000 		.long	0x266
 1466 0266 0A       		.uleb128 0xa
 1467 0267 04       		.byte	0x4
 1468 0268 05       		.uleb128 0x5
 1469 0269 26040000 		.long	.LASF46
 1470 026d 14       		.byte	0x14
 1471 026e 06       		.byte	0x6
 1472 026f 59       		.byte	0x59
 1473 0270 B1020000 		.long	0x2b1
 1474 0274 07       		.uleb128 0x7
 1475 0275 65627800 		.string	"ebx"
 1476 0279 06       		.byte	0x6
 1477 027a 5A       		.byte	0x5a
 1478 027b 5B020000 		.long	0x25b
 1479 027f 00       		.byte	0
 1480 0280 07       		.uleb128 0x7
 1481 0281 65646900 		.string	"edi"
 1482 0285 06       		.byte	0x6
 1483 0286 5B       		.byte	0x5b
 1484 0287 5B020000 		.long	0x25b
 1485 028b 04       		.byte	0x4
 1486 028c 07       		.uleb128 0x7
 1487 028d 65736900 		.string	"esi"
 1488 0291 06       		.byte	0x6
 1489 0292 5C       		.byte	0x5c
 1490 0293 5B020000 		.long	0x25b
 1491 0297 08       		.byte	0x8
 1492 0298 07       		.uleb128 0x7
 1493 0299 65627000 		.string	"ebp"
 1494 029d 06       		.byte	0x6
 1495 029e 5D       		.byte	0x5d
 1496 029f 5B020000 		.long	0x25b
 1497 02a3 0C       		.byte	0xc
 1498 02a4 07       		.uleb128 0x7
GAS LISTING /tmp/ccAXF10R.s 			page 38


 1499 02a5 65697000 		.string	"eip"
 1500 02a9 06       		.byte	0x6
 1501 02aa 5E       		.byte	0x5e
 1502 02ab 5B020000 		.long	0x25b
 1503 02af 10       		.byte	0x10
 1504 02b0 00       		.byte	0
 1505 02b1 05       		.uleb128 0x5
 1506 02b2 E4010000 		.long	.LASF47
 1507 02b6 04       		.byte	0x4
 1508 02b7 06       		.byte	0x6
 1509 02b8 66       		.byte	0x66
 1510 02b9 CA020000 		.long	0x2ca
 1511 02bd 07       		.uleb128 0x7
 1512 02be 65737000 		.string	"esp"
 1513 02c2 06       		.byte	0x6
 1514 02c3 67       		.byte	0x67
 1515 02c4 CA020000 		.long	0x2ca
 1516 02c8 00       		.byte	0
 1517 02c9 00       		.byte	0
 1518 02ca 09       		.uleb128 0x9
 1519 02cb 04       		.byte	0x4
 1520 02cc D0020000 		.long	0x2d0
 1521 02d0 0B       		.uleb128 0xb
 1522 02d1 68020000 		.long	0x268
 1523 02d5 0B       		.uleb128 0xb
 1524 02d6 EF000000 		.long	0xef
 1525 02da 08       		.uleb128 0x8
 1526 02db 1C       		.byte	0x1c
 1527 02dc 07       		.byte	0x7
 1528 02dd 5E       		.byte	0x5e
 1529 02de 2B030000 		.long	0x32b
 1530 02e2 06       		.uleb128 0x6
 1531 02e3 F1030000 		.long	.LASF48
 1532 02e7 07       		.byte	0x7
 1533 02e8 5F       		.byte	0x5f
 1534 02e9 29020000 		.long	0x229
 1535 02ed 00       		.byte	0
 1536 02ee 06       		.uleb128 0x6
 1537 02ef 94030000 		.long	.LASF49
 1538 02f3 07       		.byte	0x7
 1539 02f4 60       		.byte	0x60
 1540 02f5 B8000000 		.long	0xb8
 1541 02f9 08       		.byte	0x8
 1542 02fa 06       		.uleb128 0x6
 1543 02fb 74020000 		.long	.LASF50
 1544 02ff 07       		.byte	0x7
 1545 0300 62       		.byte	0x62
 1546 0301 B1020000 		.long	0x2b1
 1547 0305 0C       		.byte	0xc
 1548 0306 06       		.uleb128 0x6
 1549 0307 50010000 		.long	.LASF51
 1550 030b 07       		.byte	0x7
 1551 030c 65       		.byte	0x65
 1552 030d 23020000 		.long	0x223
 1553 0311 10       		.byte	0x10
 1554 0312 06       		.uleb128 0x6
 1555 0313 A3020000 		.long	.LASF52
GAS LISTING /tmp/ccAXF10R.s 			page 39


 1556 0317 07       		.byte	0x7
 1557 0318 66       		.byte	0x66
 1558 0319 23020000 		.long	0x223
 1559 031d 14       		.byte	0x14
 1560 031e 06       		.uleb128 0x6
 1561 031f 99020000 		.long	.LASF53
 1562 0323 07       		.byte	0x7
 1563 0324 69       		.byte	0x69
 1564 0325 23020000 		.long	0x223
 1565 0329 18       		.byte	0x18
 1566 032a 00       		.byte	0
 1567 032b 04       		.uleb128 0x4
 1568 032c 40040000 		.long	.LASF54
 1569 0330 07       		.byte	0x7
 1570 0331 6B       		.byte	0x6b
 1571 0332 DA020000 		.long	0x2da
 1572 0336 05       		.uleb128 0x5
 1573 0337 4F020000 		.long	.LASF55
 1574 033b 10       		.byte	0x10
 1575 033c 08       		.byte	0x8
 1576 033d 2C       		.byte	0x2c
 1577 033e 67030000 		.long	0x367
 1578 0342 06       		.uleb128 0x6
 1579 0343 B4000000 		.long	.LASF56
 1580 0347 08       		.byte	0x8
 1581 0348 2D       		.byte	0x2d
 1582 0349 29020000 		.long	0x229
 1583 034d 00       		.byte	0
 1584 034e 06       		.uleb128 0x6
 1585 034f 9F040000 		.long	.LASF57
 1586 0353 08       		.byte	0x8
 1587 0354 2F       		.byte	0x2f
 1588 0355 23020000 		.long	0x223
 1589 0359 08       		.byte	0x8
 1590 035a 06       		.uleb128 0x6
 1591 035b 06000000 		.long	.LASF58
 1592 035f 08       		.byte	0x8
 1593 0360 31       		.byte	0x31
 1594 0361 67030000 		.long	0x367
 1595 0365 0C       		.byte	0xc
 1596 0366 00       		.byte	0
 1597 0367 09       		.uleb128 0x9
 1598 0368 04       		.byte	0x4
 1599 0369 36030000 		.long	0x336
 1600 036d 04       		.uleb128 0x4
 1601 036e 4F020000 		.long	.LASF55
 1602 0372 08       		.byte	0x8
 1603 0373 33       		.byte	0x33
 1604 0374 36030000 		.long	0x336
 1605 0378 04       		.uleb128 0x4
 1606 0379 5E040000 		.long	.LASF59
 1607 037d 09       		.byte	0x9
 1608 037e 2C       		.byte	0x2c
 1609 037f 83030000 		.long	0x383
 1610 0383 05       		.uleb128 0x5
 1611 0384 5E040000 		.long	.LASF59
 1612 0388 10       		.byte	0x10
GAS LISTING /tmp/ccAXF10R.s 			page 40


 1613 0389 09       		.byte	0x9
 1614 038a 31       		.byte	0x31
 1615 038b C0030000 		.long	0x3c0
 1616 038f 06       		.uleb128 0x6
 1617 0390 17020000 		.long	.LASF60
 1618 0394 09       		.byte	0x9
 1619 0395 32       		.byte	0x32
 1620 0396 C0030000 		.long	0x3c0
 1621 039a 00       		.byte	0
 1622 039b 06       		.uleb128 0x6
 1623 039c 59030000 		.long	.LASF61
 1624 03a0 09       		.byte	0x9
 1625 03a1 35       		.byte	0x35
 1626 03a2 23020000 		.long	0x223
 1627 03a6 04       		.byte	0x4
 1628 03a7 06       		.uleb128 0x6
 1629 03a8 AB020000 		.long	.LASF62
 1630 03ac 09       		.byte	0x9
 1631 03ad 37       		.byte	0x37
 1632 03ae D9000000 		.long	0xd9
 1633 03b2 08       		.byte	0x8
 1634 03b3 06       		.uleb128 0x6
 1635 03b4 65030000 		.long	.LASF63
 1636 03b8 09       		.byte	0x9
 1637 03b9 3A       		.byte	0x3a
 1638 03ba E4000000 		.long	0xe4
 1639 03be 0C       		.byte	0xc
 1640 03bf 00       		.byte	0
 1641 03c0 09       		.uleb128 0x9
 1642 03c1 04       		.byte	0x4
 1643 03c2 78030000 		.long	0x378
 1644 03c6 05       		.uleb128 0x5
 1645 03c7 7B010000 		.long	.LASF64
 1646 03cb 04       		.byte	0x4
 1647 03cc 09       		.byte	0x9
 1648 03cd 41       		.byte	0x41
 1649 03ce DF030000 		.long	0x3df
 1650 03d2 06       		.uleb128 0x6
 1651 03d3 7A040000 		.long	.LASF65
 1652 03d7 09       		.byte	0x9
 1653 03d8 42       		.byte	0x42
 1654 03d9 C0030000 		.long	0x3c0
 1655 03dd 00       		.byte	0
 1656 03de 00       		.byte	0
 1657 03df 04       		.uleb128 0x4
 1658 03e0 7B010000 		.long	.LASF64
 1659 03e4 09       		.byte	0x9
 1660 03e5 45       		.byte	0x45
 1661 03e6 C6030000 		.long	0x3c6
 1662 03ea 04       		.uleb128 0x4
 1663 03eb 87010000 		.long	.LASF66
 1664 03ef 09       		.byte	0x9
 1665 03f0 4A       		.byte	0x4a
 1666 03f1 F5030000 		.long	0x3f5
 1667 03f5 09       		.uleb128 0x9
 1668 03f6 04       		.byte	0x4
 1669 03f7 FB030000 		.long	0x3fb
GAS LISTING /tmp/ccAXF10R.s 			page 41


 1670 03fb 0C       		.uleb128 0xc
 1671 03fc 06040000 		.long	0x406
 1672 0400 0D       		.uleb128 0xd
 1673 0401 CE000000 		.long	0xce
 1674 0405 00       		.byte	0
 1675 0406 0E       		.uleb128 0xe
 1676 0407 04       		.byte	0x4
 1677 0408 05       		.byte	0x5
 1678 0409 96       		.byte	0x96
 1679 040a 3B040000 		.long	0x43b
 1680 040e 0F       		.uleb128 0xf
 1681 040f 21000000 		.long	.LASF67
 1682 0413 05       		.byte	0x5
 1683 0414 9D       		.byte	0x9d
 1684 0415 C3000000 		.long	0xc3
 1685 0419 0F       		.uleb128 0xf
 1686 041a 5A000000 		.long	.LASF68
 1687 041e 05       		.byte	0x5
 1688 041f A4       		.byte	0xa4
 1689 0420 C3000000 		.long	0xc3
 1690 0424 0F       		.uleb128 0xf
 1691 0425 6C040000 		.long	.LASF69
 1692 0429 05       		.byte	0x5
 1693 042a AB       		.byte	0xab
 1694 042b 66020000 		.long	0x266
 1695 042f 0F       		.uleb128 0xf
 1696 0430 B2030000 		.long	.LASF70
 1697 0434 05       		.byte	0x5
 1698 0435 B2       		.byte	0xb2
 1699 0436 D9000000 		.long	0xd9
 1700 043a 00       		.byte	0
 1701 043b 09       		.uleb128 0x9
 1702 043c 04       		.byte	0x4
 1703 043d 41040000 		.long	0x441
 1704 0441 10       		.uleb128 0x10
 1705 0442 46040000 		.long	0x446
 1706 0446 03       		.uleb128 0x3
 1707 0447 01       		.byte	0x1
 1708 0448 06       		.byte	0x6
 1709 0449 05040000 		.long	.LASF71
 1710 044d 09       		.uleb128 0x9
 1711 044e 04       		.byte	0x4
 1712 044f 6D030000 		.long	0x36d
 1713 0453 11       		.uleb128 0x11
 1714 0454 B7040000 		.long	.LASF92
 1715 0458 01       		.byte	0x1
 1716 0459 FB       		.byte	0xfb
 1717 045a 01       		.byte	0x1
 1718 045b 75040000 		.long	0x475
 1719 045f 12       		.uleb128 0x12
 1720 0460 747000   		.string	"tp"
 1721 0463 01       		.byte	0x1
 1722 0464 FB       		.byte	0xfb
 1723 0465 23020000 		.long	0x223
 1724 0469 13       		.uleb128 0x13
 1725 046a 58010000 		.long	.LASF72
 1726 046e 01       		.byte	0x1
GAS LISTING /tmp/ccAXF10R.s 			page 42


 1727 046f FB       		.byte	0xfb
 1728 0470 D9000000 		.long	0xd9
 1729 0474 00       		.byte	0
 1730 0475 14       		.uleb128 0x14
 1731 0476 FF010000 		.long	.LASF73
 1732 047a 01       		.byte	0x1
 1733 047b 55       		.byte	0x55
 1734 047c 00000000 		.long	.LFB7
 1735 0480 28000000 		.long	.LFE7-.LFB7
 1736 0484 01       		.uleb128 0x1
 1737 0485 9C       		.byte	0x9c
 1738 0486 B5040000 		.long	0x4b5
 1739 048a 15       		.uleb128 0x15
 1740 048b 65737000 		.string	"esp"
 1741 048f 01       		.byte	0x1
 1742 0490 55       		.byte	0x55
 1743 0491 B5040000 		.long	0x4b5
 1744 0495 02       		.uleb128 0x2
 1745 0496 91       		.byte	0x91
 1746 0497 00       		.sleb128 0
 1747 0498 15       		.uleb128 0x15
 1748 0499 656C7000 		.string	"elp"
 1749 049d 01       		.byte	0x1
 1750 049e 55       		.byte	0x55
 1751 049f C0030000 		.long	0x3c0
 1752 04a3 02       		.uleb128 0x2
 1753 04a4 91       		.byte	0x91
 1754 04a5 04       		.sleb128 4
 1755 04a6 16       		.uleb128 0x16
 1756 04a7 58010000 		.long	.LASF72
 1757 04ab 01       		.byte	0x1
 1758 04ac 55       		.byte	0x55
 1759 04ad D9000000 		.long	0xd9
 1760 04b1 02       		.uleb128 0x2
 1761 04b2 91       		.byte	0x91
 1762 04b3 08       		.sleb128 8
 1763 04b4 00       		.byte	0
 1764 04b5 09       		.uleb128 0x9
 1765 04b6 04       		.byte	0x4
 1766 04b7 DF030000 		.long	0x3df
 1767 04bb 14       		.uleb128 0x14
 1768 04bc 1F020000 		.long	.LASF74
 1769 04c0 01       		.byte	0x1
 1770 04c1 6F       		.byte	0x6f
 1771 04c2 30000000 		.long	.LFB8
 1772 04c6 2E000000 		.long	.LFE8-.LFB8
 1773 04ca 01       		.uleb128 0x1
 1774 04cb 9C       		.byte	0x9c
 1775 04cc FC040000 		.long	0x4fc
 1776 04d0 17       		.uleb128 0x17
 1777 04d1 65737000 		.string	"esp"
 1778 04d5 01       		.byte	0x1
 1779 04d6 6F       		.byte	0x6f
 1780 04d7 B5040000 		.long	0x4b5
 1781 04db 00000000 		.long	.LLST0
 1782 04df 17       		.uleb128 0x17
 1783 04e0 656C7000 		.string	"elp"
GAS LISTING /tmp/ccAXF10R.s 			page 43


 1784 04e4 01       		.byte	0x1
 1785 04e5 6F       		.byte	0x6f
 1786 04e6 C0030000 		.long	0x3c0
 1787 04ea 1F000000 		.long	.LLST1
 1788 04ee 18       		.uleb128 0x18
 1789 04ef 7000     		.string	"p"
 1790 04f1 01       		.byte	0x1
 1791 04f2 70       		.byte	0x70
 1792 04f3 C0030000 		.long	0x3c0
 1793 04f7 55000000 		.long	.LLST2
 1794 04fb 00       		.byte	0
 1795 04fc 19       		.uleb128 0x19
 1796 04fd AB010000 		.long	.LASF75
 1797 0501 01       		.byte	0x1
 1798 0502 88       		.byte	0x88
 1799 0503 D9000000 		.long	0xd9
 1800 0507 60000000 		.long	.LFB9
 1801 050b 1D000000 		.long	.LFE9-.LFB9
 1802 050f 01       		.uleb128 0x1
 1803 0510 9C       		.byte	0x9c
 1804 0511 31050000 		.long	0x531
 1805 0515 16       		.uleb128 0x16
 1806 0516 58010000 		.long	.LASF72
 1807 051a 01       		.byte	0x1
 1808 051b 88       		.byte	0x88
 1809 051c D9000000 		.long	0xd9
 1810 0520 02       		.uleb128 0x2
 1811 0521 91       		.byte	0x91
 1812 0522 00       		.sleb128 0
 1813 0523 18       		.uleb128 0x18
 1814 0524 6D00     		.string	"m"
 1815 0526 01       		.byte	0x1
 1816 0527 89       		.byte	0x89
 1817 0528 D9000000 		.long	0xd9
 1818 052c 74000000 		.long	.LLST3
 1819 0530 00       		.byte	0
 1820 0531 19       		.uleb128 0x19
 1821 0532 4B000000 		.long	.LASF76
 1822 0536 01       		.byte	0x1
 1823 0537 9D       		.byte	0x9d
 1824 0538 D9000000 		.long	0xd9
 1825 053c 80000000 		.long	.LFB10
 1826 0540 13000000 		.long	.LFE10-.LFB10
 1827 0544 01       		.uleb128 0x1
 1828 0545 9C       		.byte	0x9c
 1829 0546 5A050000 		.long	0x55a
 1830 054a 1A       		.uleb128 0x1a
 1831 054b 58010000 		.long	.LASF72
 1832 054f 01       		.byte	0x1
 1833 0550 9D       		.byte	0x9d
 1834 0551 D9000000 		.long	0xd9
 1835 0555 98000000 		.long	.LLST4
 1836 0559 00       		.byte	0
 1837 055a 19       		.uleb128 0x19
 1838 055b 82040000 		.long	.LASF77
 1839 055f 01       		.byte	0x1
 1840 0560 D1       		.byte	0xd1
GAS LISTING /tmp/ccAXF10R.s 			page 44


 1841 0561 E4000000 		.long	0xe4
 1842 0565 A0000000 		.long	.LFB12
 1843 0569 11000000 		.long	.LFE12-.LFB12
 1844 056d 01       		.uleb128 0x1
 1845 056e 9C       		.byte	0x9c
 1846 056f 8F050000 		.long	0x58f
 1847 0573 15       		.uleb128 0x15
 1848 0574 656C7000 		.string	"elp"
 1849 0578 01       		.byte	0x1
 1850 0579 D1       		.byte	0xd1
 1851 057a C0030000 		.long	0x3c0
 1852 057e 02       		.uleb128 0x2
 1853 057f 91       		.byte	0x91
 1854 0580 00       		.sleb128 0
 1855 0581 1B       		.uleb128 0x1b
 1856 0582 58040000 		.long	.LASF78
 1857 0586 01       		.byte	0x1
 1858 0587 D2       		.byte	0xd2
 1859 0588 E4000000 		.long	0xe4
 1860 058c 01       		.uleb128 0x1
 1861 058d 50       		.byte	0x50
 1862 058e 00       		.byte	0
 1863 058f 1C       		.uleb128 0x1c
 1864 0590 53040000 		.long	0x453
 1865 0594 C0000000 		.long	.LFB14
 1866 0598 5E000000 		.long	.LFE14-.LFB14
 1867 059c 01       		.uleb128 0x1
 1868 059d 9C       		.byte	0x9c
 1869 059e F3050000 		.long	0x5f3
 1870 05a2 1D       		.uleb128 0x1d
 1871 05a3 5F040000 		.long	0x45f
 1872 05a7 02       		.uleb128 0x2
 1873 05a8 91       		.byte	0x91
 1874 05a9 00       		.sleb128 0
 1875 05aa 1D       		.uleb128 0x1d
 1876 05ab 69040000 		.long	0x469
 1877 05af 02       		.uleb128 0x2
 1878 05b0 91       		.byte	0x91
 1879 05b1 04       		.sleb128 4
 1880 05b2 1E       		.uleb128 0x1e
 1881 05b3 00000000 		.long	.Ldebug_ranges0+0
 1882 05b7 1F       		.uleb128 0x1f
 1883 05b8 69040000 		.long	0x469
 1884 05bc B7000000 		.long	.LLST5
 1885 05c0 1F       		.uleb128 0x1f
 1886 05c1 5F040000 		.long	0x45f
 1887 05c5 D7000000 		.long	.LLST6
 1888 05c9 20       		.uleb128 0x20
 1889 05ca F9000000 		.long	.LVL16
 1890 05ce CB090000 		.long	0x9cb
 1891 05d2 DF050000 		.long	0x5df
 1892 05d6 21       		.uleb128 0x21
 1893 05d7 02       		.uleb128 0x2
 1894 05d8 74       		.byte	0x74
 1895 05d9 00       		.sleb128 0
 1896 05da 03       		.uleb128 0x3
 1897 05db 91       		.byte	0x91
GAS LISTING /tmp/ccAXF10R.s 			page 45


 1898 05dc 00       		.sleb128 0
 1899 05dd 06       		.byte	0x6
 1900 05de 00       		.byte	0
 1901 05df 22       		.uleb128 0x22
 1902 05e0 15010000 		.long	.LVL19
 1903 05e4 CB090000 		.long	0x9cb
 1904 05e8 21       		.uleb128 0x21
 1905 05e9 02       		.uleb128 0x2
 1906 05ea 74       		.byte	0x74
 1907 05eb 00       		.sleb128 0
 1908 05ec 03       		.uleb128 0x3
 1909 05ed 91       		.byte	0x91
 1910 05ee 00       		.sleb128 0
 1911 05ef 06       		.byte	0x6
 1912 05f0 00       		.byte	0
 1913 05f1 00       		.byte	0
 1914 05f2 00       		.byte	0
 1915 05f3 14       		.uleb128 0x14
 1916 05f4 22010000 		.long	.LASF79
 1917 05f8 01       		.byte	0x1
 1918 05f9 B8       		.byte	0xb8
 1919 05fa 20010000 		.long	.LFB11
 1920 05fe 3A000000 		.long	.LFE11-.LFB11
 1921 0602 01       		.uleb128 0x1
 1922 0603 9C       		.byte	0x9c
 1923 0604 3D060000 		.long	0x63d
 1924 0608 15       		.uleb128 0x15
 1925 0609 65737000 		.string	"esp"
 1926 060d 01       		.byte	0x1
 1927 060e B8       		.byte	0xb8
 1928 060f B5040000 		.long	0x4b5
 1929 0613 02       		.uleb128 0x2
 1930 0614 91       		.byte	0x91
 1931 0615 00       		.sleb128 0
 1932 0616 16       		.uleb128 0x16
 1933 0617 58040000 		.long	.LASF78
 1934 061b 01       		.byte	0x1
 1935 061c B8       		.byte	0xb8
 1936 061d E4000000 		.long	0xe4
 1937 0621 02       		.uleb128 0x2
 1938 0622 91       		.byte	0x91
 1939 0623 04       		.sleb128 4
 1940 0624 18       		.uleb128 0x18
 1941 0625 656C7000 		.string	"elp"
 1942 0629 01       		.byte	0x1
 1943 062a B9       		.byte	0xb9
 1944 062b C0030000 		.long	0x3c0
 1945 062f 0D010000 		.long	.LLST7
 1946 0633 23       		.uleb128 0x23
 1947 0634 4D010000 		.long	.LVL22
 1948 0638 53040000 		.long	0x453
 1949 063c 00       		.byte	0
 1950 063d 14       		.uleb128 0x14
 1951 063e 28000000 		.long	.LASF80
 1952 0642 01       		.byte	0x1
 1953 0643 E5       		.byte	0xe5
 1954 0644 60010000 		.long	.LFB13
GAS LISTING /tmp/ccAXF10R.s 			page 46


 1955 0648 22000000 		.long	.LFE13-.LFB13
 1956 064c 01       		.uleb128 0x1
 1957 064d 9C       		.byte	0x9c
 1958 064e 95060000 		.long	0x695
 1959 0652 15       		.uleb128 0x15
 1960 0653 747000   		.string	"tp"
 1961 0656 01       		.byte	0x1
 1962 0657 E5       		.byte	0xe5
 1963 0658 23020000 		.long	0x223
 1964 065c 02       		.uleb128 0x2
 1965 065d 91       		.byte	0x91
 1966 065e 00       		.sleb128 0
 1967 065f 16       		.uleb128 0x16
 1968 0660 58010000 		.long	.LASF72
 1969 0664 01       		.byte	0x1
 1970 0665 E5       		.byte	0xe5
 1971 0666 D9000000 		.long	0xd9
 1972 066a 02       		.uleb128 0x2
 1973 066b 91       		.byte	0x91
 1974 066c 04       		.sleb128 4
 1975 066d 20       		.uleb128 0x20
 1976 066e 78010000 		.long	.LVL26
 1977 0672 53040000 		.long	0x453
 1978 0676 8B060000 		.long	0x68b
 1979 067a 21       		.uleb128 0x21
 1980 067b 02       		.uleb128 0x2
 1981 067c 74       		.byte	0x74
 1982 067d 00       		.sleb128 0
 1983 067e 03       		.uleb128 0x3
 1984 067f 91       		.byte	0x91
 1985 0680 00       		.sleb128 0
 1986 0681 06       		.byte	0x6
 1987 0682 21       		.uleb128 0x21
 1988 0683 02       		.uleb128 0x2
 1989 0684 74       		.byte	0x74
 1990 0685 04       		.sleb128 4
 1991 0686 03       		.uleb128 0x3
 1992 0687 91       		.byte	0x91
 1993 0688 04       		.sleb128 4
 1994 0689 06       		.byte	0x6
 1995 068a 00       		.byte	0
 1996 068b 23       		.uleb128 0x23
 1997 068c 7D010000 		.long	.LVL27
 1998 0690 E0090000 		.long	0x9e0
 1999 0694 00       		.byte	0
 2000 0695 24       		.uleb128 0x24
 2001 0696 5D010000 		.long	.LASF81
 2002 069a 01       		.byte	0x1
 2003 069b 1601     		.value	0x116
 2004 069d 90010000 		.long	.LFB15
 2005 06a1 22000000 		.long	.LFE15-.LFB15
 2006 06a5 01       		.uleb128 0x1
 2007 06a6 9C       		.byte	0x9c
 2008 06a7 F1060000 		.long	0x6f1
 2009 06ab 25       		.uleb128 0x25
 2010 06ac 65737000 		.string	"esp"
 2011 06b0 01       		.byte	0x1
GAS LISTING /tmp/ccAXF10R.s 			page 47


 2012 06b1 1601     		.value	0x116
 2013 06b3 B5040000 		.long	0x4b5
 2014 06b7 02       		.uleb128 0x2
 2015 06b8 91       		.byte	0x91
 2016 06b9 00       		.sleb128 0
 2017 06ba 26       		.uleb128 0x26
 2018 06bb 58040000 		.long	.LASF78
 2019 06bf 01       		.byte	0x1
 2020 06c0 1601     		.value	0x116
 2021 06c2 E4000000 		.long	0xe4
 2022 06c6 02       		.uleb128 0x2
 2023 06c7 91       		.byte	0x91
 2024 06c8 04       		.sleb128 4
 2025 06c9 20       		.uleb128 0x20
 2026 06ca A8010000 		.long	.LVL29
 2027 06ce F3050000 		.long	0x5f3
 2028 06d2 E7060000 		.long	0x6e7
 2029 06d6 21       		.uleb128 0x21
 2030 06d7 02       		.uleb128 0x2
 2031 06d8 74       		.byte	0x74
 2032 06d9 00       		.sleb128 0
 2033 06da 03       		.uleb128 0x3
 2034 06db 91       		.byte	0x91
 2035 06dc 00       		.sleb128 0
 2036 06dd 06       		.byte	0x6
 2037 06de 21       		.uleb128 0x21
 2038 06df 02       		.uleb128 0x2
 2039 06e0 74       		.byte	0x74
 2040 06e1 04       		.sleb128 4
 2041 06e2 03       		.uleb128 0x3
 2042 06e3 91       		.byte	0x91
 2043 06e4 04       		.sleb128 4
 2044 06e5 06       		.byte	0x6
 2045 06e6 00       		.byte	0
 2046 06e7 23       		.uleb128 0x23
 2047 06e8 AD010000 		.long	.LVL30
 2048 06ec E0090000 		.long	0x9e0
 2049 06f0 00       		.byte	0
 2050 06f1 27       		.uleb128 0x27
 2051 06f2 9B030000 		.long	.LASF82
 2052 06f6 01       		.byte	0x1
 2053 06f7 2901     		.value	0x129
 2054 06f9 E4000000 		.long	0xe4
 2055 06fd C0010000 		.long	.LFB16
 2056 0701 0F000000 		.long	.LFE16-.LFB16
 2057 0705 01       		.uleb128 0x1
 2058 0706 9C       		.byte	0x9c
 2059 0707 29070000 		.long	0x729
 2060 070b 25       		.uleb128 0x25
 2061 070c 656C7000 		.string	"elp"
 2062 0710 01       		.byte	0x1
 2063 0711 2901     		.value	0x129
 2064 0713 C0030000 		.long	0x3c0
 2065 0717 02       		.uleb128 0x2
 2066 0718 91       		.byte	0x91
 2067 0719 00       		.sleb128 0
 2068 071a 28       		.uleb128 0x28
GAS LISTING /tmp/ccAXF10R.s 			page 48


 2069 071b 58040000 		.long	.LASF78
 2070 071f 01       		.byte	0x1
 2071 0720 2A01     		.value	0x12a
 2072 0722 E4000000 		.long	0xe4
 2073 0726 01       		.uleb128 0x1
 2074 0727 50       		.byte	0x50
 2075 0728 00       		.byte	0
 2076 0729 24       		.uleb128 0x24
 2077 072a 5E020000 		.long	.LASF83
 2078 072e 01       		.byte	0x1
 2079 072f 3B01     		.value	0x13b
 2080 0731 D0010000 		.long	.LFB17
 2081 0735 4A000000 		.long	.LFE17-.LFB17
 2082 0739 01       		.uleb128 0x1
 2083 073a 9C       		.byte	0x9c
 2084 073b 7C070000 		.long	0x77c
 2085 073f 26       		.uleb128 0x26
 2086 0740 B3020000 		.long	.LASF84
 2087 0744 01       		.byte	0x1
 2088 0745 3B01     		.value	0x13b
 2089 0747 7C070000 		.long	0x77c
 2090 074b 02       		.uleb128 0x2
 2091 074c 91       		.byte	0x91
 2092 074d 00       		.sleb128 0
 2093 074e 29       		.uleb128 0x29
 2094 074f 58010000 		.long	.LASF72
 2095 0753 01       		.byte	0x1
 2096 0754 3B01     		.value	0x13b
 2097 0756 D9000000 		.long	0xd9
 2098 075a 20010000 		.long	.LLST8
 2099 075e 2A       		.uleb128 0x2a
 2100 075f 65696400 		.string	"eid"
 2101 0763 01       		.byte	0x1
 2102 0764 3C01     		.value	0x13c
 2103 0766 CE000000 		.long	0xce
 2104 076a 3F010000 		.long	.LLST9
 2105 076e 2B       		.uleb128 0x2b
 2106 076f 0B020000 		.long	.LVL39
 2107 0773 21       		.uleb128 0x21
 2108 0774 02       		.uleb128 0x2
 2109 0775 74       		.byte	0x74
 2110 0776 00       		.sleb128 0
 2111 0777 02       		.uleb128 0x2
 2112 0778 73       		.byte	0x73
 2113 0779 00       		.sleb128 0
 2114 077a 00       		.byte	0
 2115 077b 00       		.byte	0
 2116 077c 09       		.uleb128 0x9
 2117 077d 04       		.byte	0x4
 2118 077e 82070000 		.long	0x782
 2119 0782 10       		.uleb128 0x10
 2120 0783 EA030000 		.long	0x3ea
 2121 0787 27       		.uleb128 0x27
 2122 0788 EF020000 		.long	.LASF85
 2123 078c 01       		.byte	0x1
 2124 078d 5E01     		.value	0x15e
 2125 078f D9000000 		.long	0xd9
GAS LISTING /tmp/ccAXF10R.s 			page 49


 2126 0793 20020000 		.long	.LFB18
 2127 0797 45000000 		.long	.LFE18-.LFB18
 2128 079b 01       		.uleb128 0x1
 2129 079c 9C       		.byte	0x9c
 2130 079d DF070000 		.long	0x7df
 2131 07a1 26       		.uleb128 0x26
 2132 07a2 58010000 		.long	.LASF72
 2133 07a6 01       		.byte	0x1
 2134 07a7 5E01     		.value	0x15e
 2135 07a9 D9000000 		.long	0xd9
 2136 07ad 02       		.uleb128 0x2
 2137 07ae 91       		.byte	0x91
 2138 07af 00       		.sleb128 0
 2139 07b0 2A       		.uleb128 0x2a
 2140 07b1 63747000 		.string	"ctp"
 2141 07b5 01       		.byte	0x1
 2142 07b6 5F01     		.value	0x15f
 2143 07b8 23020000 		.long	0x223
 2144 07bc 5E010000 		.long	.LLST10
 2145 07c0 2A       		.uleb128 0x2a
 2146 07c1 6D00     		.string	"m"
 2147 07c3 01       		.byte	0x1
 2148 07c4 6001     		.value	0x160
 2149 07c6 D9000000 		.long	0xd9
 2150 07ca 71010000 		.long	.LLST11
 2151 07ce 22       		.uleb128 0x22
 2152 07cf 48020000 		.long	.LVL47
 2153 07d3 E7090000 		.long	0x9e7
 2154 07d7 21       		.uleb128 0x21
 2155 07d8 02       		.uleb128 0x2
 2156 07d9 74       		.byte	0x74
 2157 07da 00       		.sleb128 0
 2158 07db 01       		.uleb128 0x1
 2159 07dc 38       		.byte	0x38
 2160 07dd 00       		.byte	0
 2161 07de 00       		.byte	0
 2162 07df 27       		.uleb128 0x27
 2163 07e0 00010000 		.long	.LASF86
 2164 07e4 01       		.byte	0x1
 2165 07e5 7B01     		.value	0x17b
 2166 07e7 D9000000 		.long	0xd9
 2167 07eb 70020000 		.long	.LFB19
 2168 07ef 3F000000 		.long	.LFE19-.LFB19
 2169 07f3 01       		.uleb128 0x1
 2170 07f4 9C       		.byte	0x9c
 2171 07f5 37080000 		.long	0x837
 2172 07f9 26       		.uleb128 0x26
 2173 07fa 58010000 		.long	.LASF72
 2174 07fe 01       		.byte	0x1
 2175 07ff 7B01     		.value	0x17b
 2176 0801 D9000000 		.long	0xd9
 2177 0805 02       		.uleb128 0x2
 2178 0806 91       		.byte	0x91
 2179 0807 00       		.sleb128 0
 2180 0808 2A       		.uleb128 0x2a
 2181 0809 63747000 		.string	"ctp"
 2182 080d 01       		.byte	0x1
GAS LISTING /tmp/ccAXF10R.s 			page 50


 2183 080e 7C01     		.value	0x17c
 2184 0810 23020000 		.long	0x223
 2185 0814 AB010000 		.long	.LLST12
 2186 0818 2A       		.uleb128 0x2a
 2187 0819 6D00     		.string	"m"
 2188 081b 01       		.byte	0x1
 2189 081c 7D01     		.value	0x17d
 2190 081e D9000000 		.long	0xd9
 2191 0822 BE010000 		.long	.LLST13
 2192 0826 22       		.uleb128 0x22
 2193 0827 98020000 		.long	.LVL55
 2194 082b E7090000 		.long	0x9e7
 2195 082f 21       		.uleb128 0x21
 2196 0830 02       		.uleb128 0x2
 2197 0831 74       		.byte	0x74
 2198 0832 00       		.sleb128 0
 2199 0833 01       		.uleb128 0x1
 2200 0834 38       		.byte	0x38
 2201 0835 00       		.byte	0
 2202 0836 00       		.byte	0
 2203 0837 27       		.uleb128 0x27
 2204 0838 8C020000 		.long	.LASF87
 2205 083c 01       		.byte	0x1
 2206 083d 9701     		.value	0x197
 2207 083f D9000000 		.long	0xd9
 2208 0843 B0020000 		.long	.LFB20
 2209 0847 41000000 		.long	.LFE20-.LFB20
 2210 084b 01       		.uleb128 0x1
 2211 084c 9C       		.byte	0x9c
 2212 084d 81080000 		.long	0x881
 2213 0851 26       		.uleb128 0x26
 2214 0852 58010000 		.long	.LASF72
 2215 0856 01       		.byte	0x1
 2216 0857 9701     		.value	0x197
 2217 0859 D9000000 		.long	0xd9
 2218 085d 02       		.uleb128 0x2
 2219 085e 91       		.byte	0x91
 2220 085f 00       		.sleb128 0
 2221 0860 2A       		.uleb128 0x2a
 2222 0861 63747000 		.string	"ctp"
 2223 0865 01       		.byte	0x1
 2224 0866 9801     		.value	0x198
 2225 0868 23020000 		.long	0x223
 2226 086c ED010000 		.long	.LLST14
 2227 0870 22       		.uleb128 0x22
 2228 0871 DC020000 		.long	.LVL60
 2229 0875 E7090000 		.long	0x9e7
 2230 0879 21       		.uleb128 0x21
 2231 087a 02       		.uleb128 0x2
 2232 087b 74       		.byte	0x74
 2233 087c 00       		.sleb128 0
 2234 087d 01       		.uleb128 0x1
 2235 087e 39       		.byte	0x39
 2236 087f 00       		.byte	0
 2237 0880 00       		.byte	0
 2238 0881 27       		.uleb128 0x27
 2239 0882 0D000000 		.long	.LASF88
GAS LISTING /tmp/ccAXF10R.s 			page 51


 2240 0886 01       		.byte	0x1
 2241 0887 BE01     		.value	0x1be
 2242 0889 D9000000 		.long	0xd9
 2243 088d 00030000 		.long	.LFB21
 2244 0891 6A000000 		.long	.LFE21-.LFB21
 2245 0895 01       		.uleb128 0x1
 2246 0896 9C       		.byte	0x9c
 2247 0897 F0080000 		.long	0x8f0
 2248 089b 26       		.uleb128 0x26
 2249 089c 58010000 		.long	.LASF72
 2250 08a0 01       		.byte	0x1
 2251 08a1 BE01     		.value	0x1be
 2252 08a3 D9000000 		.long	0xd9
 2253 08a7 02       		.uleb128 0x2
 2254 08a8 91       		.byte	0x91
 2255 08a9 00       		.sleb128 0
 2256 08aa 26       		.uleb128 0x26
 2257 08ab 87020000 		.long	.LASF89
 2258 08af 01       		.byte	0x1
 2259 08b0 BE01     		.value	0x1be
 2260 08b2 EF000000 		.long	0xef
 2261 08b6 02       		.uleb128 0x2
 2262 08b7 91       		.byte	0x91
 2263 08b8 04       		.sleb128 4
 2264 08b9 2A       		.uleb128 0x2a
 2265 08ba 63747000 		.string	"ctp"
 2266 08be 01       		.byte	0x1
 2267 08bf BF01     		.value	0x1bf
 2268 08c1 23020000 		.long	0x223
 2269 08c5 00020000 		.long	.LLST15
 2270 08c9 2A       		.uleb128 0x2a
 2271 08ca 6D00     		.string	"m"
 2272 08cc 01       		.byte	0x1
 2273 08cd C001     		.value	0x1c0
 2274 08cf D9000000 		.long	0xd9
 2275 08d3 1E020000 		.long	.LLST16
 2276 08d7 22       		.uleb128 0x22
 2277 08d8 47030000 		.long	.LVL69
 2278 08dc F8090000 		.long	0x9f8
 2279 08e0 21       		.uleb128 0x21
 2280 08e1 02       		.uleb128 0x2
 2281 08e2 74       		.byte	0x74
 2282 08e3 00       		.sleb128 0
 2283 08e4 01       		.uleb128 0x1
 2284 08e5 38       		.byte	0x38
 2285 08e6 21       		.uleb128 0x21
 2286 08e7 02       		.uleb128 0x2
 2287 08e8 74       		.byte	0x74
 2288 08e9 04       		.sleb128 4
 2289 08ea 03       		.uleb128 0x3
 2290 08eb 91       		.byte	0x91
 2291 08ec 04       		.sleb128 4
 2292 08ed 06       		.byte	0x6
 2293 08ee 00       		.byte	0
 2294 08ef 00       		.byte	0
 2295 08f0 27       		.uleb128 0x27
 2296 08f1 63000000 		.long	.LASF90
GAS LISTING /tmp/ccAXF10R.s 			page 52


 2297 08f5 01       		.byte	0x1
 2298 08f6 E901     		.value	0x1e9
 2299 08f8 D9000000 		.long	0xd9
 2300 08fc 70030000 		.long	.LFB22
 2301 0900 62000000 		.long	.LFE22-.LFB22
 2302 0904 01       		.uleb128 0x1
 2303 0905 9C       		.byte	0x9c
 2304 0906 5F090000 		.long	0x95f
 2305 090a 26       		.uleb128 0x26
 2306 090b 58010000 		.long	.LASF72
 2307 090f 01       		.byte	0x1
 2308 0910 E901     		.value	0x1e9
 2309 0912 D9000000 		.long	0xd9
 2310 0916 02       		.uleb128 0x2
 2311 0917 91       		.byte	0x91
 2312 0918 00       		.sleb128 0
 2313 0919 26       		.uleb128 0x26
 2314 091a 87020000 		.long	.LASF89
 2315 091e 01       		.byte	0x1
 2316 091f E901     		.value	0x1e9
 2317 0921 EF000000 		.long	0xef
 2318 0925 02       		.uleb128 0x2
 2319 0926 91       		.byte	0x91
 2320 0927 04       		.sleb128 4
 2321 0928 2A       		.uleb128 0x2a
 2322 0929 63747000 		.string	"ctp"
 2323 092d 01       		.byte	0x1
 2324 092e EA01     		.value	0x1ea
 2325 0930 23020000 		.long	0x223
 2326 0934 62020000 		.long	.LLST17
 2327 0938 2A       		.uleb128 0x2a
 2328 0939 6D00     		.string	"m"
 2329 093b 01       		.byte	0x1
 2330 093c EB01     		.value	0x1eb
 2331 093e D9000000 		.long	0xd9
 2332 0942 80020000 		.long	.LLST18
 2333 0946 22       		.uleb128 0x22
 2334 0947 B7030000 		.long	.LVL81
 2335 094b F8090000 		.long	0x9f8
 2336 094f 21       		.uleb128 0x21
 2337 0950 02       		.uleb128 0x2
 2338 0951 74       		.byte	0x74
 2339 0952 00       		.sleb128 0
 2340 0953 01       		.uleb128 0x1
 2341 0954 38       		.byte	0x38
 2342 0955 21       		.uleb128 0x21
 2343 0956 02       		.uleb128 0x2
 2344 0957 74       		.byte	0x74
 2345 0958 04       		.sleb128 4
 2346 0959 03       		.uleb128 0x3
 2347 095a 91       		.byte	0x91
 2348 095b 04       		.sleb128 4
 2349 095c 06       		.byte	0x6
 2350 095d 00       		.byte	0
 2351 095e 00       		.byte	0
 2352 095f 27       		.uleb128 0x27
 2353 0960 98000000 		.long	.LASF91
GAS LISTING /tmp/ccAXF10R.s 			page 53


 2354 0964 01       		.byte	0x1
 2355 0965 1202     		.value	0x212
 2356 0967 D9000000 		.long	0xd9
 2357 096b E0030000 		.long	.LFB23
 2358 096f 5C000000 		.long	.LFE23-.LFB23
 2359 0973 01       		.uleb128 0x1
 2360 0974 9C       		.byte	0x9c
 2361 0975 C0090000 		.long	0x9c0
 2362 0979 26       		.uleb128 0x26
 2363 097a 58010000 		.long	.LASF72
 2364 097e 01       		.byte	0x1
 2365 097f 1202     		.value	0x212
 2366 0981 D9000000 		.long	0xd9
 2367 0985 02       		.uleb128 0x2
 2368 0986 91       		.byte	0x91
 2369 0987 00       		.sleb128 0
 2370 0988 26       		.uleb128 0x26
 2371 0989 87020000 		.long	.LASF89
 2372 098d 01       		.byte	0x1
 2373 098e 1202     		.value	0x212
 2374 0990 EF000000 		.long	0xef
 2375 0994 02       		.uleb128 0x2
 2376 0995 91       		.byte	0x91
 2377 0996 04       		.sleb128 4
 2378 0997 2A       		.uleb128 0x2a
 2379 0998 63747000 		.string	"ctp"
 2380 099c 01       		.byte	0x1
 2381 099d 1302     		.value	0x213
 2382 099f 23020000 		.long	0x223
 2383 09a3 CE020000 		.long	.LLST19
 2384 09a7 22       		.uleb128 0x22
 2385 09a8 23040000 		.long	.LVL88
 2386 09ac F8090000 		.long	0x9f8
 2387 09b0 21       		.uleb128 0x21
 2388 09b1 02       		.uleb128 0x2
 2389 09b2 74       		.byte	0x74
 2390 09b3 00       		.sleb128 0
 2391 09b4 01       		.uleb128 0x1
 2392 09b5 39       		.byte	0x39
 2393 09b6 21       		.uleb128 0x21
 2394 09b7 02       		.uleb128 0x2
 2395 09b8 74       		.byte	0x74
 2396 09b9 04       		.sleb128 4
 2397 09ba 03       		.uleb128 0x3
 2398 09bb 91       		.byte	0x91
 2399 09bc 04       		.sleb128 4
 2400 09bd 06       		.byte	0x6
 2401 09be 00       		.byte	0
 2402 09bf 00       		.byte	0
 2403 09c0 2C       		.uleb128 0x2c
 2404 09c1 4A040000 		.long	.LASF98
 2405 09c5 07       		.byte	0x7
 2406 09c6 6F       		.byte	0x6f
 2407 09c7 2B030000 		.long	0x32b
 2408 09cb 2D       		.uleb128 0x2d
 2409 09cc F9030000 		.long	.LASF99
 2410 09d0 07       		.byte	0x7
GAS LISTING /tmp/ccAXF10R.s 			page 54


 2411 09d1 90       		.byte	0x90
 2412 09d2 23020000 		.long	0x223
 2413 09d6 E0090000 		.long	0x9e0
 2414 09da 0D       		.uleb128 0xd
 2415 09db 23020000 		.long	0x223
 2416 09df 00       		.byte	0
 2417 09e0 2E       		.uleb128 0x2e
 2418 09e1 3F010000 		.long	.LASF100
 2419 09e5 07       		.byte	0x7
 2420 09e6 9C       		.byte	0x9c
 2421 09e7 2F       		.uleb128 0x2f
 2422 09e8 CF030000 		.long	.LASF93
 2423 09ec 07       		.byte	0x7
 2424 09ed 93       		.byte	0x93
 2425 09ee F8090000 		.long	0x9f8
 2426 09f2 0D       		.uleb128 0xd
 2427 09f3 97000000 		.long	0x97
 2428 09f7 00       		.byte	0
 2429 09f8 30       		.uleb128 0x30
 2430 09f9 0D010000 		.long	.LASF94
 2431 09fd 07       		.byte	0x7
 2432 09fe 96       		.byte	0x96
 2433 09ff C3000000 		.long	0xc3
 2434 0a03 0D       		.uleb128 0xd
 2435 0a04 97000000 		.long	0x97
 2436 0a08 0D       		.uleb128 0xd
 2437 0a09 EF000000 		.long	0xef
 2438 0a0d 00       		.byte	0
 2439 0a0e 00       		.byte	0
 2440              		.section	.debug_abbrev,"",@progbits
 2441              	.Ldebug_abbrev0:
 2442 0000 01       		.uleb128 0x1
 2443 0001 11       		.uleb128 0x11
 2444 0002 01       		.byte	0x1
 2445 0003 25       		.uleb128 0x25
 2446 0004 0E       		.uleb128 0xe
 2447 0005 13       		.uleb128 0x13
 2448 0006 0B       		.uleb128 0xb
 2449 0007 03       		.uleb128 0x3
 2450 0008 0E       		.uleb128 0xe
 2451 0009 1B       		.uleb128 0x1b
 2452 000a 0E       		.uleb128 0xe
 2453 000b 11       		.uleb128 0x11
 2454 000c 01       		.uleb128 0x1
 2455 000d 12       		.uleb128 0x12
 2456 000e 06       		.uleb128 0x6
 2457 000f 10       		.uleb128 0x10
 2458 0010 17       		.uleb128 0x17
 2459 0011 00       		.byte	0
 2460 0012 00       		.byte	0
 2461 0013 02       		.uleb128 0x2
 2462 0014 24       		.uleb128 0x24
 2463 0015 00       		.byte	0
 2464 0016 0B       		.uleb128 0xb
 2465 0017 0B       		.uleb128 0xb
 2466 0018 3E       		.uleb128 0x3e
 2467 0019 0B       		.uleb128 0xb
GAS LISTING /tmp/ccAXF10R.s 			page 55


 2468 001a 03       		.uleb128 0x3
 2469 001b 08       		.uleb128 0x8
 2470 001c 00       		.byte	0
 2471 001d 00       		.byte	0
 2472 001e 03       		.uleb128 0x3
 2473 001f 24       		.uleb128 0x24
 2474 0020 00       		.byte	0
 2475 0021 0B       		.uleb128 0xb
 2476 0022 0B       		.uleb128 0xb
 2477 0023 3E       		.uleb128 0x3e
 2478 0024 0B       		.uleb128 0xb
 2479 0025 03       		.uleb128 0x3
 2480 0026 0E       		.uleb128 0xe
 2481 0027 00       		.byte	0
 2482 0028 00       		.byte	0
 2483 0029 04       		.uleb128 0x4
 2484 002a 16       		.uleb128 0x16
 2485 002b 00       		.byte	0
 2486 002c 03       		.uleb128 0x3
 2487 002d 0E       		.uleb128 0xe
 2488 002e 3A       		.uleb128 0x3a
 2489 002f 0B       		.uleb128 0xb
 2490 0030 3B       		.uleb128 0x3b
 2491 0031 0B       		.uleb128 0xb
 2492 0032 49       		.uleb128 0x49
 2493 0033 13       		.uleb128 0x13
 2494 0034 00       		.byte	0
 2495 0035 00       		.byte	0
 2496 0036 05       		.uleb128 0x5
 2497 0037 13       		.uleb128 0x13
 2498 0038 01       		.byte	0x1
 2499 0039 03       		.uleb128 0x3
 2500 003a 0E       		.uleb128 0xe
 2501 003b 0B       		.uleb128 0xb
 2502 003c 0B       		.uleb128 0xb
 2503 003d 3A       		.uleb128 0x3a
 2504 003e 0B       		.uleb128 0xb
 2505 003f 3B       		.uleb128 0x3b
 2506 0040 0B       		.uleb128 0xb
 2507 0041 01       		.uleb128 0x1
 2508 0042 13       		.uleb128 0x13
 2509 0043 00       		.byte	0
 2510 0044 00       		.byte	0
 2511 0045 06       		.uleb128 0x6
 2512 0046 0D       		.uleb128 0xd
 2513 0047 00       		.byte	0
 2514 0048 03       		.uleb128 0x3
 2515 0049 0E       		.uleb128 0xe
 2516 004a 3A       		.uleb128 0x3a
 2517 004b 0B       		.uleb128 0xb
 2518 004c 3B       		.uleb128 0x3b
 2519 004d 0B       		.uleb128 0xb
 2520 004e 49       		.uleb128 0x49
 2521 004f 13       		.uleb128 0x13
 2522 0050 38       		.uleb128 0x38
 2523 0051 0B       		.uleb128 0xb
 2524 0052 00       		.byte	0
GAS LISTING /tmp/ccAXF10R.s 			page 56


 2525 0053 00       		.byte	0
 2526 0054 07       		.uleb128 0x7
 2527 0055 0D       		.uleb128 0xd
 2528 0056 00       		.byte	0
 2529 0057 03       		.uleb128 0x3
 2530 0058 08       		.uleb128 0x8
 2531 0059 3A       		.uleb128 0x3a
 2532 005a 0B       		.uleb128 0xb
 2533 005b 3B       		.uleb128 0x3b
 2534 005c 0B       		.uleb128 0xb
 2535 005d 49       		.uleb128 0x49
 2536 005e 13       		.uleb128 0x13
 2537 005f 38       		.uleb128 0x38
 2538 0060 0B       		.uleb128 0xb
 2539 0061 00       		.byte	0
 2540 0062 00       		.byte	0
 2541 0063 08       		.uleb128 0x8
 2542 0064 13       		.uleb128 0x13
 2543 0065 01       		.byte	0x1
 2544 0066 0B       		.uleb128 0xb
 2545 0067 0B       		.uleb128 0xb
 2546 0068 3A       		.uleb128 0x3a
 2547 0069 0B       		.uleb128 0xb
 2548 006a 3B       		.uleb128 0x3b
 2549 006b 0B       		.uleb128 0xb
 2550 006c 01       		.uleb128 0x1
 2551 006d 13       		.uleb128 0x13
 2552 006e 00       		.byte	0
 2553 006f 00       		.byte	0
 2554 0070 09       		.uleb128 0x9
 2555 0071 0F       		.uleb128 0xf
 2556 0072 00       		.byte	0
 2557 0073 0B       		.uleb128 0xb
 2558 0074 0B       		.uleb128 0xb
 2559 0075 49       		.uleb128 0x49
 2560 0076 13       		.uleb128 0x13
 2561 0077 00       		.byte	0
 2562 0078 00       		.byte	0
 2563 0079 0A       		.uleb128 0xa
 2564 007a 0F       		.uleb128 0xf
 2565 007b 00       		.byte	0
 2566 007c 0B       		.uleb128 0xb
 2567 007d 0B       		.uleb128 0xb
 2568 007e 00       		.byte	0
 2569 007f 00       		.byte	0
 2570 0080 0B       		.uleb128 0xb
 2571 0081 35       		.uleb128 0x35
 2572 0082 00       		.byte	0
 2573 0083 49       		.uleb128 0x49
 2574 0084 13       		.uleb128 0x13
 2575 0085 00       		.byte	0
 2576 0086 00       		.byte	0
 2577 0087 0C       		.uleb128 0xc
 2578 0088 15       		.uleb128 0x15
 2579 0089 01       		.byte	0x1
 2580 008a 27       		.uleb128 0x27
 2581 008b 19       		.uleb128 0x19
GAS LISTING /tmp/ccAXF10R.s 			page 57


 2582 008c 01       		.uleb128 0x1
 2583 008d 13       		.uleb128 0x13
 2584 008e 00       		.byte	0
 2585 008f 00       		.byte	0
 2586 0090 0D       		.uleb128 0xd
 2587 0091 05       		.uleb128 0x5
 2588 0092 00       		.byte	0
 2589 0093 49       		.uleb128 0x49
 2590 0094 13       		.uleb128 0x13
 2591 0095 00       		.byte	0
 2592 0096 00       		.byte	0
 2593 0097 0E       		.uleb128 0xe
 2594 0098 17       		.uleb128 0x17
 2595 0099 01       		.byte	0x1
 2596 009a 0B       		.uleb128 0xb
 2597 009b 0B       		.uleb128 0xb
 2598 009c 3A       		.uleb128 0x3a
 2599 009d 0B       		.uleb128 0xb
 2600 009e 3B       		.uleb128 0x3b
 2601 009f 0B       		.uleb128 0xb
 2602 00a0 01       		.uleb128 0x1
 2603 00a1 13       		.uleb128 0x13
 2604 00a2 00       		.byte	0
 2605 00a3 00       		.byte	0
 2606 00a4 0F       		.uleb128 0xf
 2607 00a5 0D       		.uleb128 0xd
 2608 00a6 00       		.byte	0
 2609 00a7 03       		.uleb128 0x3
 2610 00a8 0E       		.uleb128 0xe
 2611 00a9 3A       		.uleb128 0x3a
 2612 00aa 0B       		.uleb128 0xb
 2613 00ab 3B       		.uleb128 0x3b
 2614 00ac 0B       		.uleb128 0xb
 2615 00ad 49       		.uleb128 0x49
 2616 00ae 13       		.uleb128 0x13
 2617 00af 00       		.byte	0
 2618 00b0 00       		.byte	0
 2619 00b1 10       		.uleb128 0x10
 2620 00b2 26       		.uleb128 0x26
 2621 00b3 00       		.byte	0
 2622 00b4 49       		.uleb128 0x49
 2623 00b5 13       		.uleb128 0x13
 2624 00b6 00       		.byte	0
 2625 00b7 00       		.byte	0
 2626 00b8 11       		.uleb128 0x11
 2627 00b9 2E       		.uleb128 0x2e
 2628 00ba 01       		.byte	0x1
 2629 00bb 3F       		.uleb128 0x3f
 2630 00bc 19       		.uleb128 0x19
 2631 00bd 03       		.uleb128 0x3
 2632 00be 0E       		.uleb128 0xe
 2633 00bf 3A       		.uleb128 0x3a
 2634 00c0 0B       		.uleb128 0xb
 2635 00c1 3B       		.uleb128 0x3b
 2636 00c2 0B       		.uleb128 0xb
 2637 00c3 27       		.uleb128 0x27
 2638 00c4 19       		.uleb128 0x19
GAS LISTING /tmp/ccAXF10R.s 			page 58


 2639 00c5 20       		.uleb128 0x20
 2640 00c6 0B       		.uleb128 0xb
 2641 00c7 01       		.uleb128 0x1
 2642 00c8 13       		.uleb128 0x13
 2643 00c9 00       		.byte	0
 2644 00ca 00       		.byte	0
 2645 00cb 12       		.uleb128 0x12
 2646 00cc 05       		.uleb128 0x5
 2647 00cd 00       		.byte	0
 2648 00ce 03       		.uleb128 0x3
 2649 00cf 08       		.uleb128 0x8
 2650 00d0 3A       		.uleb128 0x3a
 2651 00d1 0B       		.uleb128 0xb
 2652 00d2 3B       		.uleb128 0x3b
 2653 00d3 0B       		.uleb128 0xb
 2654 00d4 49       		.uleb128 0x49
 2655 00d5 13       		.uleb128 0x13
 2656 00d6 00       		.byte	0
 2657 00d7 00       		.byte	0
 2658 00d8 13       		.uleb128 0x13
 2659 00d9 05       		.uleb128 0x5
 2660 00da 00       		.byte	0
 2661 00db 03       		.uleb128 0x3
 2662 00dc 0E       		.uleb128 0xe
 2663 00dd 3A       		.uleb128 0x3a
 2664 00de 0B       		.uleb128 0xb
 2665 00df 3B       		.uleb128 0x3b
 2666 00e0 0B       		.uleb128 0xb
 2667 00e1 49       		.uleb128 0x49
 2668 00e2 13       		.uleb128 0x13
 2669 00e3 00       		.byte	0
 2670 00e4 00       		.byte	0
 2671 00e5 14       		.uleb128 0x14
 2672 00e6 2E       		.uleb128 0x2e
 2673 00e7 01       		.byte	0x1
 2674 00e8 3F       		.uleb128 0x3f
 2675 00e9 19       		.uleb128 0x19
 2676 00ea 03       		.uleb128 0x3
 2677 00eb 0E       		.uleb128 0xe
 2678 00ec 3A       		.uleb128 0x3a
 2679 00ed 0B       		.uleb128 0xb
 2680 00ee 3B       		.uleb128 0x3b
 2681 00ef 0B       		.uleb128 0xb
 2682 00f0 27       		.uleb128 0x27
 2683 00f1 19       		.uleb128 0x19
 2684 00f2 11       		.uleb128 0x11
 2685 00f3 01       		.uleb128 0x1
 2686 00f4 12       		.uleb128 0x12
 2687 00f5 06       		.uleb128 0x6
 2688 00f6 40       		.uleb128 0x40
 2689 00f7 18       		.uleb128 0x18
 2690 00f8 9742     		.uleb128 0x2117
 2691 00fa 19       		.uleb128 0x19
 2692 00fb 01       		.uleb128 0x1
 2693 00fc 13       		.uleb128 0x13
 2694 00fd 00       		.byte	0
 2695 00fe 00       		.byte	0
GAS LISTING /tmp/ccAXF10R.s 			page 59


 2696 00ff 15       		.uleb128 0x15
 2697 0100 05       		.uleb128 0x5
 2698 0101 00       		.byte	0
 2699 0102 03       		.uleb128 0x3
 2700 0103 08       		.uleb128 0x8
 2701 0104 3A       		.uleb128 0x3a
 2702 0105 0B       		.uleb128 0xb
 2703 0106 3B       		.uleb128 0x3b
 2704 0107 0B       		.uleb128 0xb
 2705 0108 49       		.uleb128 0x49
 2706 0109 13       		.uleb128 0x13
 2707 010a 02       		.uleb128 0x2
 2708 010b 18       		.uleb128 0x18
 2709 010c 00       		.byte	0
 2710 010d 00       		.byte	0
 2711 010e 16       		.uleb128 0x16
 2712 010f 05       		.uleb128 0x5
 2713 0110 00       		.byte	0
 2714 0111 03       		.uleb128 0x3
 2715 0112 0E       		.uleb128 0xe
 2716 0113 3A       		.uleb128 0x3a
 2717 0114 0B       		.uleb128 0xb
 2718 0115 3B       		.uleb128 0x3b
 2719 0116 0B       		.uleb128 0xb
 2720 0117 49       		.uleb128 0x49
 2721 0118 13       		.uleb128 0x13
 2722 0119 02       		.uleb128 0x2
 2723 011a 18       		.uleb128 0x18
 2724 011b 00       		.byte	0
 2725 011c 00       		.byte	0
 2726 011d 17       		.uleb128 0x17
 2727 011e 05       		.uleb128 0x5
 2728 011f 00       		.byte	0
 2729 0120 03       		.uleb128 0x3
 2730 0121 08       		.uleb128 0x8
 2731 0122 3A       		.uleb128 0x3a
 2732 0123 0B       		.uleb128 0xb
 2733 0124 3B       		.uleb128 0x3b
 2734 0125 0B       		.uleb128 0xb
 2735 0126 49       		.uleb128 0x49
 2736 0127 13       		.uleb128 0x13
 2737 0128 02       		.uleb128 0x2
 2738 0129 17       		.uleb128 0x17
 2739 012a 00       		.byte	0
 2740 012b 00       		.byte	0
 2741 012c 18       		.uleb128 0x18
 2742 012d 34       		.uleb128 0x34
 2743 012e 00       		.byte	0
 2744 012f 03       		.uleb128 0x3
 2745 0130 08       		.uleb128 0x8
 2746 0131 3A       		.uleb128 0x3a
 2747 0132 0B       		.uleb128 0xb
 2748 0133 3B       		.uleb128 0x3b
 2749 0134 0B       		.uleb128 0xb
 2750 0135 49       		.uleb128 0x49
 2751 0136 13       		.uleb128 0x13
 2752 0137 02       		.uleb128 0x2
GAS LISTING /tmp/ccAXF10R.s 			page 60


 2753 0138 17       		.uleb128 0x17
 2754 0139 00       		.byte	0
 2755 013a 00       		.byte	0
 2756 013b 19       		.uleb128 0x19
 2757 013c 2E       		.uleb128 0x2e
 2758 013d 01       		.byte	0x1
 2759 013e 3F       		.uleb128 0x3f
 2760 013f 19       		.uleb128 0x19
 2761 0140 03       		.uleb128 0x3
 2762 0141 0E       		.uleb128 0xe
 2763 0142 3A       		.uleb128 0x3a
 2764 0143 0B       		.uleb128 0xb
 2765 0144 3B       		.uleb128 0x3b
 2766 0145 0B       		.uleb128 0xb
 2767 0146 27       		.uleb128 0x27
 2768 0147 19       		.uleb128 0x19
 2769 0148 49       		.uleb128 0x49
 2770 0149 13       		.uleb128 0x13
 2771 014a 11       		.uleb128 0x11
 2772 014b 01       		.uleb128 0x1
 2773 014c 12       		.uleb128 0x12
 2774 014d 06       		.uleb128 0x6
 2775 014e 40       		.uleb128 0x40
 2776 014f 18       		.uleb128 0x18
 2777 0150 9742     		.uleb128 0x2117
 2778 0152 19       		.uleb128 0x19
 2779 0153 01       		.uleb128 0x1
 2780 0154 13       		.uleb128 0x13
 2781 0155 00       		.byte	0
 2782 0156 00       		.byte	0
 2783 0157 1A       		.uleb128 0x1a
 2784 0158 05       		.uleb128 0x5
 2785 0159 00       		.byte	0
 2786 015a 03       		.uleb128 0x3
 2787 015b 0E       		.uleb128 0xe
 2788 015c 3A       		.uleb128 0x3a
 2789 015d 0B       		.uleb128 0xb
 2790 015e 3B       		.uleb128 0x3b
 2791 015f 0B       		.uleb128 0xb
 2792 0160 49       		.uleb128 0x49
 2793 0161 13       		.uleb128 0x13
 2794 0162 02       		.uleb128 0x2
 2795 0163 17       		.uleb128 0x17
 2796 0164 00       		.byte	0
 2797 0165 00       		.byte	0
 2798 0166 1B       		.uleb128 0x1b
 2799 0167 34       		.uleb128 0x34
 2800 0168 00       		.byte	0
 2801 0169 03       		.uleb128 0x3
 2802 016a 0E       		.uleb128 0xe
 2803 016b 3A       		.uleb128 0x3a
 2804 016c 0B       		.uleb128 0xb
 2805 016d 3B       		.uleb128 0x3b
 2806 016e 0B       		.uleb128 0xb
 2807 016f 49       		.uleb128 0x49
 2808 0170 13       		.uleb128 0x13
 2809 0171 02       		.uleb128 0x2
GAS LISTING /tmp/ccAXF10R.s 			page 61


 2810 0172 18       		.uleb128 0x18
 2811 0173 00       		.byte	0
 2812 0174 00       		.byte	0
 2813 0175 1C       		.uleb128 0x1c
 2814 0176 2E       		.uleb128 0x2e
 2815 0177 01       		.byte	0x1
 2816 0178 31       		.uleb128 0x31
 2817 0179 13       		.uleb128 0x13
 2818 017a 11       		.uleb128 0x11
 2819 017b 01       		.uleb128 0x1
 2820 017c 12       		.uleb128 0x12
 2821 017d 06       		.uleb128 0x6
 2822 017e 40       		.uleb128 0x40
 2823 017f 18       		.uleb128 0x18
 2824 0180 9742     		.uleb128 0x2117
 2825 0182 19       		.uleb128 0x19
 2826 0183 01       		.uleb128 0x1
 2827 0184 13       		.uleb128 0x13
 2828 0185 00       		.byte	0
 2829 0186 00       		.byte	0
 2830 0187 1D       		.uleb128 0x1d
 2831 0188 05       		.uleb128 0x5
 2832 0189 00       		.byte	0
 2833 018a 31       		.uleb128 0x31
 2834 018b 13       		.uleb128 0x13
 2835 018c 02       		.uleb128 0x2
 2836 018d 18       		.uleb128 0x18
 2837 018e 00       		.byte	0
 2838 018f 00       		.byte	0
 2839 0190 1E       		.uleb128 0x1e
 2840 0191 0B       		.uleb128 0xb
 2841 0192 01       		.byte	0x1
 2842 0193 55       		.uleb128 0x55
 2843 0194 17       		.uleb128 0x17
 2844 0195 00       		.byte	0
 2845 0196 00       		.byte	0
 2846 0197 1F       		.uleb128 0x1f
 2847 0198 05       		.uleb128 0x5
 2848 0199 00       		.byte	0
 2849 019a 31       		.uleb128 0x31
 2850 019b 13       		.uleb128 0x13
 2851 019c 02       		.uleb128 0x2
 2852 019d 17       		.uleb128 0x17
 2853 019e 00       		.byte	0
 2854 019f 00       		.byte	0
 2855 01a0 20       		.uleb128 0x20
 2856 01a1 898201   		.uleb128 0x4109
 2857 01a4 01       		.byte	0x1
 2858 01a5 11       		.uleb128 0x11
 2859 01a6 01       		.uleb128 0x1
 2860 01a7 31       		.uleb128 0x31
 2861 01a8 13       		.uleb128 0x13
 2862 01a9 01       		.uleb128 0x1
 2863 01aa 13       		.uleb128 0x13
 2864 01ab 00       		.byte	0
 2865 01ac 00       		.byte	0
 2866 01ad 21       		.uleb128 0x21
GAS LISTING /tmp/ccAXF10R.s 			page 62


 2867 01ae 8A8201   		.uleb128 0x410a
 2868 01b1 00       		.byte	0
 2869 01b2 02       		.uleb128 0x2
 2870 01b3 18       		.uleb128 0x18
 2871 01b4 9142     		.uleb128 0x2111
 2872 01b6 18       		.uleb128 0x18
 2873 01b7 00       		.byte	0
 2874 01b8 00       		.byte	0
 2875 01b9 22       		.uleb128 0x22
 2876 01ba 898201   		.uleb128 0x4109
 2877 01bd 01       		.byte	0x1
 2878 01be 11       		.uleb128 0x11
 2879 01bf 01       		.uleb128 0x1
 2880 01c0 31       		.uleb128 0x31
 2881 01c1 13       		.uleb128 0x13
 2882 01c2 00       		.byte	0
 2883 01c3 00       		.byte	0
 2884 01c4 23       		.uleb128 0x23
 2885 01c5 898201   		.uleb128 0x4109
 2886 01c8 00       		.byte	0
 2887 01c9 11       		.uleb128 0x11
 2888 01ca 01       		.uleb128 0x1
 2889 01cb 31       		.uleb128 0x31
 2890 01cc 13       		.uleb128 0x13
 2891 01cd 00       		.byte	0
 2892 01ce 00       		.byte	0
 2893 01cf 24       		.uleb128 0x24
 2894 01d0 2E       		.uleb128 0x2e
 2895 01d1 01       		.byte	0x1
 2896 01d2 3F       		.uleb128 0x3f
 2897 01d3 19       		.uleb128 0x19
 2898 01d4 03       		.uleb128 0x3
 2899 01d5 0E       		.uleb128 0xe
 2900 01d6 3A       		.uleb128 0x3a
 2901 01d7 0B       		.uleb128 0xb
 2902 01d8 3B       		.uleb128 0x3b
 2903 01d9 05       		.uleb128 0x5
 2904 01da 27       		.uleb128 0x27
 2905 01db 19       		.uleb128 0x19
 2906 01dc 11       		.uleb128 0x11
 2907 01dd 01       		.uleb128 0x1
 2908 01de 12       		.uleb128 0x12
 2909 01df 06       		.uleb128 0x6
 2910 01e0 40       		.uleb128 0x40
 2911 01e1 18       		.uleb128 0x18
 2912 01e2 9742     		.uleb128 0x2117
 2913 01e4 19       		.uleb128 0x19
 2914 01e5 01       		.uleb128 0x1
 2915 01e6 13       		.uleb128 0x13
 2916 01e7 00       		.byte	0
 2917 01e8 00       		.byte	0
 2918 01e9 25       		.uleb128 0x25
 2919 01ea 05       		.uleb128 0x5
 2920 01eb 00       		.byte	0
 2921 01ec 03       		.uleb128 0x3
 2922 01ed 08       		.uleb128 0x8
 2923 01ee 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccAXF10R.s 			page 63


 2924 01ef 0B       		.uleb128 0xb
 2925 01f0 3B       		.uleb128 0x3b
 2926 01f1 05       		.uleb128 0x5
 2927 01f2 49       		.uleb128 0x49
 2928 01f3 13       		.uleb128 0x13
 2929 01f4 02       		.uleb128 0x2
 2930 01f5 18       		.uleb128 0x18
 2931 01f6 00       		.byte	0
 2932 01f7 00       		.byte	0
 2933 01f8 26       		.uleb128 0x26
 2934 01f9 05       		.uleb128 0x5
 2935 01fa 00       		.byte	0
 2936 01fb 03       		.uleb128 0x3
 2937 01fc 0E       		.uleb128 0xe
 2938 01fd 3A       		.uleb128 0x3a
 2939 01fe 0B       		.uleb128 0xb
 2940 01ff 3B       		.uleb128 0x3b
 2941 0200 05       		.uleb128 0x5
 2942 0201 49       		.uleb128 0x49
 2943 0202 13       		.uleb128 0x13
 2944 0203 02       		.uleb128 0x2
 2945 0204 18       		.uleb128 0x18
 2946 0205 00       		.byte	0
 2947 0206 00       		.byte	0
 2948 0207 27       		.uleb128 0x27
 2949 0208 2E       		.uleb128 0x2e
 2950 0209 01       		.byte	0x1
 2951 020a 3F       		.uleb128 0x3f
 2952 020b 19       		.uleb128 0x19
 2953 020c 03       		.uleb128 0x3
 2954 020d 0E       		.uleb128 0xe
 2955 020e 3A       		.uleb128 0x3a
 2956 020f 0B       		.uleb128 0xb
 2957 0210 3B       		.uleb128 0x3b
 2958 0211 05       		.uleb128 0x5
 2959 0212 27       		.uleb128 0x27
 2960 0213 19       		.uleb128 0x19
 2961 0214 49       		.uleb128 0x49
 2962 0215 13       		.uleb128 0x13
 2963 0216 11       		.uleb128 0x11
 2964 0217 01       		.uleb128 0x1
 2965 0218 12       		.uleb128 0x12
 2966 0219 06       		.uleb128 0x6
 2967 021a 40       		.uleb128 0x40
 2968 021b 18       		.uleb128 0x18
 2969 021c 9742     		.uleb128 0x2117
 2970 021e 19       		.uleb128 0x19
 2971 021f 01       		.uleb128 0x1
 2972 0220 13       		.uleb128 0x13
 2973 0221 00       		.byte	0
 2974 0222 00       		.byte	0
 2975 0223 28       		.uleb128 0x28
 2976 0224 34       		.uleb128 0x34
 2977 0225 00       		.byte	0
 2978 0226 03       		.uleb128 0x3
 2979 0227 0E       		.uleb128 0xe
 2980 0228 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccAXF10R.s 			page 64


 2981 0229 0B       		.uleb128 0xb
 2982 022a 3B       		.uleb128 0x3b
 2983 022b 05       		.uleb128 0x5
 2984 022c 49       		.uleb128 0x49
 2985 022d 13       		.uleb128 0x13
 2986 022e 02       		.uleb128 0x2
 2987 022f 18       		.uleb128 0x18
 2988 0230 00       		.byte	0
 2989 0231 00       		.byte	0
 2990 0232 29       		.uleb128 0x29
 2991 0233 05       		.uleb128 0x5
 2992 0234 00       		.byte	0
 2993 0235 03       		.uleb128 0x3
 2994 0236 0E       		.uleb128 0xe
 2995 0237 3A       		.uleb128 0x3a
 2996 0238 0B       		.uleb128 0xb
 2997 0239 3B       		.uleb128 0x3b
 2998 023a 05       		.uleb128 0x5
 2999 023b 49       		.uleb128 0x49
 3000 023c 13       		.uleb128 0x13
 3001 023d 02       		.uleb128 0x2
 3002 023e 17       		.uleb128 0x17
 3003 023f 00       		.byte	0
 3004 0240 00       		.byte	0
 3005 0241 2A       		.uleb128 0x2a
 3006 0242 34       		.uleb128 0x34
 3007 0243 00       		.byte	0
 3008 0244 03       		.uleb128 0x3
 3009 0245 08       		.uleb128 0x8
 3010 0246 3A       		.uleb128 0x3a
 3011 0247 0B       		.uleb128 0xb
 3012 0248 3B       		.uleb128 0x3b
 3013 0249 05       		.uleb128 0x5
 3014 024a 49       		.uleb128 0x49
 3015 024b 13       		.uleb128 0x13
 3016 024c 02       		.uleb128 0x2
 3017 024d 17       		.uleb128 0x17
 3018 024e 00       		.byte	0
 3019 024f 00       		.byte	0
 3020 0250 2B       		.uleb128 0x2b
 3021 0251 898201   		.uleb128 0x4109
 3022 0254 01       		.byte	0x1
 3023 0255 11       		.uleb128 0x11
 3024 0256 01       		.uleb128 0x1
 3025 0257 00       		.byte	0
 3026 0258 00       		.byte	0
 3027 0259 2C       		.uleb128 0x2c
 3028 025a 34       		.uleb128 0x34
 3029 025b 00       		.byte	0
 3030 025c 03       		.uleb128 0x3
 3031 025d 0E       		.uleb128 0xe
 3032 025e 3A       		.uleb128 0x3a
 3033 025f 0B       		.uleb128 0xb
 3034 0260 3B       		.uleb128 0x3b
 3035 0261 0B       		.uleb128 0xb
 3036 0262 49       		.uleb128 0x49
 3037 0263 13       		.uleb128 0x13
GAS LISTING /tmp/ccAXF10R.s 			page 65


 3038 0264 3F       		.uleb128 0x3f
 3039 0265 19       		.uleb128 0x19
 3040 0266 3C       		.uleb128 0x3c
 3041 0267 19       		.uleb128 0x19
 3042 0268 00       		.byte	0
 3043 0269 00       		.byte	0
 3044 026a 2D       		.uleb128 0x2d
 3045 026b 2E       		.uleb128 0x2e
 3046 026c 01       		.byte	0x1
 3047 026d 3F       		.uleb128 0x3f
 3048 026e 19       		.uleb128 0x19
 3049 026f 03       		.uleb128 0x3
 3050 0270 0E       		.uleb128 0xe
 3051 0271 3A       		.uleb128 0x3a
 3052 0272 0B       		.uleb128 0xb
 3053 0273 3B       		.uleb128 0x3b
 3054 0274 0B       		.uleb128 0xb
 3055 0275 27       		.uleb128 0x27
 3056 0276 19       		.uleb128 0x19
 3057 0277 49       		.uleb128 0x49
 3058 0278 13       		.uleb128 0x13
 3059 0279 3C       		.uleb128 0x3c
 3060 027a 19       		.uleb128 0x19
 3061 027b 01       		.uleb128 0x1
 3062 027c 13       		.uleb128 0x13
 3063 027d 00       		.byte	0
 3064 027e 00       		.byte	0
 3065 027f 2E       		.uleb128 0x2e
 3066 0280 2E       		.uleb128 0x2e
 3067 0281 00       		.byte	0
 3068 0282 3F       		.uleb128 0x3f
 3069 0283 19       		.uleb128 0x19
 3070 0284 03       		.uleb128 0x3
 3071 0285 0E       		.uleb128 0xe
 3072 0286 3A       		.uleb128 0x3a
 3073 0287 0B       		.uleb128 0xb
 3074 0288 3B       		.uleb128 0x3b
 3075 0289 0B       		.uleb128 0xb
 3076 028a 27       		.uleb128 0x27
 3077 028b 19       		.uleb128 0x19
 3078 028c 3C       		.uleb128 0x3c
 3079 028d 19       		.uleb128 0x19
 3080 028e 00       		.byte	0
 3081 028f 00       		.byte	0
 3082 0290 2F       		.uleb128 0x2f
 3083 0291 2E       		.uleb128 0x2e
 3084 0292 01       		.byte	0x1
 3085 0293 3F       		.uleb128 0x3f
 3086 0294 19       		.uleb128 0x19
 3087 0295 03       		.uleb128 0x3
 3088 0296 0E       		.uleb128 0xe
 3089 0297 3A       		.uleb128 0x3a
 3090 0298 0B       		.uleb128 0xb
 3091 0299 3B       		.uleb128 0x3b
 3092 029a 0B       		.uleb128 0xb
 3093 029b 27       		.uleb128 0x27
 3094 029c 19       		.uleb128 0x19
GAS LISTING /tmp/ccAXF10R.s 			page 66


 3095 029d 3C       		.uleb128 0x3c
 3096 029e 19       		.uleb128 0x19
 3097 029f 01       		.uleb128 0x1
 3098 02a0 13       		.uleb128 0x13
 3099 02a1 00       		.byte	0
 3100 02a2 00       		.byte	0
 3101 02a3 30       		.uleb128 0x30
 3102 02a4 2E       		.uleb128 0x2e
 3103 02a5 01       		.byte	0x1
 3104 02a6 3F       		.uleb128 0x3f
 3105 02a7 19       		.uleb128 0x19
 3106 02a8 03       		.uleb128 0x3
 3107 02a9 0E       		.uleb128 0xe
 3108 02aa 3A       		.uleb128 0x3a
 3109 02ab 0B       		.uleb128 0xb
 3110 02ac 3B       		.uleb128 0x3b
 3111 02ad 0B       		.uleb128 0xb
 3112 02ae 27       		.uleb128 0x27
 3113 02af 19       		.uleb128 0x19
 3114 02b0 49       		.uleb128 0x49
 3115 02b1 13       		.uleb128 0x13
 3116 02b2 3C       		.uleb128 0x3c
 3117 02b3 19       		.uleb128 0x19
 3118 02b4 00       		.byte	0
 3119 02b5 00       		.byte	0
 3120 02b6 00       		.byte	0
 3121              		.section	.debug_loc,"",@progbits
 3122              	.Ldebug_loc0:
 3123              	.LLST0:
 3124 0000 30000000 		.long	.LVL1-.Ltext0
 3125 0004 3E000000 		.long	.LVL3-.Ltext0
 3126 0008 0200     		.value	0x2
 3127 000a 91       		.byte	0x91
 3128 000b 00       		.sleb128 0
 3129 000c 3E000000 		.long	.LVL3-.Ltext0
 3130 0010 5E000000 		.long	.LFE8-.Ltext0
 3131 0014 0100     		.value	0x1
 3132 0016 51       		.byte	0x51
 3133 0017 00000000 		.long	0
 3134 001b 00000000 		.long	0
 3135              	.LLST1:
 3136 001f 30000000 		.long	.LVL1-.Ltext0
 3137 0023 46000000 		.long	.LVL4-.Ltext0
 3138 0027 0200     		.value	0x2
 3139 0029 91       		.byte	0x91
 3140 002a 04       		.sleb128 4
 3141 002b 46000000 		.long	.LVL4-.Ltext0
 3142 002f 4E000000 		.long	.LVL5-.Ltext0
 3143 0033 0100     		.value	0x1
 3144 0035 53       		.byte	0x53
 3145 0036 4E000000 		.long	.LVL5-.Ltext0
 3146 003a 51000000 		.long	.LVL6-.Ltext0
 3147 003e 0200     		.value	0x2
 3148 0040 91       		.byte	0x91
 3149 0041 04       		.sleb128 4
 3150 0042 51000000 		.long	.LVL6-.Ltext0
 3151 0046 5E000000 		.long	.LFE8-.Ltext0
GAS LISTING /tmp/ccAXF10R.s 			page 67


 3152 004a 0100     		.value	0x1
 3153 004c 53       		.byte	0x53
 3154 004d 00000000 		.long	0
 3155 0051 00000000 		.long	0
 3156              	.LLST2:
 3157 0055 35000000 		.long	.LVL2-.Ltext0
 3158 0059 3E000000 		.long	.LVL3-.Ltext0
 3159 005d 0200     		.value	0x2
 3160 005f 91       		.byte	0x91
 3161 0060 00       		.sleb128 0
 3162 0061 3E000000 		.long	.LVL3-.Ltext0
 3163 0065 5E000000 		.long	.LFE8-.Ltext0
 3164 0069 0100     		.value	0x1
 3165 006b 52       		.byte	0x52
 3166 006c 00000000 		.long	0
 3167 0070 00000000 		.long	0
 3168              	.LLST3:
 3169 0074 73000000 		.long	.LVL8-.Ltext0
 3170 0078 7B000000 		.long	.LVL9-.Ltext0
 3171 007c 0700     		.value	0x7
 3172 007e 91       		.byte	0x91
 3173 007f 00       		.sleb128 0
 3174 0080 06       		.byte	0x6
 3175 0081 70       		.byte	0x70
 3176 0082 00       		.sleb128 0
 3177 0083 1A       		.byte	0x1a
 3178 0084 9F       		.byte	0x9f
 3179 0085 7B000000 		.long	.LVL9-.Ltext0
 3180 0089 7D000000 		.long	.LFE9-.Ltext0
 3181 008d 0100     		.value	0x1
 3182 008f 50       		.byte	0x50
 3183 0090 00000000 		.long	0
 3184 0094 00000000 		.long	0
 3185              	.LLST4:
 3186 0098 80000000 		.long	.LVL10-.Ltext0
 3187 009c 91000000 		.long	.LVL11-.Ltext0
 3188 00a0 0200     		.value	0x2
 3189 00a2 91       		.byte	0x91
 3190 00a3 00       		.sleb128 0
 3191 00a4 91000000 		.long	.LVL11-.Ltext0
 3192 00a8 93000000 		.long	.LFE10-.Ltext0
 3193 00ac 0100     		.value	0x1
 3194 00ae 50       		.byte	0x50
 3195 00af 00000000 		.long	0
 3196 00b3 00000000 		.long	0
 3197              	.LLST5:
 3198 00b7 F1000000 		.long	.LVL15-.Ltext0
 3199 00bb 04010000 		.long	.LVL17-.Ltext0
 3200 00bf 0200     		.value	0x2
 3201 00c1 91       		.byte	0x91
 3202 00c2 04       		.sleb128 4
 3203 00c3 0D010000 		.long	.LVL18-.Ltext0
 3204 00c7 1E010000 		.long	.LFE14-.Ltext0
 3205 00cb 0200     		.value	0x2
 3206 00cd 91       		.byte	0x91
 3207 00ce 04       		.sleb128 4
 3208 00cf 00000000 		.long	0
GAS LISTING /tmp/ccAXF10R.s 			page 68


 3209 00d3 00000000 		.long	0
 3210              	.LLST6:
 3211 00d7 F1000000 		.long	.LVL15-.Ltext0
 3212 00db F8000000 		.long	.LVL16-1-.Ltext0
 3213 00df 0100     		.value	0x1
 3214 00e1 50       		.byte	0x50
 3215 00e2 F8000000 		.long	.LVL16-1-.Ltext0
 3216 00e6 04010000 		.long	.LVL17-.Ltext0
 3217 00ea 0200     		.value	0x2
 3218 00ec 91       		.byte	0x91
 3219 00ed 00       		.sleb128 0
 3220 00ee 0D010000 		.long	.LVL18-.Ltext0
 3221 00f2 14010000 		.long	.LVL19-1-.Ltext0
 3222 00f6 0100     		.value	0x1
 3223 00f8 50       		.byte	0x50
 3224 00f9 14010000 		.long	.LVL19-1-.Ltext0
 3225 00fd 1E010000 		.long	.LFE14-.Ltext0
 3226 0101 0200     		.value	0x2
 3227 0103 91       		.byte	0x91
 3228 0104 00       		.sleb128 0
 3229 0105 00000000 		.long	0
 3230 0109 00000000 		.long	0
 3231              	.LLST7:
 3232 010d 30010000 		.long	.LVL21-.Ltext0
 3233 0111 57010000 		.long	.LVL24-.Ltext0
 3234 0115 0100     		.value	0x1
 3235 0117 53       		.byte	0x53
 3236 0118 00000000 		.long	0
 3237 011c 00000000 		.long	0
 3238              	.LLST8:
 3239 0120 D0010000 		.long	.LVL33-.Ltext0
 3240 0124 E2010000 		.long	.LVL34-.Ltext0
 3241 0128 0200     		.value	0x2
 3242 012a 91       		.byte	0x91
 3243 012b 04       		.sleb128 4
 3244 012c E2010000 		.long	.LVL34-.Ltext0
 3245 0130 17020000 		.long	.LVL42-.Ltext0
 3246 0134 0100     		.value	0x1
 3247 0136 56       		.byte	0x56
 3248 0137 00000000 		.long	0
 3249 013b 00000000 		.long	0
 3250              	.LLST9:
 3251 013f D0010000 		.long	.LVL33-.Ltext0
 3252 0143 EC010000 		.long	.LVL35-.Ltext0
 3253 0147 0200     		.value	0x2
 3254 0149 30       		.byte	0x30
 3255 014a 9F       		.byte	0x9f
 3256 014b EC010000 		.long	.LVL35-.Ltext0
 3257 014f 12020000 		.long	.LVL41-.Ltext0
 3258 0153 0100     		.value	0x1
 3259 0155 53       		.byte	0x53
 3260 0156 00000000 		.long	0
 3261 015a 00000000 		.long	0
 3262              	.LLST10:
 3263 015e 2B020000 		.long	.LVL44-.Ltext0
 3264 0162 64020000 		.long	.LVL50-.Ltext0
 3265 0166 0100     		.value	0x1
GAS LISTING /tmp/ccAXF10R.s 			page 69


 3266 0168 56       		.byte	0x56
 3267 0169 00000000 		.long	0
 3268 016d 00000000 		.long	0
 3269              	.LLST11:
 3270 0171 30020000 		.long	.LVL45-.Ltext0
 3271 0175 37020000 		.long	.LVL46-.Ltext0
 3272 0179 0700     		.value	0x7
 3273 017b 73       		.byte	0x73
 3274 017c 00       		.sleb128 0
 3275 017d 76       		.byte	0x76
 3276 017e 38       		.sleb128 56
 3277 017f 06       		.byte	0x6
 3278 0180 1A       		.byte	0x1a
 3279 0181 9F       		.byte	0x9f
 3280 0182 37020000 		.long	.LVL46-.Ltext0
 3281 0186 47020000 		.long	.LVL47-1-.Ltext0
 3282 018a 0100     		.value	0x1
 3283 018c 51       		.byte	0x51
 3284 018d 4F020000 		.long	.LVL48-.Ltext0
 3285 0191 55020000 		.long	.LVL49-.Ltext0
 3286 0195 0100     		.value	0x1
 3287 0197 51       		.byte	0x51
 3288 0198 55020000 		.long	.LVL49-.Ltext0
 3289 019c 65020000 		.long	.LFE18-.Ltext0
 3290 01a0 0100     		.value	0x1
 3291 01a2 50       		.byte	0x50
 3292 01a3 00000000 		.long	0
 3293 01a7 00000000 		.long	0
 3294              	.LLST12:
 3295 01ab 7B020000 		.long	.LVL52-.Ltext0
 3296 01af AE020000 		.long	.LVL57-.Ltext0
 3297 01b3 0100     		.value	0x1
 3298 01b5 56       		.byte	0x56
 3299 01b6 00000000 		.long	0
 3300 01ba 00000000 		.long	0
 3301              	.LLST13:
 3302 01be 80020000 		.long	.LVL53-.Ltext0
 3303 01c2 87020000 		.long	.LVL54-.Ltext0
 3304 01c6 0700     		.value	0x7
 3305 01c8 73       		.byte	0x73
 3306 01c9 00       		.sleb128 0
 3307 01ca 76       		.byte	0x76
 3308 01cb 38       		.sleb128 56
 3309 01cc 06       		.byte	0x6
 3310 01cd 1A       		.byte	0x1a
 3311 01ce 9F       		.byte	0x9f
 3312 01cf 87020000 		.long	.LVL54-.Ltext0
 3313 01d3 97020000 		.long	.LVL55-1-.Ltext0
 3314 01d7 0100     		.value	0x1
 3315 01d9 50       		.byte	0x50
 3316 01da 9F020000 		.long	.LVL56-.Ltext0
 3317 01de AF020000 		.long	.LFE19-.Ltext0
 3318 01e2 0100     		.value	0x1
 3319 01e4 50       		.byte	0x50
 3320 01e5 00000000 		.long	0
 3321 01e9 00000000 		.long	0
 3322              	.LLST14:
GAS LISTING /tmp/ccAXF10R.s 			page 70


 3323 01ed BB020000 		.long	.LVL59-.Ltext0
 3324 01f1 F0020000 		.long	.LVL61-.Ltext0
 3325 01f5 0100     		.value	0x1
 3326 01f7 56       		.byte	0x56
 3327 01f8 00000000 		.long	0
 3328 01fc 00000000 		.long	0
 3329              	.LLST15:
 3330 0200 0B030000 		.long	.LVL63-.Ltext0
 3331 0204 29030000 		.long	.LVL67-.Ltext0
 3332 0208 0100     		.value	0x1
 3333 020a 56       		.byte	0x56
 3334 020b 2A030000 		.long	.LVL68-.Ltext0
 3335 020f 69030000 		.long	.LVL72-.Ltext0
 3336 0213 0100     		.value	0x1
 3337 0215 56       		.byte	0x56
 3338 0216 00000000 		.long	0
 3339 021a 00000000 		.long	0
 3340              	.LLST16:
 3341 021e 13030000 		.long	.LVL64-.Ltext0
 3342 0222 17030000 		.long	.LVL65-.Ltext0
 3343 0226 0600     		.value	0x6
 3344 0228 73       		.byte	0x73
 3345 0229 00       		.sleb128 0
 3346 022a 70       		.byte	0x70
 3347 022b 00       		.sleb128 0
 3348 022c 1A       		.byte	0x1a
 3349 022d 9F       		.byte	0x9f
 3350 022e 17030000 		.long	.LVL65-.Ltext0
 3351 0232 21030000 		.long	.LVL66-.Ltext0
 3352 0236 0100     		.value	0x1
 3353 0238 51       		.byte	0x51
 3354 0239 2A030000 		.long	.LVL68-.Ltext0
 3355 023d 46030000 		.long	.LVL69-1-.Ltext0
 3356 0241 0100     		.value	0x1
 3357 0243 51       		.byte	0x51
 3358 0244 52030000 		.long	.LVL70-.Ltext0
 3359 0248 58030000 		.long	.LVL71-.Ltext0
 3360 024c 0100     		.value	0x1
 3361 024e 51       		.byte	0x51
 3362 024f 58030000 		.long	.LVL71-.Ltext0
 3363 0253 6A030000 		.long	.LFE21-.Ltext0
 3364 0257 0100     		.value	0x1
 3365 0259 52       		.byte	0x52
 3366 025a 00000000 		.long	0
 3367 025e 00000000 		.long	0
 3368              	.LLST17:
 3369 0262 7B030000 		.long	.LVL74-.Ltext0
 3370 0266 99030000 		.long	.LVL79-.Ltext0
 3371 026a 0100     		.value	0x1
 3372 026c 56       		.byte	0x56
 3373 026d 9A030000 		.long	.LVL80-.Ltext0
 3374 0271 D1030000 		.long	.LVL83-.Ltext0
 3375 0275 0100     		.value	0x1
 3376 0277 56       		.byte	0x56
 3377 0278 00000000 		.long	0
 3378 027c 00000000 		.long	0
 3379              	.LLST18:
GAS LISTING /tmp/ccAXF10R.s 			page 71


 3380 0280 83030000 		.long	.LVL75-.Ltext0
 3381 0284 87030000 		.long	.LVL76-.Ltext0
 3382 0288 0600     		.value	0x6
 3383 028a 73       		.byte	0x73
 3384 028b 00       		.sleb128 0
 3385 028c 72       		.byte	0x72
 3386 028d 00       		.sleb128 0
 3387 028e 1A       		.byte	0x1a
 3388 028f 9F       		.byte	0x9f
 3389 0290 87030000 		.long	.LVL76-.Ltext0
 3390 0294 8D030000 		.long	.LVL77-.Ltext0
 3391 0298 0100     		.value	0x1
 3392 029a 50       		.byte	0x50
 3393 029b 8D030000 		.long	.LVL77-.Ltext0
 3394 029f 91030000 		.long	.LVL78-.Ltext0
 3395 02a3 0600     		.value	0x6
 3396 02a5 73       		.byte	0x73
 3397 02a6 00       		.sleb128 0
 3398 02a7 72       		.byte	0x72
 3399 02a8 00       		.sleb128 0
 3400 02a9 1A       		.byte	0x1a
 3401 02aa 9F       		.byte	0x9f
 3402 02ab 9A030000 		.long	.LVL80-.Ltext0
 3403 02af B6030000 		.long	.LVL81-1-.Ltext0
 3404 02b3 0600     		.value	0x6
 3405 02b5 73       		.byte	0x73
 3406 02b6 00       		.sleb128 0
 3407 02b7 72       		.byte	0x72
 3408 02b8 00       		.sleb128 0
 3409 02b9 1A       		.byte	0x1a
 3410 02ba 9F       		.byte	0x9f
 3411 02bb C2030000 		.long	.LVL82-.Ltext0
 3412 02bf D2030000 		.long	.LFE22-.Ltext0
 3413 02c3 0100     		.value	0x1
 3414 02c5 50       		.byte	0x50
 3415 02c6 00000000 		.long	0
 3416 02ca 00000000 		.long	0
 3417              	.LLST19:
 3418 02ce EB030000 		.long	.LVL85-.Ltext0
 3419 02d2 0B040000 		.long	.LVL86-.Ltext0
 3420 02d6 0100     		.value	0x1
 3421 02d8 56       		.byte	0x56
 3422 02d9 0C040000 		.long	.LVL87-.Ltext0
 3423 02dd 3B040000 		.long	.LVL89-.Ltext0
 3424 02e1 0100     		.value	0x1
 3425 02e3 56       		.byte	0x56
 3426 02e4 00000000 		.long	0
 3427 02e8 00000000 		.long	0
 3428              		.section	.debug_aranges,"",@progbits
 3429 0000 1C000000 		.long	0x1c
 3430 0004 0200     		.value	0x2
 3431 0006 00000000 		.long	.Ldebug_info0
 3432 000a 04       		.byte	0x4
 3433 000b 00       		.byte	0
 3434 000c 0000     		.value	0
 3435 000e 0000     		.value	0
 3436 0010 00000000 		.long	.Ltext0
GAS LISTING /tmp/ccAXF10R.s 			page 72


 3437 0014 3C040000 		.long	.Letext0-.Ltext0
 3438 0018 00000000 		.long	0
 3439 001c 00000000 		.long	0
 3440              		.section	.debug_ranges,"",@progbits
 3441              	.Ldebug_ranges0:
 3442 0000 F1000000 		.long	.LBB4-.Ltext0
 3443 0004 00010000 		.long	.LBE4-.Ltext0
 3444 0008 0D010000 		.long	.LBB7-.Ltext0
 3445 000c 1E010000 		.long	.LBE7-.Ltext0
 3446 0010 00000000 		.long	0
 3447 0014 00000000 		.long	0
 3448              		.section	.debug_line,"",@progbits
 3449              	.Ldebug_line0:
 3450 0000 05020000 		.section	.debug_str,"MS",@progbits,1
 3450      0200E400 
 3450      00000101 
 3450      FB0E0D00 
 3450      01010101 
 3451              	.LASF37:
 3452 0000 705F6D73 		.string	"p_msg"
 3452      6700
 3453              	.LASF58:
 3454 0006 6D5F6E65 		.string	"m_next"
 3454      787400
 3455              	.LASF88:
 3456 000d 63684576 		.string	"chEvtWaitOneTimeout"
 3456      74576169 
 3456      744F6E65 
 3456      54696D65 
 3456      6F757400 
 3457              	.LASF67:
 3458 0021 7264796D 		.string	"rdymsg"
 3458      736700
 3459              	.LASF80:
 3460 0028 63684576 		.string	"chEvtSignal"
 3460      74536967 
 3460      6E616C00 
 3461              	.LASF10:
 3462 0034 6C6F6E67 		.string	"long long unsigned int"
 3462      206C6F6E 
 3462      6720756E 
 3462      7369676E 
 3462      65642069 
 3463              	.LASF76:
 3464 004b 63684576 		.string	"chEvtAddEvents"
 3464      74416464 
 3464      4576656E 
 3464      747300
 3465              	.LASF68:
 3466 005a 65786974 		.string	"exitcode"
 3466      636F6465 
 3466      00
 3467              	.LASF90:
 3468 0063 63684576 		.string	"chEvtWaitAnyTimeout"
 3468      74576169 
 3468      74416E79 
 3468      54696D65 
GAS LISTING /tmp/ccAXF10R.s 			page 73


 3468      6F757400 
 3469              	.LASF25:
 3470 0077 705F7072 		.string	"p_prio"
 3470      696F00
 3471              	.LASF4:
 3472 007e 6C6F6E67 		.string	"long long int"
 3472      206C6F6E 
 3472      6720696E 
 3472      7400
 3473              	.LASF2:
 3474 008c 7369676E 		.string	"signed char"
 3474      65642063 
 3474      68617200 
 3475              	.LASF91:
 3476 0098 63684576 		.string	"chEvtWaitAllTimeout"
 3476      74576169 
 3476      74416C6C 
 3476      54696D65 
 3476      6F757400 
 3477              	.LASF41:
 3478 00ac 705F6D70 		.string	"p_mpool"
 3478      6F6F6C00 
 3479              	.LASF56:
 3480 00b4 6D5F7175 		.string	"m_queue"
 3480      65756500 
 3481              	.LASF97:
 3482 00bc 2F686F6D 		.string	"/home/tony/ChibiOS-RT/testhal/Posix/EXT"
 3482      652F746F 
 3482      6E792F43 
 3482      68696269 
 3482      4F532D52 
 3483              	.LASF15:
 3484 00e4 74736C69 		.string	"tslices_t"
 3484      6365735F 
 3484      7400
 3485              	.LASF1:
 3486 00ee 6C6F6E67 		.string	"long int"
 3486      20696E74 
 3486      00
 3487              	.LASF13:
 3488 00f7 74737461 		.string	"tstate_t"
 3488      74655F74 
 3488      00
 3489              	.LASF86:
 3490 0100 63684576 		.string	"chEvtWaitAny"
 3490      74576169 
 3490      74416E79 
 3490      00
 3491              	.LASF94:
 3492 010d 63685363 		.string	"chSchGoSleepTimeoutS"
 3492      68476F53 
 3492      6C656570 
 3492      54696D65 
 3492      6F757453 
 3493              	.LASF79:
 3494 0122 63684576 		.string	"chEvtBroadcastFlagsI"
 3494      7442726F 
GAS LISTING /tmp/ccAXF10R.s 			page 74


 3494      61646361 
 3494      7374466C 
 3494      61677349 
 3495              	.LASF27:
 3496 0137 705F6E65 		.string	"p_newer"
 3496      77657200 
 3497              	.LASF100:
 3498 013f 63685363 		.string	"chSchRescheduleS"
 3498      68526573 
 3498      63686564 
 3498      756C6553 
 3498      00
 3499              	.LASF51:
 3500 0150 725F6E65 		.string	"r_newer"
 3500      77657200 
 3501              	.LASF72:
 3502 0158 6D61736B 		.string	"mask"
 3502      00
 3503              	.LASF81:
 3504 015d 63684576 		.string	"chEvtBroadcastFlags"
 3504      7442726F 
 3504      61646361 
 3504      7374466C 
 3504      61677300 
 3505              	.LASF18:
 3506 0171 6576656E 		.string	"eventid_t"
 3506      7469645F 
 3506      7400
 3507              	.LASF64:
 3508 017b 4576656E 		.string	"EventSource"
 3508      74536F75 
 3508      72636500 
 3509              	.LASF66:
 3510 0187 65766861 		.string	"evhandler_t"
 3510      6E646C65 
 3510      725F7400 
 3511              	.LASF0:
 3512 0193 756E7369 		.string	"unsigned int"
 3512      676E6564 
 3512      20696E74 
 3512      00
 3513              	.LASF36:
 3514 01a0 705F6D73 		.string	"p_msgqueue"
 3514      67717565 
 3514      756500
 3515              	.LASF75:
 3516 01ab 63684576 		.string	"chEvtGetAndClearEvents"
 3516      74476574 
 3516      416E6443 
 3516      6C656172 
 3516      4576656E 
 3517              	.LASF96:
 3518 01c2 2E2E2F2E 		.string	"../../../os/kernel/src/chevents.c"
 3518      2E2F2E2E 
 3518      2F6F732F 
 3518      6B65726E 
 3518      656C2F73 
GAS LISTING /tmp/ccAXF10R.s 			page 75


 3519              	.LASF47:
 3520 01e4 636F6E74 		.string	"context"
 3520      65787400 
 3521              	.LASF8:
 3522 01ec 73686F72 		.string	"short unsigned int"
 3522      7420756E 
 3522      7369676E 
 3522      65642069 
 3522      6E7400
 3523              	.LASF73:
 3524 01ff 63684576 		.string	"chEvtRegisterMask"
 3524      74526567 
 3524      69737465 
 3524      724D6173 
 3524      6B00
 3525              	.LASF17:
 3526 0211 6D73675F 		.string	"msg_t"
 3526      7400
 3527              	.LASF60:
 3528 0217 656C5F6E 		.string	"el_next"
 3528      65787400 
 3529              	.LASF74:
 3530 021f 63684576 		.string	"chEvtUnregister"
 3530      74556E72 
 3530      65676973 
 3530      74657200 
 3531              	.LASF12:
 3532 022f 746D6F64 		.string	"tmode_t"
 3532      655F7400 
 3533              	.LASF43:
 3534 0237 54687265 		.string	"ThreadsList"
 3534      6164734C 
 3534      69737400 
 3535              	.LASF19:
 3536 0243 6576656E 		.string	"eventmask_t"
 3536      746D6173 
 3536      6B5F7400 
 3537              	.LASF55:
 3538 024f 4D757465 		.string	"Mutex"
 3538      7800
 3539              	.LASF44:
 3540 0255 73697A65 		.string	"sizetype"
 3540      74797065 
 3540      00
 3541              	.LASF83:
 3542 025e 63684576 		.string	"chEvtDispatch"
 3542      74446973 
 3542      70617463 
 3542      6800
 3543              	.LASF28:
 3544 026c 705F6F6C 		.string	"p_older"
 3544      64657200 
 3545              	.LASF50:
 3546 0274 725F6374 		.string	"r_ctx"
 3546      7800
 3547              	.LASF42:
 3548 027a 54687265 		.string	"ThreadsQueue"
GAS LISTING /tmp/ccAXF10R.s 			page 76


 3548      61647351 
 3548      75657565 
 3548      00
 3549              	.LASF89:
 3550 0287 74696D65 		.string	"time"
 3550      00
 3551              	.LASF87:
 3552 028c 63684576 		.string	"chEvtWaitAll"
 3552      74576169 
 3552      74416C6C 
 3552      00
 3553              	.LASF53:
 3554 0299 725F6375 		.string	"r_current"
 3554      7272656E 
 3554      7400
 3555              	.LASF52:
 3556 02a3 725F6F6C 		.string	"r_older"
 3556      64657200 
 3557              	.LASF62:
 3558 02ab 656C5F6D 		.string	"el_mask"
 3558      61736B00 
 3559              	.LASF84:
 3560 02b3 68616E64 		.string	"handlers"
 3560      6C657273 
 3560      00
 3561              	.LASF14:
 3562 02bc 74726566 		.string	"trefs_t"
 3562      735F7400 
 3563              	.LASF24:
 3564 02c4 705F7072 		.string	"p_prev"
 3564      657600
 3565              	.LASF16:
 3566 02cb 74707269 		.string	"tprio_t"
 3566      6F5F7400 
 3567              	.LASF11:
 3568 02d3 5F426F6F 		.string	"_Bool"
 3568      6C00
 3569              	.LASF5:
 3570 02d9 696E7433 		.string	"int32_t"
 3570      325F7400 
 3571              	.LASF7:
 3572 02e1 756E7369 		.string	"unsigned char"
 3572      676E6564 
 3572      20636861 
 3572      7200
 3573              	.LASF85:
 3574 02ef 63684576 		.string	"chEvtWaitOne"
 3574      74576169 
 3574      744F6E65 
 3574      00
 3575              	.LASF95:
 3576 02fc 474E5520 		.string	"GNU C 4.8.2 -m32 -mtune=generic -march=i686 -ggdb -O2 -fomit-frame-pointer -fstack-protec
 3576      4320342E 
 3576      382E3220 
 3576      2D6D3332 
 3576      202D6D74 
 3577              	.LASF61:
GAS LISTING /tmp/ccAXF10R.s 			page 77


 3578 0359 656C5F6C 		.string	"el_listener"
 3578      69737465 
 3578      6E657200 
 3579              	.LASF63:
 3580 0365 656C5F66 		.string	"el_flags"
 3580      6C616773 
 3580      00
 3581              	.LASF39:
 3582 036e 705F6D74 		.string	"p_mtxlist"
 3582      786C6973 
 3582      7400
 3583              	.LASF3:
 3584 0378 73686F72 		.string	"short int"
 3584      7420696E 
 3584      7400
 3585              	.LASF30:
 3586 0382 705F7374 		.string	"p_state"
 3586      61746500 
 3587              	.LASF33:
 3588 038a 705F7072 		.string	"p_preempt"
 3588      65656D70 
 3588      7400
 3589              	.LASF49:
 3590 0394 725F7072 		.string	"r_prio"
 3590      696F00
 3591              	.LASF82:
 3592 039b 63684576 		.string	"chEvtGetAndClearFlagsI"
 3592      74476574 
 3592      416E6443 
 3592      6C656172 
 3592      466C6167 
 3593              	.LASF70:
 3594 03b2 65776D61 		.string	"ewmask"
 3594      736B00
 3595              	.LASF23:
 3596 03b9 705F6E65 		.string	"p_next"
 3596      787400
 3597              	.LASF31:
 3598 03c0 705F666C 		.string	"p_flags"
 3598      61677300 
 3599              	.LASF22:
 3600 03c8 54687265 		.string	"Thread"
 3600      616400
 3601              	.LASF93:
 3602 03cf 63685363 		.string	"chSchGoSleepS"
 3602      68476F53 
 3602      6C656570 
 3602      5300
 3603              	.LASF38:
 3604 03dd 705F6570 		.string	"p_epending"
 3604      656E6469 
 3604      6E6700
 3605              	.LASF9:
 3606 03e8 75696E74 		.string	"uint32_t"
 3606      33325F74 
 3606      00
 3607              	.LASF48:
GAS LISTING /tmp/ccAXF10R.s 			page 78


 3608 03f1 725F7175 		.string	"r_queue"
 3608      65756500 
 3609              	.LASF99:
 3610 03f9 63685363 		.string	"chSchReadyI"
 3610      68526561 
 3610      64794900 
 3611              	.LASF71:
 3612 0405 63686172 		.string	"char"
 3612      00
 3613              	.LASF21:
 3614 040a 73797374 		.string	"systime_t"
 3614      696D655F 
 3614      7400
 3615              	.LASF40:
 3616 0414 705F7265 		.string	"p_realprio"
 3616      616C7072 
 3616      696F00
 3617              	.LASF34:
 3618 041f 705F7469 		.string	"p_time"
 3618      6D6500
 3619              	.LASF46:
 3620 0426 696E7463 		.string	"intctx"
 3620      747800
 3621              	.LASF20:
 3622 042d 666C6167 		.string	"flagsmask_t"
 3622      736D6173 
 3622      6B5F7400 
 3623              	.LASF32:
 3624 0439 705F7265 		.string	"p_refs"
 3624      667300
 3625              	.LASF54:
 3626 0440 52656164 		.string	"ReadyList"
 3626      794C6973 
 3626      7400
 3627              	.LASF98:
 3628 044a 726C6973 		.string	"rlist"
 3628      7400
 3629              	.LASF6:
 3630 0450 75696E74 		.string	"uint8_t"
 3630      385F7400 
 3631              	.LASF78:
 3632 0458 666C6167 		.string	"flags"
 3632      7300
 3633              	.LASF59:
 3634 045e 4576656E 		.string	"EventListener"
 3634      744C6973 
 3634      74656E65 
 3634      7200
 3635              	.LASF69:
 3636 046c 77746F62 		.string	"wtobjp"
 3636      6A7000
 3637              	.LASF29:
 3638 0473 705F6E61 		.string	"p_name"
 3638      6D6500
 3639              	.LASF65:
 3640 047a 65735F6E 		.string	"es_next"
 3640      65787400 
GAS LISTING /tmp/ccAXF10R.s 			page 79


 3641              	.LASF77:
 3642 0482 63684576 		.string	"chEvtGetAndClearFlags"
 3642      74476574 
 3642      416E6443 
 3642      6C656172 
 3642      466C6167 
 3643              	.LASF45:
 3644 0498 72656778 		.string	"regx86"
 3644      383600
 3645              	.LASF57:
 3646 049f 6D5F6F77 		.string	"m_owner"
 3646      6E657200 
 3647              	.LASF26:
 3648 04a7 705F6374 		.string	"p_ctx"
 3648      7800
 3649              	.LASF35:
 3650 04ad 705F7761 		.string	"p_waiting"
 3650      6974696E 
 3650      6700
 3651              	.LASF92:
 3652 04b7 63684576 		.string	"chEvtSignalI"
 3652      74536967 
 3652      6E616C49 
 3652      00
 3653              		.ident	"GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"
 3654              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccAXF10R.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 chevents.c
     /tmp/ccAXF10R.s:61     .text:0000000000000000 chEvtRegisterMask
     /tmp/ccAXF10R.s:103    .text:0000000000000030 chEvtUnregister
     /tmp/ccAXF10R.s:170    .text:0000000000000060 chEvtGetAndClearEvents
     /tmp/ccAXF10R.s:217    .text:0000000000000080 chEvtAddEvents
     /tmp/ccAXF10R.s:249    .text:00000000000000a0 chEvtGetAndClearFlags
     /tmp/ccAXF10R.s:281    .text:00000000000000c0 chEvtSignalI
     /tmp/ccAXF10R.s:361    .text:0000000000000120 chEvtBroadcastFlagsI
     /tmp/ccAXF10R.s:426    .text:0000000000000160 chEvtSignal
     /tmp/ccAXF10R.s:465    .text:0000000000000190 chEvtBroadcastFlags
     /tmp/ccAXF10R.s:504    .text:00000000000001c0 chEvtGetAndClearFlagsI
     /tmp/ccAXF10R.s:524    .text:00000000000001d0 chEvtDispatch
     /tmp/ccAXF10R.s:614    .text:0000000000000220 chEvtWaitOne
     /tmp/ccAXF10R.s:690    .text:0000000000000270 chEvtWaitAny
     /tmp/ccAXF10R.s:761    .text:00000000000002b0 chEvtWaitAll
     /tmp/ccAXF10R.s:829    .text:0000000000000300 chEvtWaitOneTimeout
     /tmp/ccAXF10R.s:945    .text:0000000000000370 chEvtWaitAnyTimeout
     /tmp/ccAXF10R.s:1054   .text:00000000000003e0 chEvtWaitAllTimeout

UNDEFINED SYMBOLS
rlist
chSchReadyI
chSchRescheduleS
chSchGoSleepS
chSchGoSleepTimeoutS
